

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Jan 07 01:12:37 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33  0000                     
    34                           ; Version 1.44
    35                           ; Generated 14/09/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  0018B2                     __pidataCOMRAM:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _surface_six
    74  0018B2  0006               	dw	6
    75  0018B4  0006               	dw	6
    76  0018B6  0006               	dw	6
    77  0018B8  0006               	dw	6
    78                           
    79                           ;initializer for _surface_five
    80  0018BA  0005               	dw	5
    81  0018BC  0005               	dw	5
    82  0018BE  0005               	dw	5
    83  0018C0  0005               	dw	5
    84                           
    85                           ;initializer for _surface_four
    86  0018C2  0004               	dw	4
    87  0018C4  0004               	dw	4
    88  0018C6  0004               	dw	4
    89  0018C8  0004               	dw	4
    90                           
    91                           ;initializer for _surface_three
    92  0018CA  0003               	dw	3
    93  0018CC  0003               	dw	3
    94  0018CE  0003               	dw	3
    95  0018D0  0003               	dw	3
    96                           
    97                           ;initializer for _surface_two
    98  0018D2  0002               	dw	2
    99  0018D4  0002               	dw	2
   100  0018D6  0002               	dw	2
   101  0018D8  0002               	dw	2
   102                           
   103                           ;initializer for _surface_one
   104  0018DA  0001               	dw	1
   105  0018DC  0001               	dw	1
   106  0018DE  0001               	dw	1
   107  0018E0  0001               	dw	1
   108                           
   109                           ;initializer for _randx
   110  0018E2  0001               	dw	1
   111  0018E4  0000               	dw	0
   112                           
   113                           	psect	smallconst
   114  000600                     __psmallconst:
   115                           	opt stack 0
   116  000600  00                 	db	0
   117  000601                     _native_surface_six:
   118                           	opt stack 0
   119  000601  0006               	dw	6
   120  000603  0006               	dw	6
   121  000605  0006               	dw	6
   122  000607  0006               	dw	6
   123  000609                     __end_of_native_surface_six:
   124                           	opt stack 0
   125  000609                     _native_surface_five:
   126                           	opt stack 0
   127  000609  0005               	dw	5
   128  00060B  0005               	dw	5
   129  00060D  0005               	dw	5
   130  00060F  0005               	dw	5
   131  000611                     __end_of_native_surface_five:
   132                           	opt stack 0
   133  000611                     _native_surface_four:
   134                           	opt stack 0
   135  000611  0004               	dw	4
   136  000613  0004               	dw	4
   137  000615  0004               	dw	4
   138  000617  0004               	dw	4
   139  000619                     __end_of_native_surface_four:
   140                           	opt stack 0
   141  000619                     _native_surface_three:
   142                           	opt stack 0
   143  000619  0003               	dw	3
   144  00061B  0003               	dw	3
   145  00061D  0003               	dw	3
   146  00061F  0003               	dw	3
   147  000621                     __end_of_native_surface_three:
   148                           	opt stack 0
   149  000621                     _native_surface_two:
   150                           	opt stack 0
   151  000621  0002               	dw	2
   152  000623  0002               	dw	2
   153  000625  0002               	dw	2
   154  000627  0002               	dw	2
   155  000629                     __end_of_native_surface_two:
   156                           	opt stack 0
   157  000629                     _native_surface_one:
   158                           	opt stack 0
   159  000629  0001               	dw	1
   160  00062B  0001               	dw	1
   161  00062D  0001               	dw	1
   162  00062F  0001               	dw	1
   163  000631                     __end_of_native_surface_one:
   164                           	opt stack 0
   165  0000                     _TMR0	set	4054
   166  0000                     _PORTDbits	set	3971
   167  0000                     _PORTBbits	set	3969
   168  0000                     _PORTCbits	set	3970
   169  0000                     _TRISCbits	set	3988
   170  0000                     _TRISDbits	set	3989
   171  0000                     _TRISBbits	set	3987
   172                           
   173                           ; #config settings
   174  000631  00                 	db	0	; dummy byte at the end
   175  0000                     
   176                           	psect	cinit
   177  00187C                     __pcinit:
   178                           	opt stack 0
   179  00187C                     start_initialization:
   180                           	opt stack 0
   181  00187C                     __initialization:
   182                           	opt stack 0
   183                           
   184                           ; Initialize objects allocated to COMRAM (52 bytes)
   185                           ; load TBLPTR registers with __pidataCOMRAM
   186  00187C  0EB2               	movlw	low __pidataCOMRAM
   187  00187E  6EF6               	movwf	tblptrl,c
   188  001880  0E18               	movlw	high __pidataCOMRAM
   189  001882  6EF7               	movwf	tblptrh,c
   190  001884  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   191  001886  6EF8               	movwf	tblptru,c
   192  001888  EE00  F001         	lfsr	0,__pdataCOMRAM
   193  00188C  EE10 F034          	lfsr	1,52
   194  001890                     copy_data0:
   195  001890  0009               	tblrd		*+
   196  001892  CFF5 FFEE          	movff	tablat,postinc0
   197  001896  50E5               	movf	postdec1,w,c
   198  001898  50E1               	movf	fsr1l,w,c
   199  00189A  E1FA               	bnz	copy_data0
   200                           
   201                           ; Clear objects allocated to COMRAM (8 bytes)
   202  00189C  EE00  F053         	lfsr	0,__pbssCOMRAM
   203  0018A0  0E08               	movlw	8
   204  0018A2                     clear_0:
   205  0018A2  6AEE               	clrf	postinc0,c
   206  0018A4  06E8               	decf	wreg,f,c
   207  0018A6  E1FD               	bnz	clear_0
   208  0018A8                     end_of_initialization:
   209                           	opt stack 0
   210  0018A8                     __end_of__initialization:
   211                           	opt stack 0
   212  0018A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   213  0018AA  6EF8               	movwf	tblptru,c
   214  0018AC  0100               	movlb	0
   215  0018AE  EFBD  F00A         	goto	_main	;jump to C main() function
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           postdec1	equ	0xFE5
   223                           fsr1l	equ	0xFE1
   224                           
   225                           	psect	bssCOMRAM
   226  000053                     __pbssCOMRAM:
   227                           	opt stack 0
   228  000053                     _temp:
   229                           	opt stack 0
   230  000053                     	ds	8
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	dataCOMRAM
   241  000001                     __pdataCOMRAM:
   242                           	opt stack 0
   243  000001                     _surface_six:
   244                           	opt stack 0
   245  000001                     	ds	8
   246  000009                     _surface_five:
   247                           	opt stack 0
   248  000009                     	ds	8
   249  000011                     _surface_four:
   250                           	opt stack 0
   251  000011                     	ds	8
   252  000019                     _surface_three:
   253                           	opt stack 0
   254  000019                     	ds	8
   255  000021                     _surface_two:
   256                           	opt stack 0
   257  000021                     	ds	8
   258  000029                     _surface_one:
   259                           	opt stack 0
   260  000029                     	ds	8
   261  000031                     _randx:
   262                           	opt stack 0
   263  000031                     	ds	4
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           postdec1	equ	0xFE5
   271                           fsr1l	equ	0xFE1
   272                           
   273                           	psect	cstackCOMRAM
   274  000035                     __pcstackCOMRAM:
   275                           	opt stack 0
   276  000035                     ?_check:
   277                           	opt stack 0
   278  000035                     ?___lmul:
   279                           	opt stack 0
   280  000035                     U@i:
   281                           	opt stack 0
   282  000035                     Ui@i:
   283                           	opt stack 0
   284  000035                     D@i:
   285                           	opt stack 0
   286  000035                     Di@i:
   287                           	opt stack 0
   288  000035                     L@i:
   289                           	opt stack 0
   290  000035                     Li@i:
   291                           	opt stack 0
   292  000035                     R@i:
   293                           	opt stack 0
   294  000035                     Ri@i:
   295                           	opt stack 0
   296  000035                     F@i:
   297                           	opt stack 0
   298  000035                     Fi@i:
   299                           	opt stack 0
   300  000035                     B@i:
   301                           	opt stack 0
   302  000035                     Bi@i:
   303                           	opt stack 0
   304  000035                     restore@i:
   305                           	opt stack 0
   306  000035                     srand@x:
   307                           	opt stack 0
   308  000035                     ___lmul@multiplier:
   309                           	opt stack 0
   310                           
   311                           ; 4 bytes @ 0x0
   312  000035                     	ds	2
   313  000037                     
   314                           ; 1 bytes @ 0x2
   315  000037                     	ds	2
   316  000039                     check@i:
   317                           	opt stack 0
   318  000039                     ___lmul@multiplicand:
   319                           	opt stack 0
   320                           
   321                           ; 4 bytes @ 0x4
   322  000039                     	ds	4
   323  00003D                     ___lmul@product:
   324                           	opt stack 0
   325                           
   326                           ; 4 bytes @ 0x8
   327  00003D                     	ds	4
   328  000041                     ?_rand:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0xC
   332  000041                     	ds	2
   333  000043                     ?___awmod:
   334                           	opt stack 0
   335  000043                     ___awmod@dividend:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0xE
   339  000043                     	ds	2
   340  000045                     ___awmod@divisor:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x10
   344  000045                     	ds	2
   345  000047                     ___awmod@counter:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x12
   349  000047                     	ds	1
   350  000048                     ___awmod@sign:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x13
   354  000048                     	ds	1
   355  000049                     ??_scramble:
   356                           
   357                           ; 1 bytes @ 0x14
   358  000049                     	ds	2
   359  00004B                     scramble@random:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x16
   363  00004B                     	ds	2
   364  00004D                     scramble@i:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x18
   368  00004D                     	ds	2
   369  00004F                     main@pause:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x1A
   373  00004F                     	ds	2
   374  000051                     main@solved:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x1C
   378  000051                     	ds	2
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 269 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;  solved          2   28[COMRAM] int 
   398 ;;  pause           2   26[COMRAM] int 
   399 ;;  j               2    0        int 
   400 ;;  i               2    0        int 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   410 ;;      Params:         0       0       0       0       0       0       0
   411 ;;      Locals:         4       0       0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0
   413 ;;      Totals:         4       0       0       0       0       0       0
   414 ;;Total ram usage:        4 bytes
   415 ;; Hardware stack levels required when called:    3
   416 ;; This function calls:
   417 ;;		_B
   418 ;;		_Bi
   419 ;;		_D
   420 ;;		_Di
   421 ;;		_F
   422 ;;		_Fi
   423 ;;		_L
   424 ;;		_Li
   425 ;;		_R
   426 ;;		_Ri
   427 ;;		_U
   428 ;;		_Ui
   429 ;;		_check
   430 ;;		_restore
   431 ;;		_scramble
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text0
   438  00157A                     __ptext0:
   439                           	opt stack 0
   440  00157A                     _main:
   441                           	opt stack 28
   442                           
   443                           ;main.c: 271: TRISBbits.RB7 = 1;
   444                           
   445                           ;incstack = 0
   446  00157A  8E93               	bsf	3987,7,c	;volatile
   447                           
   448                           ;main.c: 272: TRISBbits.RB6 = 1;
   449  00157C  8C93               	bsf	3987,6,c	;volatile
   450                           
   451                           ;main.c: 273: TRISBbits.RB5 = 1;
   452  00157E  8A93               	bsf	3987,5,c	;volatile
   453                           
   454                           ;main.c: 274: TRISBbits.RB4 = 1;
   455  001580  8893               	bsf	3987,4,c	;volatile
   456                           
   457                           ;main.c: 275: TRISBbits.RB3 = 1;
   458  001582  8693               	bsf	3987,3,c	;volatile
   459                           
   460                           ;main.c: 276: TRISBbits.RB2 = 1;
   461  001584  8493               	bsf	3987,2,c	;volatile
   462                           
   463                           ;main.c: 277: TRISBbits.RB1 = 1;
   464  001586  8293               	bsf	3987,1,c	;volatile
   465                           
   466                           ;main.c: 278: TRISBbits.RB0 = 1;
   467  001588  8093               	bsf	3987,0,c	;volatile
   468                           
   469                           ;main.c: 279: TRISDbits.RD7 = 1;
   470  00158A  8E95               	bsf	3989,7,c	;volatile
   471                           
   472                           ;main.c: 280: TRISDbits.RD6 = 1;
   473  00158C  8C95               	bsf	3989,6,c	;volatile
   474                           
   475                           ;main.c: 281: TRISDbits.RD5 = 1;
   476  00158E  8A95               	bsf	3989,5,c	;volatile
   477                           
   478                           ;main.c: 282: TRISDbits.RD4 = 1;
   479  001590  8895               	bsf	3989,4,c	;volatile
   480                           
   481                           ;main.c: 283: TRISCbits.RC7 = 1;
   482  001592  8E94               	bsf	3988,7,c	;volatile
   483                           
   484                           ;main.c: 285: int i, j;
   485                           ;main.c: 286: int solved = 1;
   486  001594  0E00               	movlw	0
   487  001596  6E52               	movwf	main@solved+1,c
   488  001598  0E01               	movlw	1
   489  00159A  6E51               	movwf	main@solved,c
   490                           
   491                           ;main.c: 287: int pause = 0;
   492  00159C  0E00               	movlw	0
   493  00159E  6E50               	movwf	main@pause+1,c
   494  0015A0  0E00               	movlw	0
   495  0015A2  6E4F               	movwf	main@pause,c
   496  0015A4                     
   497                           ;main.c: 289: if(PORTCbits.RC7 == 0) {
   498  0015A4  BE82               	btfsc	3970,7,c	;volatile
   499  0015A6  D05F               	goto	l151
   500                           
   501                           ;main.c: 290: scramble();
   502  0015A8  EC38  F00B         	call	_scramble	;wreg free
   503                           
   504                           ;main.c: 291: solved = 0;
   505  0015AC  0E00               	movlw	0
   506  0015AE  6E52               	movwf	main@solved+1,c
   507  0015B0  0E00               	movlw	0
   508  0015B2  6E51               	movwf	main@solved,c
   509                           
   510                           ;main.c: 292: }
   511                           ;main.c: 293: while(solved == 0) {
   512  0015B4  D058               	goto	l151
   513  0015B6                     l152:
   514                           
   515                           ;main.c: 294: if(PORTBbits.RB7 == 0) {
   516  0015B6  BE81               	btfsc	3969,7,c	;volatile
   517  0015B8  D003               	goto	l153
   518                           
   519                           ;main.c: 295: U();
   520  0015BA  EC21  F007         	call	_U	;wreg free
   521                           
   522                           ;main.c: 296: }
   523  0015BE  D04D               	goto	u950
   524  0015C0                     l153:
   525                           
   526                           ;main.c: 297: else if(PORTBbits.RB6 == 0) {
   527  0015C0  BC81               	btfsc	3969,6,c	;volatile
   528  0015C2  D003               	goto	l155
   529                           
   530                           ;main.c: 298: Ui();
   531  0015C4  EC9D  F006         	call	_Ui	;wreg free
   532                           
   533                           ;main.c: 299: }
   534  0015C8  D048               	goto	u950
   535  0015CA                     l155:
   536                           
   537                           ;main.c: 300: else if(PORTBbits.RB5 == 0) {
   538  0015CA  BA81               	btfsc	3969,5,c	;volatile
   539  0015CC  D003               	goto	l157
   540                           
   541                           ;main.c: 301: D();
   542  0015CE  EC31  F009         	call	_D	;wreg free
   543                           
   544                           ;main.c: 302: }
   545  0015D2  D043               	goto	u950
   546  0015D4                     l157:
   547                           
   548                           ;main.c: 303: else if(PORTBbits.RB4 == 0) {
   549  0015D4  B881               	btfsc	3969,4,c	;volatile
   550  0015D6  D003               	goto	l159
   551                           
   552                           ;main.c: 304: Di();
   553  0015D8  ECAD  F008         	call	_Di	;wreg free
   554                           
   555                           ;main.c: 305: }
   556  0015DC  D03E               	goto	u950
   557  0015DE                     l159:
   558                           
   559                           ;main.c: 306: else if(PORTBbits.RB3 == 0) {
   560  0015DE  B681               	btfsc	3969,3,c	;volatile
   561  0015E0  D003               	goto	l161
   562                           
   563                           ;main.c: 307: L();
   564  0015E2  EC17  F006         	call	_L	;wreg free
   565                           
   566                           ;main.c: 308: }
   567  0015E6  D039               	goto	u950
   568  0015E8                     l161:
   569                           
   570                           ;main.c: 309: else if(PORTBbits.RB2 == 0) {
   571  0015E8  B481               	btfsc	3969,2,c	;volatile
   572  0015EA  D003               	goto	l163
   573                           
   574                           ;main.c: 310: Li();
   575  0015EC  EC91  F005         	call	_Li	;wreg free
   576                           
   577                           ;main.c: 311: }
   578  0015F0  D034               	goto	u950
   579  0015F2                     l163:
   580                           
   581                           ;main.c: 312: else if(PORTBbits.RB1 == 0) {
   582  0015F2  B281               	btfsc	3969,1,c	;volatile
   583  0015F4  D003               	goto	l165
   584                           
   585                           ;main.c: 313: R();
   586  0015F6  EC0B  F005         	call	_R	;wreg free
   587                           
   588                           ;main.c: 314: }
   589  0015FA  D02F               	goto	u950
   590  0015FC                     l165:
   591                           
   592                           ;main.c: 315: else if(PORTBbits.RB0 == 0) {
   593  0015FC  B081               	btfsc	3969,0,c	;volatile
   594  0015FE  D003               	goto	l167
   595                           
   596                           ;main.c: 316: Ri();
   597  001600  EC85  F004         	call	_Ri	;wreg free
   598                           
   599                           ;main.c: 317: }
   600  001604  D02A               	goto	u950
   601  001606                     l167:
   602                           
   603                           ;main.c: 318: else if(PORTDbits.RD7 == 0) {
   604  001606  BE83               	btfsc	3971,7,c	;volatile
   605  001608  D003               	goto	l169
   606                           
   607                           ;main.c: 319: F();
   608  00160A  EC29  F008         	call	_F	;wreg free
   609                           
   610                           ;main.c: 320: }
   611  00160E  D025               	goto	u950
   612  001610                     l169:
   613                           
   614                           ;main.c: 321: else if(PORTDbits.RD6 == 0) {
   615  001610  BC83               	btfsc	3971,6,c	;volatile
   616  001612  D003               	goto	l171
   617                           
   618                           ;main.c: 322: Fi();
   619  001614  ECA5  F007         	call	_Fi	;wreg free
   620                           
   621                           ;main.c: 323: }
   622  001618  D020               	goto	u950
   623  00161A                     l171:
   624                           
   625                           ;main.c: 324: else if(PORTDbits.RD5 == 0) {
   626  00161A  BA83               	btfsc	3971,5,c	;volatile
   627  00161C  D003               	goto	l173
   628                           
   629                           ;main.c: 325: B();
   630  00161E  EC39  F00A         	call	_B	;wreg free
   631                           
   632                           ;main.c: 326: }
   633  001622  D01B               	goto	u950
   634  001624                     l173:
   635                           
   636                           ;main.c: 327: else if(PORTDbits.RD4 == 0) {
   637  001624  B883               	btfsc	3971,4,c	;volatile
   638  001626  D003               	goto	l175
   639                           
   640                           ;main.c: 328: Bi();
   641  001628  ECB5  F009         	call	_Bi	;wreg free
   642                           
   643                           ;main.c: 329: }
   644  00162C  D016               	goto	u950
   645  00162E                     l175:
   646                           
   647                           ;main.c: 330: else if(PORTCbits.RC7 == 0) {
   648  00162E  BE82               	btfsc	3970,7,c	;volatile
   649  001630  D014               	goto	u950
   650                           
   651                           ;main.c: 332: pause = 1;
   652  001632  0E00               	movlw	0
   653  001634  6E50               	movwf	main@pause+1,c
   654  001636  0E01               	movlw	1
   655  001638  D00B               	goto	L1
   656  00163A                     l179:
   657                           
   658                           ;main.c: 334: if(PORTCbits.RC7 == 0) {
   659  00163A  BE82               	btfsc	3970,7,c	;volatile
   660  00163C  D00A               	goto	l180
   661                           
   662                           ;main.c: 335: restore();
   663  00163E  ECDF  F003         	call	_restore	;wreg free
   664                           
   665                           ;main.c: 336: solved = 1;
   666  001642  0E00               	movlw	0
   667  001644  6E52               	movwf	main@solved+1,c
   668  001646  0E01               	movlw	1
   669  001648  6E51               	movwf	main@solved,c
   670                           
   671                           ;main.c: 337: pause = 0;
   672  00164A  0E00               	movlw	0
   673  00164C  6E50               	movwf	main@pause+1,c
   674  00164E  0E00               	movlw	0
   675  001650                     L1:
   676  001650  6E4F               	movwf	main@pause,c
   677  001652                     l180:
   678  001652  044F               	decf	main@pause,w,c
   679  001654  1050               	iorwf	main@pause+1,w,c
   680  001656  B4D8               	btfsc	status,2,c
   681  001658  D7F0               	goto	l179
   682  00165A                     u950:
   683                           
   684                           ;main.c: 338: }
   685                           ;main.c: 339: }
   686                           ;main.c: 340: }
   687                           ;main.c: 341: solved = check();
   688  00165A  EC19  F003         	call	_check	;wreg free
   689  00165E  C035  F051         	movff	?_check,main@solved
   690  001662  C036  F052         	movff	?_check+1,main@solved+1
   691  001666                     l151:
   692  001666  5051               	movf	main@solved,w,c
   693  001668  1052               	iorwf	main@solved+1,w,c
   694  00166A  A4D8               	btfss	status,2,c
   695  00166C  D79B               	goto	l149
   696  00166E  D7A3               	goto	l152
   697  001670                     __end_of_main:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           postdec1	equ	0xFE5
   706                           fsr1l	equ	0xFE1
   707                           status	equ	0xFD8
   708                           
   709 ;; *************** function _scramble *****************
   710 ;; Defined at:
   711 ;;		line 184 in file "main.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  i               2   24[COMRAM] int 
   716 ;;  random          2   22[COMRAM] int 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   726 ;;      Params:         0       0       0       0       0       0       0
   727 ;;      Locals:         4       0       0       0       0       0       0
   728 ;;      Temps:          2       0       0       0       0       0       0
   729 ;;      Totals:         6       0       0       0       0       0       0
   730 ;;Total ram usage:        6 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    2
   733 ;; This function calls:
   734 ;;		_B
   735 ;;		_Bi
   736 ;;		_D
   737 ;;		_Di
   738 ;;		_F
   739 ;;		_Fi
   740 ;;		_L
   741 ;;		_Li
   742 ;;		_R
   743 ;;		_Ri
   744 ;;		_U
   745 ;;		_Ui
   746 ;;		___awmod
   747 ;;		_rand
   748 ;;		_srand
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text1
   755  001670                     __ptext1:
   756                           	opt stack 0
   757  001670                     _scramble:
   758                           	opt stack 28
   759                           
   760                           ;main.c: 186: int i;
   761                           ;main.c: 187: int random;
   762                           ;main.c: 188: srand(TMR0);
   763                           
   764                           ;incstack = 0
   765  001670  CFD6 F035          	movff	4054,srand@x	;volatile
   766  001674  CFD7 F036          	movff	4055,srand@x+1	;volatile
   767  001678  EC73  F00C         	call	_srand	;wreg free
   768                           
   769                           ;main.c: 189: for(i=1;i<=20;i++) {
   770  00167C  0E00               	movlw	0
   771  00167E  6E4E               	movwf	scramble@i+1,c
   772  001680  0E01               	movlw	1
   773  001682  6E4D               	movwf	scramble@i,c
   774  001684                     l1245:
   775  001684  BE4E               	btfsc	scramble@i+1,7,c
   776  001686  D006               	goto	l107
   777  001688  504E               	movf	scramble@i+1,w,c
   778  00168A  E16B               	bnz	l123
   779  00168C  0E15               	movlw	21
   780  00168E  5C4D               	subwf	scramble@i,w,c
   781  001690  B0D8               	btfsc	status,0,c
   782  001692  0012               	return	
   783  001694                     l107:
   784                           
   785                           ;main.c: 190: random = rand() % 12 + 1;
   786  001694  EC15  F00C         	call	_rand	;wreg free
   787  001698  C041  F043         	movff	?_rand,___awmod@dividend
   788  00169C  C042  F044         	movff	?_rand+1,___awmod@dividend+1
   789  0016A0  0E00               	movlw	0
   790  0016A2  6E46               	movwf	___awmod@divisor+1,c
   791  0016A4  0E0C               	movlw	12
   792  0016A6  6E45               	movwf	___awmod@divisor,c
   793  0016A8  ECB2  F00B         	call	___awmod	;wreg free
   794  0016AC  0E01               	movlw	1
   795  0016AE  2443               	addwf	?___awmod,w,c
   796  0016B0  6E4B               	movwf	scramble@random,c
   797  0016B2  0E00               	movlw	0
   798  0016B4  2044               	addwfc	?___awmod+1,w,c
   799  0016B6  6E4C               	movwf	scramble@random+1,c
   800                           
   801                           ;main.c: 191: switch(random) {
   802  0016B8  D024               	goto	l109
   803  0016BA                     
   804                           ;main.c: 193: U();
   805  0016BA  EC21  F007         	call	_U	;wreg free
   806                           
   807                           ;main.c: 194: break;
   808  0016BE  D04E               	goto	l111
   809  0016C0                     
   810                           ;main.c: 196: Ui();
   811  0016C0  EC9D  F006         	call	_Ui	;wreg free
   812                           
   813                           ;main.c: 197: break;
   814  0016C4  D04B               	goto	l111
   815  0016C6                     
   816                           ;main.c: 199: D();
   817  0016C6  EC31  F009         	call	_D	;wreg free
   818                           
   819                           ;main.c: 200: break;
   820  0016CA  D048               	goto	l111
   821  0016CC                     
   822                           ;main.c: 202: Di();
   823  0016CC  ECAD  F008         	call	_Di	;wreg free
   824                           
   825                           ;main.c: 203: break;
   826  0016D0  D045               	goto	l111
   827  0016D2                     
   828                           ;main.c: 205: L();
   829  0016D2  EC17  F006         	call	_L	;wreg free
   830                           
   831                           ;main.c: 206: break;
   832  0016D6  D042               	goto	l111
   833  0016D8                     
   834                           ;main.c: 208: Li();
   835  0016D8  EC91  F005         	call	_Li	;wreg free
   836                           
   837                           ;main.c: 209: break;
   838  0016DC  D03F               	goto	l111
   839  0016DE                     
   840                           ;main.c: 211: R();
   841  0016DE  EC0B  F005         	call	_R	;wreg free
   842                           
   843                           ;main.c: 212: break;
   844  0016E2  D03C               	goto	l111
   845  0016E4                     
   846                           ;main.c: 214: Ri();
   847  0016E4  EC85  F004         	call	_Ri	;wreg free
   848                           
   849                           ;main.c: 215: break;
   850  0016E8  D039               	goto	l111
   851  0016EA                     
   852                           ;main.c: 217: F();
   853  0016EA  EC29  F008         	call	_F	;wreg free
   854                           
   855                           ;main.c: 218: break;
   856  0016EE  D036               	goto	l111
   857  0016F0                     
   858                           ;main.c: 220: Fi();
   859  0016F0  ECA5  F007         	call	_Fi	;wreg free
   860                           
   861                           ;main.c: 221: break;
   862  0016F4  D033               	goto	l111
   863  0016F6                     
   864                           ;main.c: 223: B();
   865  0016F6  EC39  F00A         	call	_B	;wreg free
   866                           
   867                           ;main.c: 224: break;
   868  0016FA  D030               	goto	l111
   869  0016FC                     
   870                           ;main.c: 226: Bi();
   871  0016FC  ECB5  F009         	call	_Bi	;wreg free
   872                           
   873                           ;main.c: 228: }
   874                           
   875                           ;main.c: 227: break;
   876  001700  D02D               	goto	l111
   877  001702                     l109:
   878  001702  C04B  F049         	movff	scramble@random,??_scramble
   879  001706  C04C  F04A         	movff	scramble@random+1,??_scramble+1
   880                           
   881                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   882                           ; Switch size 1, requested type "space"
   883                           ; Number of cases is 1, Range of values is 0 to 0
   884                           ; switch strategies available:
   885                           ; Name         Instructions Cycles
   886                           ; simple_byte            4     3 (average)
   887                           ;	Chosen strategy is simple_byte
   888  00170A  504A               	movf	??_scramble+1,w,c
   889  00170C  0A00               	xorlw	0	; case 0
   890  00170E  A4D8               	btfss	status,2,c
   891  001710  D025               	goto	l111
   892                           
   893                           ; Switch size 1, requested type "space"
   894                           ; Number of cases is 12, Range of values is 1 to 12
   895                           ; switch strategies available:
   896                           ; Name         Instructions Cycles
   897                           ; simple_byte           37    19 (average)
   898                           ;	Chosen strategy is simple_byte
   899  001712  5049               	movf	??_scramble,w,c
   900  001714  0A01               	xorlw	1	; case 1
   901  001716  B4D8               	btfsc	status,2,c
   902  001718  D7D0               	goto	l110
   903  00171A  0A03               	xorlw	3	; case 2
   904  00171C  B4D8               	btfsc	status,2,c
   905  00171E  D7D0               	goto	l112
   906  001720  0A01               	xorlw	1	; case 3
   907  001722  B4D8               	btfsc	status,2,c
   908  001724  D7D0               	goto	l113
   909  001726  0A07               	xorlw	7	; case 4
   910  001728  B4D8               	btfsc	status,2,c
   911  00172A  D7D0               	goto	l114
   912  00172C  0A01               	xorlw	1	; case 5
   913  00172E  B4D8               	btfsc	status,2,c
   914  001730  D7D0               	goto	l115
   915  001732  0A03               	xorlw	3	; case 6
   916  001734  B4D8               	btfsc	status,2,c
   917  001736  D7D0               	goto	l116
   918  001738  0A01               	xorlw	1	; case 7
   919  00173A  B4D8               	btfsc	status,2,c
   920  00173C  D7D0               	goto	l117
   921  00173E  0A0F               	xorlw	15	; case 8
   922  001740  B4D8               	btfsc	status,2,c
   923  001742  D7D0               	goto	l118
   924  001744  0A01               	xorlw	1	; case 9
   925  001746  B4D8               	btfsc	status,2,c
   926  001748  D7D0               	goto	l119
   927  00174A  0A03               	xorlw	3	; case 10
   928  00174C  B4D8               	btfsc	status,2,c
   929  00174E  D7D0               	goto	l120
   930  001750  0A01               	xorlw	1	; case 11
   931  001752  B4D8               	btfsc	status,2,c
   932  001754  D7D0               	goto	l121
   933  001756  0A07               	xorlw	7	; case 12
   934  001758  B4D8               	btfsc	status,2,c
   935  00175A  D7D0               	goto	l122
   936  00175C                     l111:
   937  00175C  4A4D               	infsnz	scramble@i,f,c
   938  00175E  2A4E               	incf	scramble@i+1,f,c
   939  001760  D791               	goto	l1245
   940  001762                     l123:
   941  001762  0012               	return		;funcret
   942  001764                     __end_of_scramble:
   943                           	opt stack 0
   944                           tblptru	equ	0xFF8
   945                           tblptrh	equ	0xFF7
   946                           tblptrl	equ	0xFF6
   947                           tablat	equ	0xFF5
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           postdec1	equ	0xFE5
   951                           fsr1l	equ	0xFE1
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function _srand *****************
   955 ;; Defined at:
   956 ;;		line 6 in file "E:\Program Files E\Microchip\xc8\v1.44\sources\common\rand.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  x               2    0[COMRAM] unsigned int 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		status,2
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         2       0       0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0
   973 ;;      Totals:         2       0       0       0       0       0       0
   974 ;;Total ram usage:        2 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_scramble
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text2
   984  0018E6                     __ptext2:
   985                           	opt stack 0
   986  0018E6                     _srand:
   987                           	opt stack 29
   988                           
   989                           ;incstack = 0
   990  0018E6  C035  F031         	movff	srand@x,_randx
   991  0018EA  C036  F032         	movff	srand@x+1,_randx+1
   992  0018EE  6A33               	clrf	_randx+2,c
   993  0018F0  6A34               	clrf	_randx+3,c
   994  0018F2  0012               	return		;funcret
   995  0018F4                     __end_of_srand:
   996                           	opt stack 0
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           postinc0	equ	0xFEE
  1002                           wreg	equ	0xFE8
  1003                           postdec1	equ	0xFE5
  1004                           fsr1l	equ	0xFE1
  1005                           status	equ	0xFD8
  1006                           
  1007 ;; *************** function _rand *****************
  1008 ;; Defined at:
  1009 ;;		line 12 in file "E:\Program Files E\Microchip\xc8\v1.44\sources\common\rand.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2   12[COMRAM] int 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1023 ;;      Params:         2       0       0       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0
  1026 ;;      Totals:         2       0       0       0       0       0       0
  1027 ;;Total ram usage:        2 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    1
  1030 ;; This function calls:
  1031 ;;		___lmul
  1032 ;; This function is called by:
  1033 ;;		_scramble
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text3
  1038  00182A                     __ptext3:
  1039                           	opt stack 0
  1040  00182A                     _rand:
  1041                           	opt stack 28
  1042                           
  1043                           ;incstack = 0
  1044  00182A  C031  F035         	movff	_randx,___lmul@multiplier
  1045  00182E  C032  F036         	movff	_randx+1,___lmul@multiplier+1
  1046  001832  C033  F037         	movff	_randx+2,___lmul@multiplier+2
  1047  001836  C034  F038         	movff	_randx+3,___lmul@multiplier+3
  1048  00183A  0E6D               	movlw	109
  1049  00183C  6E39               	movwf	___lmul@multiplicand,c
  1050  00183E  0E4E               	movlw	78
  1051  001840  6E3A               	movwf	___lmul@multiplicand+1,c
  1052  001842  0EC6               	movlw	198
  1053  001844  6E3B               	movwf	___lmul@multiplicand+2,c
  1054  001846  0E41               	movlw	65
  1055  001848  6E3C               	movwf	___lmul@multiplicand+3,c
  1056  00184A  ECEA  F00B         	call	___lmul	;wreg free
  1057  00184E  C035  F031         	movff	?___lmul,_randx
  1058  001852  C036  F032         	movff	?___lmul+1,_randx+1
  1059  001856  C037  F033         	movff	?___lmul+2,_randx+2
  1060  00185A  C038  F034         	movff	?___lmul+3,_randx+3
  1061  00185E  0E39               	movlw	57
  1062  001860  2631               	addwf	_randx,f,c
  1063  001862  0E30               	movlw	48
  1064  001864  2232               	addwfc	_randx+1,f,c
  1065  001866  0E00               	movlw	0
  1066  001868  2233               	addwfc	_randx+2,f,c
  1067  00186A  0E00               	movlw	0
  1068  00186C  2234               	addwfc	_randx+3,f,c
  1069  00186E  0EFF               	movlw	255
  1070  001870  1433               	andwf	_randx+2,w,c
  1071  001872  6E41               	movwf	?_rand,c
  1072  001874  0E7F               	movlw	127
  1073  001876  1434               	andwf	_randx+3,w,c
  1074  001878  6E42               	movwf	?_rand+1,c
  1075  00187A  0012               	return	
  1076  00187C                     __end_of_rand:
  1077                           	opt stack 0
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1l	equ	0xFE1
  1086                           status	equ	0xFD8
  1087                           
  1088 ;; *************** function ___lmul *****************
  1089 ;; Defined at:
  1090 ;;		line 15 in file "E:\Program Files E\Microchip\xc8\v1.44\sources\common\Umul32.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  multiplier      4    0[COMRAM] unsigned long 
  1093 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  product         4    8[COMRAM] unsigned long 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  4    0[COMRAM] unsigned long 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1105 ;;      Params:         8       0       0       0       0       0       0
  1106 ;;      Locals:         4       0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0
  1108 ;;      Totals:        12       0       0       0       0       0       0
  1109 ;;Total ram usage:       12 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_rand
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text4
  1119  0017D4                     __ptext4:
  1120                           	opt stack 0
  1121  0017D4                     ___lmul:
  1122                           	opt stack 28
  1123                           
  1124                           ;incstack = 0
  1125  0017D4  0E00               	movlw	0
  1126  0017D6  6E3D               	movwf	___lmul@product,c
  1127  0017D8  0E00               	movlw	0
  1128  0017DA  6E3E               	movwf	___lmul@product+1,c
  1129  0017DC  0E00               	movlw	0
  1130  0017DE  6E3F               	movwf	___lmul@product+2,c
  1131  0017E0  0E00               	movlw	0
  1132  0017E2  6E40               	movwf	___lmul@product+3,c
  1133  0017E4  A035               	btfss	___lmul@multiplier,0,c
  1134  0017E6  D008               	goto	l198
  1135  0017E8  5039               	movf	___lmul@multiplicand,w,c
  1136  0017EA  263D               	addwf	___lmul@product,f,c
  1137  0017EC  503A               	movf	___lmul@multiplicand+1,w,c
  1138  0017EE  223E               	addwfc	___lmul@product+1,f,c
  1139  0017F0  503B               	movf	___lmul@multiplicand+2,w,c
  1140  0017F2  223F               	addwfc	___lmul@product+2,f,c
  1141  0017F4  503C               	movf	___lmul@multiplicand+3,w,c
  1142  0017F6  2240               	addwfc	___lmul@product+3,f,c
  1143  0017F8                     l198:
  1144  0017F8  90D8               	bcf	status,0,c
  1145  0017FA  3639               	rlcf	___lmul@multiplicand,f,c
  1146  0017FC  363A               	rlcf	___lmul@multiplicand+1,f,c
  1147  0017FE  363B               	rlcf	___lmul@multiplicand+2,f,c
  1148  001800  363C               	rlcf	___lmul@multiplicand+3,f,c
  1149  001802  90D8               	bcf	status,0,c
  1150  001804  3238               	rrcf	___lmul@multiplier+3,f,c
  1151  001806  3237               	rrcf	___lmul@multiplier+2,f,c
  1152  001808  3236               	rrcf	___lmul@multiplier+1,f,c
  1153  00180A  3235               	rrcf	___lmul@multiplier,f,c
  1154  00180C  5035               	movf	___lmul@multiplier,w,c
  1155  00180E  1036               	iorwf	___lmul@multiplier+1,w,c
  1156  001810  1037               	iorwf	___lmul@multiplier+2,w,c
  1157  001812  1038               	iorwf	___lmul@multiplier+3,w,c
  1158  001814  A4D8               	btfss	status,2,c
  1159  001816  D7E6               	goto	l197
  1160  001818  C03D  F035         	movff	___lmul@product,?___lmul
  1161  00181C  C03E  F036         	movff	___lmul@product+1,?___lmul+1
  1162  001820  C03F  F037         	movff	___lmul@product+2,?___lmul+2
  1163  001824  C040  F038         	movff	___lmul@product+3,?___lmul+3
  1164  001828  0012               	return		;funcret
  1165  00182A                     __end_of___lmul:
  1166                           	opt stack 0
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           postdec1	equ	0xFE5
  1174                           fsr1l	equ	0xFE1
  1175                           status	equ	0xFD8
  1176                           
  1177 ;; *************** function ___awmod *****************
  1178 ;; Defined at:
  1179 ;;		line 8 in file "E:\Program Files E\Microchip\xc8\v1.44\sources\common\awmod.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  dividend        2   14[COMRAM] int 
  1182 ;;  divisor         2   16[COMRAM] int 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  sign            1   19[COMRAM] unsigned char 
  1185 ;;  counter         1   18[COMRAM] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  2   14[COMRAM] int 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1195 ;;      Params:         4       0       0       0       0       0       0
  1196 ;;      Locals:         2       0       0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0
  1198 ;;      Totals:         6       0       0       0       0       0       0
  1199 ;;Total ram usage:        6 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_scramble
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text5
  1209  001764                     __ptext5:
  1210                           	opt stack 0
  1211  001764                     ___awmod:
  1212                           	opt stack 29
  1213                           
  1214                           ;incstack = 0
  1215  001764  0E00               	movlw	0
  1216  001766  6E48               	movwf	___awmod@sign,c
  1217  001768  AE44               	btfss	___awmod@dividend+1,7,c
  1218  00176A  D006               	goto	l366
  1219  00176C  6C43               	negf	___awmod@dividend,c
  1220  00176E  1E44               	comf	___awmod@dividend+1,f,c
  1221  001770  B0D8               	btfsc	status,0,c
  1222  001772  2A44               	incf	___awmod@dividend+1,f,c
  1223  001774  0E01               	movlw	1
  1224  001776  6E48               	movwf	___awmod@sign,c
  1225  001778                     l366:
  1226  001778  AE46               	btfss	___awmod@divisor+1,7,c
  1227  00177A  D004               	goto	l367
  1228  00177C  6C45               	negf	___awmod@divisor,c
  1229  00177E  1E46               	comf	___awmod@divisor+1,f,c
  1230  001780  B0D8               	btfsc	status,0,c
  1231  001782  2A46               	incf	___awmod@divisor+1,f,c
  1232  001784                     l367:
  1233  001784  5045               	movf	___awmod@divisor,w,c
  1234  001786  1046               	iorwf	___awmod@divisor+1,w,c
  1235  001788  B4D8               	btfsc	status,2,c
  1236  00178A  D018               	goto	l374
  1237  00178C  0E01               	movlw	1
  1238  00178E  6E47               	movwf	___awmod@counter,c
  1239  001790  D004               	goto	l369
  1240  001792  90D8               	bcf	status,0,c
  1241  001794  3645               	rlcf	___awmod@divisor,f,c
  1242  001796  3646               	rlcf	___awmod@divisor+1,f,c
  1243  001798  2A47               	incf	___awmod@counter,f,c
  1244  00179A                     l369:
  1245  00179A  AE46               	btfss	___awmod@divisor+1,7,c
  1246  00179C  D7FA               	goto	l370
  1247  00179E                     u670:
  1248  00179E  5045               	movf	___awmod@divisor,w,c
  1249  0017A0  5C43               	subwf	___awmod@dividend,w,c
  1250  0017A2  5046               	movf	___awmod@divisor+1,w,c
  1251  0017A4  5844               	subwfb	___awmod@dividend+1,w,c
  1252  0017A6  A0D8               	btfss	status,0,c
  1253  0017A8  D004               	goto	l373
  1254  0017AA  5045               	movf	___awmod@divisor,w,c
  1255  0017AC  5E43               	subwf	___awmod@dividend,f,c
  1256  0017AE  5046               	movf	___awmod@divisor+1,w,c
  1257  0017B0  5A44               	subwfb	___awmod@dividend+1,f,c
  1258  0017B2                     l373:
  1259  0017B2  90D8               	bcf	status,0,c
  1260  0017B4  3246               	rrcf	___awmod@divisor+1,f,c
  1261  0017B6  3245               	rrcf	___awmod@divisor,f,c
  1262  0017B8  2E47               	decfsz	___awmod@counter,f,c
  1263  0017BA  D7F1               	goto	u670
  1264  0017BC                     l374:
  1265  0017BC  5048               	movf	___awmod@sign,w,c
  1266  0017BE  B4D8               	btfsc	status,2,c
  1267  0017C0  D004               	goto	l375
  1268  0017C2  6C43               	negf	___awmod@dividend,c
  1269  0017C4  1E44               	comf	___awmod@dividend+1,f,c
  1270  0017C6  B0D8               	btfsc	status,0,c
  1271  0017C8  2A44               	incf	___awmod@dividend+1,f,c
  1272  0017CA                     l375:
  1273  0017CA  C043  F043         	movff	___awmod@dividend,?___awmod
  1274  0017CE  C044  F044         	movff	___awmod@dividend+1,?___awmod+1
  1275  0017D2  0012               	return	
  1276  0017D4                     __end_of___awmod:
  1277                           	opt stack 0
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1l	equ	0xFE1
  1286                           status	equ	0xFD8
  1287                           
  1288 ;; *************** function _Ui *****************
  1289 ;; Defined at:
  1290 ;;		line 53 in file "main.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  i               2    0[COMRAM] int 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1304 ;;      Params:         0       0       0       0       0       0       0
  1305 ;;      Locals:         2       0       0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0
  1307 ;;      Totals:         2       0       0       0       0       0       0
  1308 ;;Total ram usage:        2 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_scramble
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text6
  1319  000D3A                     __ptext6:
  1320                           	opt stack 0
  1321  000D3A                     _Ui:
  1322                           	opt stack 29
  1323                           
  1324                           ;main.c: 54: int i;
  1325                           ;main.c: 55: for(i=0;i<2;i++) {
  1326                           
  1327                           ;incstack = 0
  1328  000D3A  0E00               	movlw	0
  1329  000D3C  6E36               	movwf	Ui@i+1,c
  1330  000D3E  0E00               	movlw	0
  1331  000D40  6E35               	movwf	Ui@i,c
  1332  000D42  BE36               	btfsc	Ui@i+1,7,c
  1333  000D44  D008               	goto	l52
  1334  000D46  5036               	movf	Ui@i+1,w,c
  1335  000D48  E105               	bnz	u50
  1336  000D4A  0E02               	movlw	2
  1337  000D4C  5C35               	subwf	Ui@i,w,c
  1338  000D4E  B0D8               	btfsc	status,0,c
  1339  000D50  0012               	return	
  1340  000D52  D001               	goto	l52
  1341  000D54                     u50:
  1342  000D54  0012               	return	
  1343  000D56                     l52:
  1344                           
  1345                           ;main.c: 56: temp[i] = surface_three[i];
  1346  000D56  90D8               	bcf	status,0,c
  1347  000D58  3435               	rlcf	Ui@i,w,c
  1348  000D5A  6ED9               	movwf	fsr2l,c
  1349  000D5C  3436               	rlcf	Ui@i+1,w,c
  1350  000D5E  6EDA               	movwf	fsr2h,c
  1351  000D60  0E19               	movlw	low _surface_three
  1352  000D62  26D9               	addwf	fsr2l,f,c
  1353  000D64  0E00               	movlw	high _surface_three
  1354  000D66  22DA               	addwfc	fsr2h,f,c
  1355  000D68  90D8               	bcf	status,0,c
  1356  000D6A  3435               	rlcf	Ui@i,w,c
  1357  000D6C  6EE1               	movwf	fsr1l,c
  1358  000D6E  3436               	rlcf	Ui@i+1,w,c
  1359  000D70  6EE2               	movwf	fsr1h,c
  1360  000D72  0E53               	movlw	low _temp
  1361  000D74  26E1               	addwf	fsr1l,f,c
  1362  000D76  0E00               	movlw	high _temp
  1363  000D78  22E2               	addwfc	fsr1h,f,c
  1364  000D7A  CFDE FFE6          	movff	postinc2,postinc1
  1365  000D7E  CFDD FFE5          	movff	postdec2,postdec1
  1366                           
  1367                           ;main.c: 57: surface_three[i] = surface_two[i];
  1368  000D82  90D8               	bcf	status,0,c
  1369  000D84  3435               	rlcf	Ui@i,w,c
  1370  000D86  6ED9               	movwf	fsr2l,c
  1371  000D88  3436               	rlcf	Ui@i+1,w,c
  1372  000D8A  6EDA               	movwf	fsr2h,c
  1373  000D8C  0E21               	movlw	low _surface_two
  1374  000D8E  26D9               	addwf	fsr2l,f,c
  1375  000D90  0E00               	movlw	high _surface_two
  1376  000D92  22DA               	addwfc	fsr2h,f,c
  1377  000D94  90D8               	bcf	status,0,c
  1378  000D96  3435               	rlcf	Ui@i,w,c
  1379  000D98  6EE1               	movwf	fsr1l,c
  1380  000D9A  3436               	rlcf	Ui@i+1,w,c
  1381  000D9C  6EE2               	movwf	fsr1h,c
  1382  000D9E  0E19               	movlw	low _surface_three
  1383  000DA0  26E1               	addwf	fsr1l,f,c
  1384  000DA2  0E00               	movlw	high _surface_three
  1385  000DA4  22E2               	addwfc	fsr1h,f,c
  1386  000DA6  CFDE FFE6          	movff	postinc2,postinc1
  1387  000DAA  CFDD FFE5          	movff	postdec2,postdec1
  1388                           
  1389                           ;main.c: 58: surface_two[i] = surface_five[i];
  1390  000DAE  90D8               	bcf	status,0,c
  1391  000DB0  3435               	rlcf	Ui@i,w,c
  1392  000DB2  6ED9               	movwf	fsr2l,c
  1393  000DB4  3436               	rlcf	Ui@i+1,w,c
  1394  000DB6  6EDA               	movwf	fsr2h,c
  1395  000DB8  0E09               	movlw	low _surface_five
  1396  000DBA  26D9               	addwf	fsr2l,f,c
  1397  000DBC  0E00               	movlw	high _surface_five
  1398  000DBE  22DA               	addwfc	fsr2h,f,c
  1399  000DC0  90D8               	bcf	status,0,c
  1400  000DC2  3435               	rlcf	Ui@i,w,c
  1401  000DC4  6EE1               	movwf	fsr1l,c
  1402  000DC6  3436               	rlcf	Ui@i+1,w,c
  1403  000DC8  6EE2               	movwf	fsr1h,c
  1404  000DCA  0E21               	movlw	low _surface_two
  1405  000DCC  26E1               	addwf	fsr1l,f,c
  1406  000DCE  0E00               	movlw	high _surface_two
  1407  000DD0  22E2               	addwfc	fsr1h,f,c
  1408  000DD2  CFDE FFE6          	movff	postinc2,postinc1
  1409  000DD6  CFDD FFE5          	movff	postdec2,postdec1
  1410                           
  1411                           ;main.c: 59: surface_five[i] = surface_four[i];
  1412  000DDA  90D8               	bcf	status,0,c
  1413  000DDC  3435               	rlcf	Ui@i,w,c
  1414  000DDE  6ED9               	movwf	fsr2l,c
  1415  000DE0  3436               	rlcf	Ui@i+1,w,c
  1416  000DE2  6EDA               	movwf	fsr2h,c
  1417  000DE4  0E11               	movlw	low _surface_four
  1418  000DE6  26D9               	addwf	fsr2l,f,c
  1419  000DE8  0E00               	movlw	high _surface_four
  1420  000DEA  22DA               	addwfc	fsr2h,f,c
  1421  000DEC  90D8               	bcf	status,0,c
  1422  000DEE  3435               	rlcf	Ui@i,w,c
  1423  000DF0  6EE1               	movwf	fsr1l,c
  1424  000DF2  3436               	rlcf	Ui@i+1,w,c
  1425  000DF4  6EE2               	movwf	fsr1h,c
  1426  000DF6  0E09               	movlw	low _surface_five
  1427  000DF8  26E1               	addwf	fsr1l,f,c
  1428  000DFA  0E00               	movlw	high _surface_five
  1429  000DFC  22E2               	addwfc	fsr1h,f,c
  1430  000DFE  CFDE FFE6          	movff	postinc2,postinc1
  1431  000E02  CFDD FFE5          	movff	postdec2,postdec1
  1432                           
  1433                           ;main.c: 60: surface_four[i] = temp[i];
  1434  000E06  90D8               	bcf	status,0,c
  1435  000E08  3435               	rlcf	Ui@i,w,c
  1436  000E0A  6ED9               	movwf	fsr2l,c
  1437  000E0C  3436               	rlcf	Ui@i+1,w,c
  1438  000E0E  6EDA               	movwf	fsr2h,c
  1439  000E10  0E53               	movlw	low _temp
  1440  000E12  26D9               	addwf	fsr2l,f,c
  1441  000E14  0E00               	movlw	high _temp
  1442  000E16  22DA               	addwfc	fsr2h,f,c
  1443  000E18  90D8               	bcf	status,0,c
  1444  000E1A  3435               	rlcf	Ui@i,w,c
  1445  000E1C  6EE1               	movwf	fsr1l,c
  1446  000E1E  3436               	rlcf	Ui@i+1,w,c
  1447  000E20  6EE2               	movwf	fsr1h,c
  1448  000E22  0E11               	movlw	low _surface_four
  1449  000E24  26E1               	addwf	fsr1l,f,c
  1450  000E26  0E00               	movlw	high _surface_four
  1451  000E28  22E2               	addwfc	fsr1h,f,c
  1452  000E2A  CFDE FFE6          	movff	postinc2,postinc1
  1453  000E2E  CFDD FFE5          	movff	postdec2,postdec1
  1454  000E32  4A35               	infsnz	Ui@i,f,c
  1455  000E34  2A36               	incf	Ui@i+1,f,c
  1456  000E36  BE36               	btfsc	Ui@i+1,7,c
  1457  000E38  D78E               	goto	l52
  1458  000E3A  5036               	movf	Ui@i+1,w,c
  1459  000E3C  E101               	bnz	l54
  1460  000E3E  D785               	goto	L2
  1461  000E40                     l54:
  1462  000E40  0012               	return		;funcret
  1463  000E42                     __end_of_Ui:
  1464                           	opt stack 0
  1465                           tblptru	equ	0xFF8
  1466                           tblptrh	equ	0xFF7
  1467                           tblptrl	equ	0xFF6
  1468                           tablat	equ	0xFF5
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           postinc1	equ	0xFE6
  1472                           postdec1	equ	0xFE5
  1473                           fsr1h	equ	0xFE2
  1474                           fsr1l	equ	0xFE1
  1475                           postinc2	equ	0xFDE
  1476                           postdec2	equ	0xFDD
  1477                           fsr2h	equ	0xFDA
  1478                           fsr2l	equ	0xFD9
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _U *****************
  1482 ;; Defined at:
  1483 ;;		line 40 in file "main.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  i               2    0[COMRAM] int 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1497 ;;      Params:         0       0       0       0       0       0       0
  1498 ;;      Locals:         2       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0
  1500 ;;      Totals:         2       0       0       0       0       0       0
  1501 ;;Total ram usage:        2 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_scramble
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text7
  1512  000E42                     __ptext7:
  1513                           	opt stack 0
  1514  000E42                     _U:
  1515                           	opt stack 29
  1516                           
  1517                           ;main.c: 41: int i;
  1518                           ;main.c: 43: for(i=0;i<2;i++) {
  1519                           
  1520                           ;incstack = 0
  1521  000E42  0E00               	movlw	0
  1522  000E44  6E36               	movwf	U@i+1,c
  1523  000E46  0E00               	movlw	0
  1524  000E48  6E35               	movwf	U@i,c
  1525  000E4A  BE36               	btfsc	U@i+1,7,c
  1526  000E4C  D008               	goto	l47
  1527  000E4E  5036               	movf	U@i+1,w,c
  1528  000E50  E105               	bnz	u30
  1529  000E52  0E02               	movlw	2
  1530  000E54  5C35               	subwf	U@i,w,c
  1531  000E56  B0D8               	btfsc	status,0,c
  1532  000E58  0012               	return	
  1533  000E5A  D001               	goto	l47
  1534  000E5C                     u30:
  1535  000E5C  0012               	return	
  1536  000E5E                     l47:
  1537                           
  1538                           ;main.c: 44: temp[i] = surface_three[i];
  1539  000E5E  90D8               	bcf	status,0,c
  1540  000E60  3435               	rlcf	U@i,w,c
  1541  000E62  6ED9               	movwf	fsr2l,c
  1542  000E64  3436               	rlcf	U@i+1,w,c
  1543  000E66  6EDA               	movwf	fsr2h,c
  1544  000E68  0E19               	movlw	low _surface_three
  1545  000E6A  26D9               	addwf	fsr2l,f,c
  1546  000E6C  0E00               	movlw	high _surface_three
  1547  000E6E  22DA               	addwfc	fsr2h,f,c
  1548  000E70  90D8               	bcf	status,0,c
  1549  000E72  3435               	rlcf	U@i,w,c
  1550  000E74  6EE1               	movwf	fsr1l,c
  1551  000E76  3436               	rlcf	U@i+1,w,c
  1552  000E78  6EE2               	movwf	fsr1h,c
  1553  000E7A  0E53               	movlw	low _temp
  1554  000E7C  26E1               	addwf	fsr1l,f,c
  1555  000E7E  0E00               	movlw	high _temp
  1556  000E80  22E2               	addwfc	fsr1h,f,c
  1557  000E82  CFDE FFE6          	movff	postinc2,postinc1
  1558  000E86  CFDD FFE5          	movff	postdec2,postdec1
  1559                           
  1560                           ;main.c: 45: surface_three[i] = surface_four[i];
  1561  000E8A  90D8               	bcf	status,0,c
  1562  000E8C  3435               	rlcf	U@i,w,c
  1563  000E8E  6ED9               	movwf	fsr2l,c
  1564  000E90  3436               	rlcf	U@i+1,w,c
  1565  000E92  6EDA               	movwf	fsr2h,c
  1566  000E94  0E11               	movlw	low _surface_four
  1567  000E96  26D9               	addwf	fsr2l,f,c
  1568  000E98  0E00               	movlw	high _surface_four
  1569  000E9A  22DA               	addwfc	fsr2h,f,c
  1570  000E9C  90D8               	bcf	status,0,c
  1571  000E9E  3435               	rlcf	U@i,w,c
  1572  000EA0  6EE1               	movwf	fsr1l,c
  1573  000EA2  3436               	rlcf	U@i+1,w,c
  1574  000EA4  6EE2               	movwf	fsr1h,c
  1575  000EA6  0E19               	movlw	low _surface_three
  1576  000EA8  26E1               	addwf	fsr1l,f,c
  1577  000EAA  0E00               	movlw	high _surface_three
  1578  000EAC  22E2               	addwfc	fsr1h,f,c
  1579  000EAE  CFDE FFE6          	movff	postinc2,postinc1
  1580  000EB2  CFDD FFE5          	movff	postdec2,postdec1
  1581                           
  1582                           ;main.c: 46: surface_four[i] = surface_five[i];
  1583  000EB6  90D8               	bcf	status,0,c
  1584  000EB8  3435               	rlcf	U@i,w,c
  1585  000EBA  6ED9               	movwf	fsr2l,c
  1586  000EBC  3436               	rlcf	U@i+1,w,c
  1587  000EBE  6EDA               	movwf	fsr2h,c
  1588  000EC0  0E09               	movlw	low _surface_five
  1589  000EC2  26D9               	addwf	fsr2l,f,c
  1590  000EC4  0E00               	movlw	high _surface_five
  1591  000EC6  22DA               	addwfc	fsr2h,f,c
  1592  000EC8  90D8               	bcf	status,0,c
  1593  000ECA  3435               	rlcf	U@i,w,c
  1594  000ECC  6EE1               	movwf	fsr1l,c
  1595  000ECE  3436               	rlcf	U@i+1,w,c
  1596  000ED0  6EE2               	movwf	fsr1h,c
  1597  000ED2  0E11               	movlw	low _surface_four
  1598  000ED4  26E1               	addwf	fsr1l,f,c
  1599  000ED6  0E00               	movlw	high _surface_four
  1600  000ED8  22E2               	addwfc	fsr1h,f,c
  1601  000EDA  CFDE FFE6          	movff	postinc2,postinc1
  1602  000EDE  CFDD FFE5          	movff	postdec2,postdec1
  1603                           
  1604                           ;main.c: 47: surface_five[i] = surface_two[i];
  1605  000EE2  90D8               	bcf	status,0,c
  1606  000EE4  3435               	rlcf	U@i,w,c
  1607  000EE6  6ED9               	movwf	fsr2l,c
  1608  000EE8  3436               	rlcf	U@i+1,w,c
  1609  000EEA  6EDA               	movwf	fsr2h,c
  1610  000EEC  0E21               	movlw	low _surface_two
  1611  000EEE  26D9               	addwf	fsr2l,f,c
  1612  000EF0  0E00               	movlw	high _surface_two
  1613  000EF2  22DA               	addwfc	fsr2h,f,c
  1614  000EF4  90D8               	bcf	status,0,c
  1615  000EF6  3435               	rlcf	U@i,w,c
  1616  000EF8  6EE1               	movwf	fsr1l,c
  1617  000EFA  3436               	rlcf	U@i+1,w,c
  1618  000EFC  6EE2               	movwf	fsr1h,c
  1619  000EFE  0E09               	movlw	low _surface_five
  1620  000F00  26E1               	addwf	fsr1l,f,c
  1621  000F02  0E00               	movlw	high _surface_five
  1622  000F04  22E2               	addwfc	fsr1h,f,c
  1623  000F06  CFDE FFE6          	movff	postinc2,postinc1
  1624  000F0A  CFDD FFE5          	movff	postdec2,postdec1
  1625                           
  1626                           ;main.c: 48: surface_two[i] = temp[i];
  1627  000F0E  90D8               	bcf	status,0,c
  1628  000F10  3435               	rlcf	U@i,w,c
  1629  000F12  6ED9               	movwf	fsr2l,c
  1630  000F14  3436               	rlcf	U@i+1,w,c
  1631  000F16  6EDA               	movwf	fsr2h,c
  1632  000F18  0E53               	movlw	low _temp
  1633  000F1A  26D9               	addwf	fsr2l,f,c
  1634  000F1C  0E00               	movlw	high _temp
  1635  000F1E  22DA               	addwfc	fsr2h,f,c
  1636  000F20  90D8               	bcf	status,0,c
  1637  000F22  3435               	rlcf	U@i,w,c
  1638  000F24  6EE1               	movwf	fsr1l,c
  1639  000F26  3436               	rlcf	U@i+1,w,c
  1640  000F28  6EE2               	movwf	fsr1h,c
  1641  000F2A  0E21               	movlw	low _surface_two
  1642  000F2C  26E1               	addwf	fsr1l,f,c
  1643  000F2E  0E00               	movlw	high _surface_two
  1644  000F30  22E2               	addwfc	fsr1h,f,c
  1645  000F32  CFDE FFE6          	movff	postinc2,postinc1
  1646  000F36  CFDD FFE5          	movff	postdec2,postdec1
  1647  000F3A  4A35               	infsnz	U@i,f,c
  1648  000F3C  2A36               	incf	U@i+1,f,c
  1649  000F3E  BE36               	btfsc	U@i+1,7,c
  1650  000F40  D78E               	goto	l47
  1651  000F42  5036               	movf	U@i+1,w,c
  1652  000F44  E101               	bnz	l49
  1653  000F46  D785               	goto	L3
  1654  000F48                     l49:
  1655  000F48  0012               	return		;funcret
  1656  000F4A                     __end_of_U:
  1657                           	opt stack 0
  1658                           tblptru	equ	0xFF8
  1659                           tblptrh	equ	0xFF7
  1660                           tblptrl	equ	0xFF6
  1661                           tablat	equ	0xFF5
  1662                           postinc0	equ	0xFEE
  1663                           wreg	equ	0xFE8
  1664                           postinc1	equ	0xFE6
  1665                           postdec1	equ	0xFE5
  1666                           fsr1h	equ	0xFE2
  1667                           fsr1l	equ	0xFE1
  1668                           postinc2	equ	0xFDE
  1669                           postdec2	equ	0xFDD
  1670                           fsr2h	equ	0xFDA
  1671                           fsr2l	equ	0xFD9
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _Ri *****************
  1675 ;; Defined at:
  1676 ;;		line 125 in file "main.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  i               2    0[COMRAM] int 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1690 ;;      Params:         0       0       0       0       0       0       0
  1691 ;;      Locals:         2       0       0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0
  1693 ;;      Totals:         2       0       0       0       0       0       0
  1694 ;;Total ram usage:        2 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_scramble
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text8
  1705  00090A                     __ptext8:
  1706                           	opt stack 0
  1707  00090A                     _Ri:
  1708                           	opt stack 29
  1709                           
  1710                           ;main.c: 126: int i;
  1711                           ;main.c: 127: for(i=1;i<4;i+=2) {
  1712                           
  1713                           ;incstack = 0
  1714  00090A  0E00               	movlw	0
  1715  00090C  6E36               	movwf	Ri@i+1,c
  1716  00090E  0E01               	movlw	1
  1717  000910  6E35               	movwf	Ri@i,c
  1718  000912  BE36               	btfsc	Ri@i+1,7,c
  1719  000914  D008               	goto	l82
  1720  000916  5036               	movf	Ri@i+1,w,c
  1721  000918  E105               	bnz	u170
  1722  00091A  0E04               	movlw	4
  1723  00091C  5C35               	subwf	Ri@i,w,c
  1724  00091E  B0D8               	btfsc	status,0,c
  1725  000920  0012               	return	
  1726  000922  D001               	goto	l82
  1727  000924                     u170:
  1728  000924  0012               	return	
  1729  000926                     l82:
  1730                           
  1731                           ;main.c: 128: temp[i] = surface_three[i];
  1732  000926  90D8               	bcf	status,0,c
  1733  000928  3435               	rlcf	Ri@i,w,c
  1734  00092A  6ED9               	movwf	fsr2l,c
  1735  00092C  3436               	rlcf	Ri@i+1,w,c
  1736  00092E  6EDA               	movwf	fsr2h,c
  1737  000930  0E19               	movlw	low _surface_three
  1738  000932  26D9               	addwf	fsr2l,f,c
  1739  000934  0E00               	movlw	high _surface_three
  1740  000936  22DA               	addwfc	fsr2h,f,c
  1741  000938  90D8               	bcf	status,0,c
  1742  00093A  3435               	rlcf	Ri@i,w,c
  1743  00093C  6EE1               	movwf	fsr1l,c
  1744  00093E  3436               	rlcf	Ri@i+1,w,c
  1745  000940  6EE2               	movwf	fsr1h,c
  1746  000942  0E53               	movlw	low _temp
  1747  000944  26E1               	addwf	fsr1l,f,c
  1748  000946  0E00               	movlw	high _temp
  1749  000948  22E2               	addwfc	fsr1h,f,c
  1750  00094A  CFDE FFE6          	movff	postinc2,postinc1
  1751  00094E  CFDD FFE5          	movff	postdec2,postdec1
  1752                           
  1753                           ;main.c: 129: surface_three[i] = surface_one[i];
  1754  000952  90D8               	bcf	status,0,c
  1755  000954  3435               	rlcf	Ri@i,w,c
  1756  000956  6ED9               	movwf	fsr2l,c
  1757  000958  3436               	rlcf	Ri@i+1,w,c
  1758  00095A  6EDA               	movwf	fsr2h,c
  1759  00095C  0E29               	movlw	low _surface_one
  1760  00095E  26D9               	addwf	fsr2l,f,c
  1761  000960  0E00               	movlw	high _surface_one
  1762  000962  22DA               	addwfc	fsr2h,f,c
  1763  000964  90D8               	bcf	status,0,c
  1764  000966  3435               	rlcf	Ri@i,w,c
  1765  000968  6EE1               	movwf	fsr1l,c
  1766  00096A  3436               	rlcf	Ri@i+1,w,c
  1767  00096C  6EE2               	movwf	fsr1h,c
  1768  00096E  0E19               	movlw	low _surface_three
  1769  000970  26E1               	addwf	fsr1l,f,c
  1770  000972  0E00               	movlw	high _surface_three
  1771  000974  22E2               	addwfc	fsr1h,f,c
  1772  000976  CFDE FFE6          	movff	postinc2,postinc1
  1773  00097A  CFDD FFE5          	movff	postdec2,postdec1
  1774                           
  1775                           ;main.c: 130: surface_one[i] = surface_two[i];
  1776  00097E  90D8               	bcf	status,0,c
  1777  000980  3435               	rlcf	Ri@i,w,c
  1778  000982  6ED9               	movwf	fsr2l,c
  1779  000984  3436               	rlcf	Ri@i+1,w,c
  1780  000986  6EDA               	movwf	fsr2h,c
  1781  000988  0E21               	movlw	low _surface_two
  1782  00098A  26D9               	addwf	fsr2l,f,c
  1783  00098C  0E00               	movlw	high _surface_two
  1784  00098E  22DA               	addwfc	fsr2h,f,c
  1785  000990  90D8               	bcf	status,0,c
  1786  000992  3435               	rlcf	Ri@i,w,c
  1787  000994  6EE1               	movwf	fsr1l,c
  1788  000996  3436               	rlcf	Ri@i+1,w,c
  1789  000998  6EE2               	movwf	fsr1h,c
  1790  00099A  0E29               	movlw	low _surface_one
  1791  00099C  26E1               	addwf	fsr1l,f,c
  1792  00099E  0E00               	movlw	high _surface_one
  1793  0009A0  22E2               	addwfc	fsr1h,f,c
  1794  0009A2  CFDE FFE6          	movff	postinc2,postinc1
  1795  0009A6  CFDD FFE5          	movff	postdec2,postdec1
  1796                           
  1797                           ;main.c: 131: surface_two[i] = surface_six[i];
  1798  0009AA  90D8               	bcf	status,0,c
  1799  0009AC  3435               	rlcf	Ri@i,w,c
  1800  0009AE  6ED9               	movwf	fsr2l,c
  1801  0009B0  3436               	rlcf	Ri@i+1,w,c
  1802  0009B2  6EDA               	movwf	fsr2h,c
  1803  0009B4  0E01               	movlw	low _surface_six
  1804  0009B6  26D9               	addwf	fsr2l,f,c
  1805  0009B8  0E00               	movlw	high _surface_six
  1806  0009BA  22DA               	addwfc	fsr2h,f,c
  1807  0009BC  90D8               	bcf	status,0,c
  1808  0009BE  3435               	rlcf	Ri@i,w,c
  1809  0009C0  6EE1               	movwf	fsr1l,c
  1810  0009C2  3436               	rlcf	Ri@i+1,w,c
  1811  0009C4  6EE2               	movwf	fsr1h,c
  1812  0009C6  0E21               	movlw	low _surface_two
  1813  0009C8  26E1               	addwf	fsr1l,f,c
  1814  0009CA  0E00               	movlw	high _surface_two
  1815  0009CC  22E2               	addwfc	fsr1h,f,c
  1816  0009CE  CFDE FFE6          	movff	postinc2,postinc1
  1817  0009D2  CFDD FFE5          	movff	postdec2,postdec1
  1818                           
  1819                           ;main.c: 132: surface_six[i] = temp[i];
  1820  0009D6  90D8               	bcf	status,0,c
  1821  0009D8  3435               	rlcf	Ri@i,w,c
  1822  0009DA  6ED9               	movwf	fsr2l,c
  1823  0009DC  3436               	rlcf	Ri@i+1,w,c
  1824  0009DE  6EDA               	movwf	fsr2h,c
  1825  0009E0  0E53               	movlw	low _temp
  1826  0009E2  26D9               	addwf	fsr2l,f,c
  1827  0009E4  0E00               	movlw	high _temp
  1828  0009E6  22DA               	addwfc	fsr2h,f,c
  1829  0009E8  90D8               	bcf	status,0,c
  1830  0009EA  3435               	rlcf	Ri@i,w,c
  1831  0009EC  6EE1               	movwf	fsr1l,c
  1832  0009EE  3436               	rlcf	Ri@i+1,w,c
  1833  0009F0  6EE2               	movwf	fsr1h,c
  1834  0009F2  0E01               	movlw	low _surface_six
  1835  0009F4  26E1               	addwf	fsr1l,f,c
  1836  0009F6  0E00               	movlw	high _surface_six
  1837  0009F8  22E2               	addwfc	fsr1h,f,c
  1838  0009FA  CFDE FFE6          	movff	postinc2,postinc1
  1839  0009FE  CFDD FFE5          	movff	postdec2,postdec1
  1840  000A02  0E02               	movlw	2
  1841  000A04  2635               	addwf	Ri@i,f,c
  1842  000A06  0E00               	movlw	0
  1843  000A08  2236               	addwfc	Ri@i+1,f,c
  1844  000A0A  BE36               	btfsc	Ri@i+1,7,c
  1845  000A0C  D78C               	goto	l82
  1846  000A0E  5036               	movf	Ri@i+1,w,c
  1847  000A10  E101               	bnz	l84
  1848  000A12  D783               	goto	L4
  1849  000A14                     l84:
  1850  000A14  0012               	return		;funcret
  1851  000A16                     __end_of_Ri:
  1852                           	opt stack 0
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           postinc0	equ	0xFEE
  1858                           wreg	equ	0xFE8
  1859                           postinc1	equ	0xFE6
  1860                           postdec1	equ	0xFE5
  1861                           fsr1h	equ	0xFE2
  1862                           fsr1l	equ	0xFE1
  1863                           postinc2	equ	0xFDE
  1864                           postdec2	equ	0xFDD
  1865                           fsr2h	equ	0xFDA
  1866                           fsr2l	equ	0xFD9
  1867                           status	equ	0xFD8
  1868                           
  1869 ;; *************** function _R *****************
  1870 ;; Defined at:
  1871 ;;		line 113 in file "main.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  i               2    0[COMRAM] int 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1885 ;;      Params:         0       0       0       0       0       0       0
  1886 ;;      Locals:         2       0       0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0
  1888 ;;      Totals:         2       0       0       0       0       0       0
  1889 ;;Total ram usage:        2 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_scramble
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text9
  1900  000A16                     __ptext9:
  1901                           	opt stack 0
  1902  000A16                     _R:
  1903                           	opt stack 29
  1904                           
  1905                           ;main.c: 114: int i;
  1906                           ;main.c: 115: for(i=1;i<4;i+=2) {
  1907                           
  1908                           ;incstack = 0
  1909  000A16  0E00               	movlw	0
  1910  000A18  6E36               	movwf	R@i+1,c
  1911  000A1A  0E01               	movlw	1
  1912  000A1C  6E35               	movwf	R@i,c
  1913  000A1E  BE36               	btfsc	R@i+1,7,c
  1914  000A20  D008               	goto	l77
  1915  000A22  5036               	movf	R@i+1,w,c
  1916  000A24  E105               	bnz	u150
  1917  000A26  0E04               	movlw	4
  1918  000A28  5C35               	subwf	R@i,w,c
  1919  000A2A  B0D8               	btfsc	status,0,c
  1920  000A2C  0012               	return	
  1921  000A2E  D001               	goto	l77
  1922  000A30                     u150:
  1923  000A30  0012               	return	
  1924  000A32                     l77:
  1925                           
  1926                           ;main.c: 116: temp[i] = surface_three[i];
  1927  000A32  90D8               	bcf	status,0,c
  1928  000A34  3435               	rlcf	R@i,w,c
  1929  000A36  6ED9               	movwf	fsr2l,c
  1930  000A38  3436               	rlcf	R@i+1,w,c
  1931  000A3A  6EDA               	movwf	fsr2h,c
  1932  000A3C  0E19               	movlw	low _surface_three
  1933  000A3E  26D9               	addwf	fsr2l,f,c
  1934  000A40  0E00               	movlw	high _surface_three
  1935  000A42  22DA               	addwfc	fsr2h,f,c
  1936  000A44  90D8               	bcf	status,0,c
  1937  000A46  3435               	rlcf	R@i,w,c
  1938  000A48  6EE1               	movwf	fsr1l,c
  1939  000A4A  3436               	rlcf	R@i+1,w,c
  1940  000A4C  6EE2               	movwf	fsr1h,c
  1941  000A4E  0E53               	movlw	low _temp
  1942  000A50  26E1               	addwf	fsr1l,f,c
  1943  000A52  0E00               	movlw	high _temp
  1944  000A54  22E2               	addwfc	fsr1h,f,c
  1945  000A56  CFDE FFE6          	movff	postinc2,postinc1
  1946  000A5A  CFDD FFE5          	movff	postdec2,postdec1
  1947                           
  1948                           ;main.c: 117: surface_three[i] = surface_six[i];
  1949  000A5E  90D8               	bcf	status,0,c
  1950  000A60  3435               	rlcf	R@i,w,c
  1951  000A62  6ED9               	movwf	fsr2l,c
  1952  000A64  3436               	rlcf	R@i+1,w,c
  1953  000A66  6EDA               	movwf	fsr2h,c
  1954  000A68  0E01               	movlw	low _surface_six
  1955  000A6A  26D9               	addwf	fsr2l,f,c
  1956  000A6C  0E00               	movlw	high _surface_six
  1957  000A6E  22DA               	addwfc	fsr2h,f,c
  1958  000A70  90D8               	bcf	status,0,c
  1959  000A72  3435               	rlcf	R@i,w,c
  1960  000A74  6EE1               	movwf	fsr1l,c
  1961  000A76  3436               	rlcf	R@i+1,w,c
  1962  000A78  6EE2               	movwf	fsr1h,c
  1963  000A7A  0E19               	movlw	low _surface_three
  1964  000A7C  26E1               	addwf	fsr1l,f,c
  1965  000A7E  0E00               	movlw	high _surface_three
  1966  000A80  22E2               	addwfc	fsr1h,f,c
  1967  000A82  CFDE FFE6          	movff	postinc2,postinc1
  1968  000A86  CFDD FFE5          	movff	postdec2,postdec1
  1969                           
  1970                           ;main.c: 118: surface_six[i] = surface_two[i];
  1971  000A8A  90D8               	bcf	status,0,c
  1972  000A8C  3435               	rlcf	R@i,w,c
  1973  000A8E  6ED9               	movwf	fsr2l,c
  1974  000A90  3436               	rlcf	R@i+1,w,c
  1975  000A92  6EDA               	movwf	fsr2h,c
  1976  000A94  0E21               	movlw	low _surface_two
  1977  000A96  26D9               	addwf	fsr2l,f,c
  1978  000A98  0E00               	movlw	high _surface_two
  1979  000A9A  22DA               	addwfc	fsr2h,f,c
  1980  000A9C  90D8               	bcf	status,0,c
  1981  000A9E  3435               	rlcf	R@i,w,c
  1982  000AA0  6EE1               	movwf	fsr1l,c
  1983  000AA2  3436               	rlcf	R@i+1,w,c
  1984  000AA4  6EE2               	movwf	fsr1h,c
  1985  000AA6  0E01               	movlw	low _surface_six
  1986  000AA8  26E1               	addwf	fsr1l,f,c
  1987  000AAA  0E00               	movlw	high _surface_six
  1988  000AAC  22E2               	addwfc	fsr1h,f,c
  1989  000AAE  CFDE FFE6          	movff	postinc2,postinc1
  1990  000AB2  CFDD FFE5          	movff	postdec2,postdec1
  1991                           
  1992                           ;main.c: 119: surface_two[i] = surface_one[i];
  1993  000AB6  90D8               	bcf	status,0,c
  1994  000AB8  3435               	rlcf	R@i,w,c
  1995  000ABA  6ED9               	movwf	fsr2l,c
  1996  000ABC  3436               	rlcf	R@i+1,w,c
  1997  000ABE  6EDA               	movwf	fsr2h,c
  1998  000AC0  0E29               	movlw	low _surface_one
  1999  000AC2  26D9               	addwf	fsr2l,f,c
  2000  000AC4  0E00               	movlw	high _surface_one
  2001  000AC6  22DA               	addwfc	fsr2h,f,c
  2002  000AC8  90D8               	bcf	status,0,c
  2003  000ACA  3435               	rlcf	R@i,w,c
  2004  000ACC  6EE1               	movwf	fsr1l,c
  2005  000ACE  3436               	rlcf	R@i+1,w,c
  2006  000AD0  6EE2               	movwf	fsr1h,c
  2007  000AD2  0E21               	movlw	low _surface_two
  2008  000AD4  26E1               	addwf	fsr1l,f,c
  2009  000AD6  0E00               	movlw	high _surface_two
  2010  000AD8  22E2               	addwfc	fsr1h,f,c
  2011  000ADA  CFDE FFE6          	movff	postinc2,postinc1
  2012  000ADE  CFDD FFE5          	movff	postdec2,postdec1
  2013                           
  2014                           ;main.c: 120: surface_one[i] = temp[i];
  2015  000AE2  90D8               	bcf	status,0,c
  2016  000AE4  3435               	rlcf	R@i,w,c
  2017  000AE6  6ED9               	movwf	fsr2l,c
  2018  000AE8  3436               	rlcf	R@i+1,w,c
  2019  000AEA  6EDA               	movwf	fsr2h,c
  2020  000AEC  0E53               	movlw	low _temp
  2021  000AEE  26D9               	addwf	fsr2l,f,c
  2022  000AF0  0E00               	movlw	high _temp
  2023  000AF2  22DA               	addwfc	fsr2h,f,c
  2024  000AF4  90D8               	bcf	status,0,c
  2025  000AF6  3435               	rlcf	R@i,w,c
  2026  000AF8  6EE1               	movwf	fsr1l,c
  2027  000AFA  3436               	rlcf	R@i+1,w,c
  2028  000AFC  6EE2               	movwf	fsr1h,c
  2029  000AFE  0E29               	movlw	low _surface_one
  2030  000B00  26E1               	addwf	fsr1l,f,c
  2031  000B02  0E00               	movlw	high _surface_one
  2032  000B04  22E2               	addwfc	fsr1h,f,c
  2033  000B06  CFDE FFE6          	movff	postinc2,postinc1
  2034  000B0A  CFDD FFE5          	movff	postdec2,postdec1
  2035  000B0E  0E02               	movlw	2
  2036  000B10  2635               	addwf	R@i,f,c
  2037  000B12  0E00               	movlw	0
  2038  000B14  2236               	addwfc	R@i+1,f,c
  2039  000B16  BE36               	btfsc	R@i+1,7,c
  2040  000B18  D78C               	goto	l77
  2041  000B1A  5036               	movf	R@i+1,w,c
  2042  000B1C  E101               	bnz	l79
  2043  000B1E  D783               	goto	L5
  2044  000B20                     l79:
  2045  000B20  0012               	return		;funcret
  2046  000B22                     __end_of_R:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           postinc0	equ	0xFEE
  2053                           wreg	equ	0xFE8
  2054                           postinc1	equ	0xFE6
  2055                           postdec1	equ	0xFE5
  2056                           fsr1h	equ	0xFE2
  2057                           fsr1l	equ	0xFE1
  2058                           postinc2	equ	0xFDE
  2059                           postdec2	equ	0xFDD
  2060                           fsr2h	equ	0xFDA
  2061                           fsr2l	equ	0xFD9
  2062                           status	equ	0xFD8
  2063                           
  2064 ;; *************** function _Li *****************
  2065 ;; Defined at:
  2066 ;;		line 101 in file "main.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  i               2    0[COMRAM] int 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2080 ;;      Params:         0       0       0       0       0       0       0
  2081 ;;      Locals:         2       0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0
  2083 ;;      Totals:         2       0       0       0       0       0       0
  2084 ;;Total ram usage:        2 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_scramble
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text10
  2095  000B22                     __ptext10:
  2096                           	opt stack 0
  2097  000B22                     _Li:
  2098                           	opt stack 29
  2099                           
  2100                           ;main.c: 102: int i;
  2101                           ;main.c: 103: for(i=0;i<3;i+=2) {
  2102                           
  2103                           ;incstack = 0
  2104  000B22  0E00               	movlw	0
  2105  000B24  6E36               	movwf	Li@i+1,c
  2106  000B26  0E00               	movlw	0
  2107  000B28  6E35               	movwf	Li@i,c
  2108  000B2A  BE36               	btfsc	Li@i+1,7,c
  2109  000B2C  D008               	goto	l72
  2110  000B2E  5036               	movf	Li@i+1,w,c
  2111  000B30  E105               	bnz	u130
  2112  000B32  0E03               	movlw	3
  2113  000B34  5C35               	subwf	Li@i,w,c
  2114  000B36  B0D8               	btfsc	status,0,c
  2115  000B38  0012               	return	
  2116  000B3A  D001               	goto	l72
  2117  000B3C                     u130:
  2118  000B3C  0012               	return	
  2119  000B3E                     l72:
  2120                           
  2121                           ;main.c: 104: temp[i] = surface_three[i];
  2122  000B3E  90D8               	bcf	status,0,c
  2123  000B40  3435               	rlcf	Li@i,w,c
  2124  000B42  6ED9               	movwf	fsr2l,c
  2125  000B44  3436               	rlcf	Li@i+1,w,c
  2126  000B46  6EDA               	movwf	fsr2h,c
  2127  000B48  0E19               	movlw	low _surface_three
  2128  000B4A  26D9               	addwf	fsr2l,f,c
  2129  000B4C  0E00               	movlw	high _surface_three
  2130  000B4E  22DA               	addwfc	fsr2h,f,c
  2131  000B50  90D8               	bcf	status,0,c
  2132  000B52  3435               	rlcf	Li@i,w,c
  2133  000B54  6EE1               	movwf	fsr1l,c
  2134  000B56  3436               	rlcf	Li@i+1,w,c
  2135  000B58  6EE2               	movwf	fsr1h,c
  2136  000B5A  0E53               	movlw	low _temp
  2137  000B5C  26E1               	addwf	fsr1l,f,c
  2138  000B5E  0E00               	movlw	high _temp
  2139  000B60  22E2               	addwfc	fsr1h,f,c
  2140  000B62  CFDE FFE6          	movff	postinc2,postinc1
  2141  000B66  CFDD FFE5          	movff	postdec2,postdec1
  2142                           
  2143                           ;main.c: 105: surface_three[i] = surface_six[i];
  2144  000B6A  90D8               	bcf	status,0,c
  2145  000B6C  3435               	rlcf	Li@i,w,c
  2146  000B6E  6ED9               	movwf	fsr2l,c
  2147  000B70  3436               	rlcf	Li@i+1,w,c
  2148  000B72  6EDA               	movwf	fsr2h,c
  2149  000B74  0E01               	movlw	low _surface_six
  2150  000B76  26D9               	addwf	fsr2l,f,c
  2151  000B78  0E00               	movlw	high _surface_six
  2152  000B7A  22DA               	addwfc	fsr2h,f,c
  2153  000B7C  90D8               	bcf	status,0,c
  2154  000B7E  3435               	rlcf	Li@i,w,c
  2155  000B80  6EE1               	movwf	fsr1l,c
  2156  000B82  3436               	rlcf	Li@i+1,w,c
  2157  000B84  6EE2               	movwf	fsr1h,c
  2158  000B86  0E19               	movlw	low _surface_three
  2159  000B88  26E1               	addwf	fsr1l,f,c
  2160  000B8A  0E00               	movlw	high _surface_three
  2161  000B8C  22E2               	addwfc	fsr1h,f,c
  2162  000B8E  CFDE FFE6          	movff	postinc2,postinc1
  2163  000B92  CFDD FFE5          	movff	postdec2,postdec1
  2164                           
  2165                           ;main.c: 106: surface_six[i] = surface_two[i];
  2166  000B96  90D8               	bcf	status,0,c
  2167  000B98  3435               	rlcf	Li@i,w,c
  2168  000B9A  6ED9               	movwf	fsr2l,c
  2169  000B9C  3436               	rlcf	Li@i+1,w,c
  2170  000B9E  6EDA               	movwf	fsr2h,c
  2171  000BA0  0E21               	movlw	low _surface_two
  2172  000BA2  26D9               	addwf	fsr2l,f,c
  2173  000BA4  0E00               	movlw	high _surface_two
  2174  000BA6  22DA               	addwfc	fsr2h,f,c
  2175  000BA8  90D8               	bcf	status,0,c
  2176  000BAA  3435               	rlcf	Li@i,w,c
  2177  000BAC  6EE1               	movwf	fsr1l,c
  2178  000BAE  3436               	rlcf	Li@i+1,w,c
  2179  000BB0  6EE2               	movwf	fsr1h,c
  2180  000BB2  0E01               	movlw	low _surface_six
  2181  000BB4  26E1               	addwf	fsr1l,f,c
  2182  000BB6  0E00               	movlw	high _surface_six
  2183  000BB8  22E2               	addwfc	fsr1h,f,c
  2184  000BBA  CFDE FFE6          	movff	postinc2,postinc1
  2185  000BBE  CFDD FFE5          	movff	postdec2,postdec1
  2186                           
  2187                           ;main.c: 107: surface_two[i] = surface_one[i];
  2188  000BC2  90D8               	bcf	status,0,c
  2189  000BC4  3435               	rlcf	Li@i,w,c
  2190  000BC6  6ED9               	movwf	fsr2l,c
  2191  000BC8  3436               	rlcf	Li@i+1,w,c
  2192  000BCA  6EDA               	movwf	fsr2h,c
  2193  000BCC  0E29               	movlw	low _surface_one
  2194  000BCE  26D9               	addwf	fsr2l,f,c
  2195  000BD0  0E00               	movlw	high _surface_one
  2196  000BD2  22DA               	addwfc	fsr2h,f,c
  2197  000BD4  90D8               	bcf	status,0,c
  2198  000BD6  3435               	rlcf	Li@i,w,c
  2199  000BD8  6EE1               	movwf	fsr1l,c
  2200  000BDA  3436               	rlcf	Li@i+1,w,c
  2201  000BDC  6EE2               	movwf	fsr1h,c
  2202  000BDE  0E21               	movlw	low _surface_two
  2203  000BE0  26E1               	addwf	fsr1l,f,c
  2204  000BE2  0E00               	movlw	high _surface_two
  2205  000BE4  22E2               	addwfc	fsr1h,f,c
  2206  000BE6  CFDE FFE6          	movff	postinc2,postinc1
  2207  000BEA  CFDD FFE5          	movff	postdec2,postdec1
  2208                           
  2209                           ;main.c: 108: surface_one[i] = temp[i];
  2210  000BEE  90D8               	bcf	status,0,c
  2211  000BF0  3435               	rlcf	Li@i,w,c
  2212  000BF2  6ED9               	movwf	fsr2l,c
  2213  000BF4  3436               	rlcf	Li@i+1,w,c
  2214  000BF6  6EDA               	movwf	fsr2h,c
  2215  000BF8  0E53               	movlw	low _temp
  2216  000BFA  26D9               	addwf	fsr2l,f,c
  2217  000BFC  0E00               	movlw	high _temp
  2218  000BFE  22DA               	addwfc	fsr2h,f,c
  2219  000C00  90D8               	bcf	status,0,c
  2220  000C02  3435               	rlcf	Li@i,w,c
  2221  000C04  6EE1               	movwf	fsr1l,c
  2222  000C06  3436               	rlcf	Li@i+1,w,c
  2223  000C08  6EE2               	movwf	fsr1h,c
  2224  000C0A  0E29               	movlw	low _surface_one
  2225  000C0C  26E1               	addwf	fsr1l,f,c
  2226  000C0E  0E00               	movlw	high _surface_one
  2227  000C10  22E2               	addwfc	fsr1h,f,c
  2228  000C12  CFDE FFE6          	movff	postinc2,postinc1
  2229  000C16  CFDD FFE5          	movff	postdec2,postdec1
  2230  000C1A  0E02               	movlw	2
  2231  000C1C  2635               	addwf	Li@i,f,c
  2232  000C1E  0E00               	movlw	0
  2233  000C20  2236               	addwfc	Li@i+1,f,c
  2234  000C22  BE36               	btfsc	Li@i+1,7,c
  2235  000C24  D78C               	goto	l72
  2236  000C26  5036               	movf	Li@i+1,w,c
  2237  000C28  E101               	bnz	l74
  2238  000C2A  D783               	goto	L6
  2239  000C2C                     l74:
  2240  000C2C  0012               	return		;funcret
  2241  000C2E                     __end_of_Li:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           postinc0	equ	0xFEE
  2248                           wreg	equ	0xFE8
  2249                           postinc1	equ	0xFE6
  2250                           postdec1	equ	0xFE5
  2251                           fsr1h	equ	0xFE2
  2252                           fsr1l	equ	0xFE1
  2253                           postinc2	equ	0xFDE
  2254                           postdec2	equ	0xFDD
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _L *****************
  2260 ;; Defined at:
  2261 ;;		line 89 in file "main.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  i               2    0[COMRAM] int 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2275 ;;      Params:         0       0       0       0       0       0       0
  2276 ;;      Locals:         2       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0
  2278 ;;      Totals:         2       0       0       0       0       0       0
  2279 ;;Total ram usage:        2 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_scramble
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text11
  2290  000C2E                     __ptext11:
  2291                           	opt stack 0
  2292  000C2E                     _L:
  2293                           	opt stack 29
  2294                           
  2295                           ;main.c: 90: int i;
  2296                           ;main.c: 91: for(i=0;i<3;i+=2) {
  2297                           
  2298                           ;incstack = 0
  2299  000C2E  0E00               	movlw	0
  2300  000C30  6E36               	movwf	L@i+1,c
  2301  000C32  0E00               	movlw	0
  2302  000C34  6E35               	movwf	L@i,c
  2303  000C36  BE36               	btfsc	L@i+1,7,c
  2304  000C38  D008               	goto	l67
  2305  000C3A  5036               	movf	L@i+1,w,c
  2306  000C3C  E105               	bnz	u110
  2307  000C3E  0E03               	movlw	3
  2308  000C40  5C35               	subwf	L@i,w,c
  2309  000C42  B0D8               	btfsc	status,0,c
  2310  000C44  0012               	return	
  2311  000C46  D001               	goto	l67
  2312  000C48                     u110:
  2313  000C48  0012               	return	
  2314  000C4A                     l67:
  2315                           
  2316                           ;main.c: 92: temp[i] = surface_three[i];
  2317  000C4A  90D8               	bcf	status,0,c
  2318  000C4C  3435               	rlcf	L@i,w,c
  2319  000C4E  6ED9               	movwf	fsr2l,c
  2320  000C50  3436               	rlcf	L@i+1,w,c
  2321  000C52  6EDA               	movwf	fsr2h,c
  2322  000C54  0E19               	movlw	low _surface_three
  2323  000C56  26D9               	addwf	fsr2l,f,c
  2324  000C58  0E00               	movlw	high _surface_three
  2325  000C5A  22DA               	addwfc	fsr2h,f,c
  2326  000C5C  90D8               	bcf	status,0,c
  2327  000C5E  3435               	rlcf	L@i,w,c
  2328  000C60  6EE1               	movwf	fsr1l,c
  2329  000C62  3436               	rlcf	L@i+1,w,c
  2330  000C64  6EE2               	movwf	fsr1h,c
  2331  000C66  0E53               	movlw	low _temp
  2332  000C68  26E1               	addwf	fsr1l,f,c
  2333  000C6A  0E00               	movlw	high _temp
  2334  000C6C  22E2               	addwfc	fsr1h,f,c
  2335  000C6E  CFDE FFE6          	movff	postinc2,postinc1
  2336  000C72  CFDD FFE5          	movff	postdec2,postdec1
  2337                           
  2338                           ;main.c: 93: surface_three[i] = surface_one[i];
  2339  000C76  90D8               	bcf	status,0,c
  2340  000C78  3435               	rlcf	L@i,w,c
  2341  000C7A  6ED9               	movwf	fsr2l,c
  2342  000C7C  3436               	rlcf	L@i+1,w,c
  2343  000C7E  6EDA               	movwf	fsr2h,c
  2344  000C80  0E29               	movlw	low _surface_one
  2345  000C82  26D9               	addwf	fsr2l,f,c
  2346  000C84  0E00               	movlw	high _surface_one
  2347  000C86  22DA               	addwfc	fsr2h,f,c
  2348  000C88  90D8               	bcf	status,0,c
  2349  000C8A  3435               	rlcf	L@i,w,c
  2350  000C8C  6EE1               	movwf	fsr1l,c
  2351  000C8E  3436               	rlcf	L@i+1,w,c
  2352  000C90  6EE2               	movwf	fsr1h,c
  2353  000C92  0E19               	movlw	low _surface_three
  2354  000C94  26E1               	addwf	fsr1l,f,c
  2355  000C96  0E00               	movlw	high _surface_three
  2356  000C98  22E2               	addwfc	fsr1h,f,c
  2357  000C9A  CFDE FFE6          	movff	postinc2,postinc1
  2358  000C9E  CFDD FFE5          	movff	postdec2,postdec1
  2359                           
  2360                           ;main.c: 94: surface_one[i] = surface_two[i];
  2361  000CA2  90D8               	bcf	status,0,c
  2362  000CA4  3435               	rlcf	L@i,w,c
  2363  000CA6  6ED9               	movwf	fsr2l,c
  2364  000CA8  3436               	rlcf	L@i+1,w,c
  2365  000CAA  6EDA               	movwf	fsr2h,c
  2366  000CAC  0E21               	movlw	low _surface_two
  2367  000CAE  26D9               	addwf	fsr2l,f,c
  2368  000CB0  0E00               	movlw	high _surface_two
  2369  000CB2  22DA               	addwfc	fsr2h,f,c
  2370  000CB4  90D8               	bcf	status,0,c
  2371  000CB6  3435               	rlcf	L@i,w,c
  2372  000CB8  6EE1               	movwf	fsr1l,c
  2373  000CBA  3436               	rlcf	L@i+1,w,c
  2374  000CBC  6EE2               	movwf	fsr1h,c
  2375  000CBE  0E29               	movlw	low _surface_one
  2376  000CC0  26E1               	addwf	fsr1l,f,c
  2377  000CC2  0E00               	movlw	high _surface_one
  2378  000CC4  22E2               	addwfc	fsr1h,f,c
  2379  000CC6  CFDE FFE6          	movff	postinc2,postinc1
  2380  000CCA  CFDD FFE5          	movff	postdec2,postdec1
  2381                           
  2382                           ;main.c: 95: surface_two[i] = surface_six[i];
  2383  000CCE  90D8               	bcf	status,0,c
  2384  000CD0  3435               	rlcf	L@i,w,c
  2385  000CD2  6ED9               	movwf	fsr2l,c
  2386  000CD4  3436               	rlcf	L@i+1,w,c
  2387  000CD6  6EDA               	movwf	fsr2h,c
  2388  000CD8  0E01               	movlw	low _surface_six
  2389  000CDA  26D9               	addwf	fsr2l,f,c
  2390  000CDC  0E00               	movlw	high _surface_six
  2391  000CDE  22DA               	addwfc	fsr2h,f,c
  2392  000CE0  90D8               	bcf	status,0,c
  2393  000CE2  3435               	rlcf	L@i,w,c
  2394  000CE4  6EE1               	movwf	fsr1l,c
  2395  000CE6  3436               	rlcf	L@i+1,w,c
  2396  000CE8  6EE2               	movwf	fsr1h,c
  2397  000CEA  0E21               	movlw	low _surface_two
  2398  000CEC  26E1               	addwf	fsr1l,f,c
  2399  000CEE  0E00               	movlw	high _surface_two
  2400  000CF0  22E2               	addwfc	fsr1h,f,c
  2401  000CF2  CFDE FFE6          	movff	postinc2,postinc1
  2402  000CF6  CFDD FFE5          	movff	postdec2,postdec1
  2403                           
  2404                           ;main.c: 96: surface_six[i] = temp[i];
  2405  000CFA  90D8               	bcf	status,0,c
  2406  000CFC  3435               	rlcf	L@i,w,c
  2407  000CFE  6ED9               	movwf	fsr2l,c
  2408  000D00  3436               	rlcf	L@i+1,w,c
  2409  000D02  6EDA               	movwf	fsr2h,c
  2410  000D04  0E53               	movlw	low _temp
  2411  000D06  26D9               	addwf	fsr2l,f,c
  2412  000D08  0E00               	movlw	high _temp
  2413  000D0A  22DA               	addwfc	fsr2h,f,c
  2414  000D0C  90D8               	bcf	status,0,c
  2415  000D0E  3435               	rlcf	L@i,w,c
  2416  000D10  6EE1               	movwf	fsr1l,c
  2417  000D12  3436               	rlcf	L@i+1,w,c
  2418  000D14  6EE2               	movwf	fsr1h,c
  2419  000D16  0E01               	movlw	low _surface_six
  2420  000D18  26E1               	addwf	fsr1l,f,c
  2421  000D1A  0E00               	movlw	high _surface_six
  2422  000D1C  22E2               	addwfc	fsr1h,f,c
  2423  000D1E  CFDE FFE6          	movff	postinc2,postinc1
  2424  000D22  CFDD FFE5          	movff	postdec2,postdec1
  2425  000D26  0E02               	movlw	2
  2426  000D28  2635               	addwf	L@i,f,c
  2427  000D2A  0E00               	movlw	0
  2428  000D2C  2236               	addwfc	L@i+1,f,c
  2429  000D2E  BE36               	btfsc	L@i+1,7,c
  2430  000D30  D78C               	goto	l67
  2431  000D32  5036               	movf	L@i+1,w,c
  2432  000D34  E101               	bnz	l69
  2433  000D36  D783               	goto	L7
  2434  000D38                     l69:
  2435  000D38  0012               	return		;funcret
  2436  000D3A                     __end_of_L:
  2437                           	opt stack 0
  2438                           tblptru	equ	0xFF8
  2439                           tblptrh	equ	0xFF7
  2440                           tblptrl	equ	0xFF6
  2441                           tablat	equ	0xFF5
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postinc1	equ	0xFE6
  2445                           postdec1	equ	0xFE5
  2446                           fsr1h	equ	0xFE2
  2447                           fsr1l	equ	0xFE1
  2448                           postinc2	equ	0xFDE
  2449                           postdec2	equ	0xFDD
  2450                           fsr2h	equ	0xFDA
  2451                           fsr2l	equ	0xFD9
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _Fi *****************
  2455 ;; Defined at:
  2456 ;;		line 149 in file "main.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  i               2    0[COMRAM] int 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2470 ;;      Params:         0       0       0       0       0       0       0
  2471 ;;      Locals:         2       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0
  2473 ;;      Totals:         2       0       0       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_scramble
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text12
  2485  000F4A                     __ptext12:
  2486                           	opt stack 0
  2487  000F4A                     _Fi:
  2488                           	opt stack 29
  2489                           
  2490                           ;main.c: 150: int i;
  2491                           ;main.c: 151: for(i=2;i<=3;i++) {
  2492                           
  2493                           ;incstack = 0
  2494  000F4A  0E00               	movlw	0
  2495  000F4C  6E36               	movwf	Fi@i+1,c
  2496  000F4E  0E02               	movlw	2
  2497  000F50  6E35               	movwf	Fi@i,c
  2498  000F52  BE36               	btfsc	Fi@i+1,7,c
  2499  000F54  D008               	goto	l92
  2500  000F56  5036               	movf	Fi@i+1,w,c
  2501  000F58  E105               	bnz	u210
  2502  000F5A  0E04               	movlw	4
  2503  000F5C  5C35               	subwf	Fi@i,w,c
  2504  000F5E  B0D8               	btfsc	status,0,c
  2505  000F60  0012               	return	
  2506  000F62  D001               	goto	l92
  2507  000F64                     u210:
  2508  000F64  0012               	return	
  2509  000F66                     l92:
  2510                           
  2511                           ;main.c: 152: temp[i] = surface_one[i];
  2512  000F66  90D8               	bcf	status,0,c
  2513  000F68  3435               	rlcf	Fi@i,w,c
  2514  000F6A  6ED9               	movwf	fsr2l,c
  2515  000F6C  3436               	rlcf	Fi@i+1,w,c
  2516  000F6E  6EDA               	movwf	fsr2h,c
  2517  000F70  0E29               	movlw	low _surface_one
  2518  000F72  26D9               	addwf	fsr2l,f,c
  2519  000F74  0E00               	movlw	high _surface_one
  2520  000F76  22DA               	addwfc	fsr2h,f,c
  2521  000F78  90D8               	bcf	status,0,c
  2522  000F7A  3435               	rlcf	Fi@i,w,c
  2523  000F7C  6EE1               	movwf	fsr1l,c
  2524  000F7E  3436               	rlcf	Fi@i+1,w,c
  2525  000F80  6EE2               	movwf	fsr1h,c
  2526  000F82  0E53               	movlw	low _temp
  2527  000F84  26E1               	addwf	fsr1l,f,c
  2528  000F86  0E00               	movlw	high _temp
  2529  000F88  22E2               	addwfc	fsr1h,f,c
  2530  000F8A  CFDE FFE6          	movff	postinc2,postinc1
  2531  000F8E  CFDD FFE5          	movff	postdec2,postdec1
  2532                           
  2533                           ;main.c: 153: surface_one[i] = surface_four[i];
  2534  000F92  90D8               	bcf	status,0,c
  2535  000F94  3435               	rlcf	Fi@i,w,c
  2536  000F96  6ED9               	movwf	fsr2l,c
  2537  000F98  3436               	rlcf	Fi@i+1,w,c
  2538  000F9A  6EDA               	movwf	fsr2h,c
  2539  000F9C  0E11               	movlw	low _surface_four
  2540  000F9E  26D9               	addwf	fsr2l,f,c
  2541  000FA0  0E00               	movlw	high _surface_four
  2542  000FA2  22DA               	addwfc	fsr2h,f,c
  2543  000FA4  90D8               	bcf	status,0,c
  2544  000FA6  3435               	rlcf	Fi@i,w,c
  2545  000FA8  6EE1               	movwf	fsr1l,c
  2546  000FAA  3436               	rlcf	Fi@i+1,w,c
  2547  000FAC  6EE2               	movwf	fsr1h,c
  2548  000FAE  0E29               	movlw	low _surface_one
  2549  000FB0  26E1               	addwf	fsr1l,f,c
  2550  000FB2  0E00               	movlw	high _surface_one
  2551  000FB4  22E2               	addwfc	fsr1h,f,c
  2552  000FB6  CFDE FFE6          	movff	postinc2,postinc1
  2553  000FBA  CFDD FFE5          	movff	postdec2,postdec1
  2554                           
  2555                           ;main.c: 154: surface_four[i] = surface_six[i];
  2556  000FBE  90D8               	bcf	status,0,c
  2557  000FC0  3435               	rlcf	Fi@i,w,c
  2558  000FC2  6ED9               	movwf	fsr2l,c
  2559  000FC4  3436               	rlcf	Fi@i+1,w,c
  2560  000FC6  6EDA               	movwf	fsr2h,c
  2561  000FC8  0E01               	movlw	low _surface_six
  2562  000FCA  26D9               	addwf	fsr2l,f,c
  2563  000FCC  0E00               	movlw	high _surface_six
  2564  000FCE  22DA               	addwfc	fsr2h,f,c
  2565  000FD0  90D8               	bcf	status,0,c
  2566  000FD2  3435               	rlcf	Fi@i,w,c
  2567  000FD4  6EE1               	movwf	fsr1l,c
  2568  000FD6  3436               	rlcf	Fi@i+1,w,c
  2569  000FD8  6EE2               	movwf	fsr1h,c
  2570  000FDA  0E11               	movlw	low _surface_four
  2571  000FDC  26E1               	addwf	fsr1l,f,c
  2572  000FDE  0E00               	movlw	high _surface_four
  2573  000FE0  22E2               	addwfc	fsr1h,f,c
  2574  000FE2  CFDE FFE6          	movff	postinc2,postinc1
  2575  000FE6  CFDD FFE5          	movff	postdec2,postdec1
  2576                           
  2577                           ;main.c: 155: surface_six[i] = surface_two[i];
  2578  000FEA  90D8               	bcf	status,0,c
  2579  000FEC  3435               	rlcf	Fi@i,w,c
  2580  000FEE  6ED9               	movwf	fsr2l,c
  2581  000FF0  3436               	rlcf	Fi@i+1,w,c
  2582  000FF2  6EDA               	movwf	fsr2h,c
  2583  000FF4  0E21               	movlw	low _surface_two
  2584  000FF6  26D9               	addwf	fsr2l,f,c
  2585  000FF8  0E00               	movlw	high _surface_two
  2586  000FFA  22DA               	addwfc	fsr2h,f,c
  2587  000FFC  90D8               	bcf	status,0,c
  2588  000FFE  3435               	rlcf	Fi@i,w,c
  2589  001000  6EE1               	movwf	fsr1l,c
  2590  001002  3436               	rlcf	Fi@i+1,w,c
  2591  001004  6EE2               	movwf	fsr1h,c
  2592  001006  0E01               	movlw	low _surface_six
  2593  001008  26E1               	addwf	fsr1l,f,c
  2594  00100A  0E00               	movlw	high _surface_six
  2595  00100C  22E2               	addwfc	fsr1h,f,c
  2596  00100E  CFDE FFE6          	movff	postinc2,postinc1
  2597  001012  CFDD FFE5          	movff	postdec2,postdec1
  2598                           
  2599                           ;main.c: 156: surface_two[i] = temp[i];
  2600  001016  90D8               	bcf	status,0,c
  2601  001018  3435               	rlcf	Fi@i,w,c
  2602  00101A  6ED9               	movwf	fsr2l,c
  2603  00101C  3436               	rlcf	Fi@i+1,w,c
  2604  00101E  6EDA               	movwf	fsr2h,c
  2605  001020  0E53               	movlw	low _temp
  2606  001022  26D9               	addwf	fsr2l,f,c
  2607  001024  0E00               	movlw	high _temp
  2608  001026  22DA               	addwfc	fsr2h,f,c
  2609  001028  90D8               	bcf	status,0,c
  2610  00102A  3435               	rlcf	Fi@i,w,c
  2611  00102C  6EE1               	movwf	fsr1l,c
  2612  00102E  3436               	rlcf	Fi@i+1,w,c
  2613  001030  6EE2               	movwf	fsr1h,c
  2614  001032  0E21               	movlw	low _surface_two
  2615  001034  26E1               	addwf	fsr1l,f,c
  2616  001036  0E00               	movlw	high _surface_two
  2617  001038  22E2               	addwfc	fsr1h,f,c
  2618  00103A  CFDE FFE6          	movff	postinc2,postinc1
  2619  00103E  CFDD FFE5          	movff	postdec2,postdec1
  2620  001042  4A35               	infsnz	Fi@i,f,c
  2621  001044  2A36               	incf	Fi@i+1,f,c
  2622  001046  BE36               	btfsc	Fi@i+1,7,c
  2623  001048  D78E               	goto	l92
  2624  00104A  5036               	movf	Fi@i+1,w,c
  2625  00104C  E101               	bnz	l94
  2626  00104E  D785               	goto	L8
  2627  001050                     l94:
  2628  001050  0012               	return		;funcret
  2629  001052                     __end_of_Fi:
  2630                           	opt stack 0
  2631                           tblptru	equ	0xFF8
  2632                           tblptrh	equ	0xFF7
  2633                           tblptrl	equ	0xFF6
  2634                           tablat	equ	0xFF5
  2635                           postinc0	equ	0xFEE
  2636                           wreg	equ	0xFE8
  2637                           postinc1	equ	0xFE6
  2638                           postdec1	equ	0xFE5
  2639                           fsr1h	equ	0xFE2
  2640                           fsr1l	equ	0xFE1
  2641                           postinc2	equ	0xFDE
  2642                           postdec2	equ	0xFDD
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8
  2646                           
  2647 ;; *************** function _F *****************
  2648 ;; Defined at:
  2649 ;;		line 137 in file "main.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  i               2    0[COMRAM] int 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2663 ;;      Params:         0       0       0       0       0       0       0
  2664 ;;      Locals:         2       0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0
  2666 ;;      Totals:         2       0       0       0       0       0       0
  2667 ;;Total ram usage:        2 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_scramble
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text13
  2678  001052                     __ptext13:
  2679                           	opt stack 0
  2680  001052                     _F:
  2681                           	opt stack 29
  2682                           
  2683                           ;main.c: 138: int i;
  2684                           ;main.c: 139: for(i=2;i<=3;i++) {
  2685                           
  2686                           ;incstack = 0
  2687  001052  0E00               	movlw	0
  2688  001054  6E36               	movwf	F@i+1,c
  2689  001056  0E02               	movlw	2
  2690  001058  6E35               	movwf	F@i,c
  2691  00105A  BE36               	btfsc	F@i+1,7,c
  2692  00105C  D008               	goto	l87
  2693  00105E  5036               	movf	F@i+1,w,c
  2694  001060  E105               	bnz	u190
  2695  001062  0E04               	movlw	4
  2696  001064  5C35               	subwf	F@i,w,c
  2697  001066  B0D8               	btfsc	status,0,c
  2698  001068  0012               	return	
  2699  00106A  D001               	goto	l87
  2700  00106C                     u190:
  2701  00106C  0012               	return	
  2702  00106E                     l87:
  2703                           
  2704                           ;main.c: 140: temp[i] = surface_one[i];
  2705  00106E  90D8               	bcf	status,0,c
  2706  001070  3435               	rlcf	F@i,w,c
  2707  001072  6ED9               	movwf	fsr2l,c
  2708  001074  3436               	rlcf	F@i+1,w,c
  2709  001076  6EDA               	movwf	fsr2h,c
  2710  001078  0E29               	movlw	low _surface_one
  2711  00107A  26D9               	addwf	fsr2l,f,c
  2712  00107C  0E00               	movlw	high _surface_one
  2713  00107E  22DA               	addwfc	fsr2h,f,c
  2714  001080  90D8               	bcf	status,0,c
  2715  001082  3435               	rlcf	F@i,w,c
  2716  001084  6EE1               	movwf	fsr1l,c
  2717  001086  3436               	rlcf	F@i+1,w,c
  2718  001088  6EE2               	movwf	fsr1h,c
  2719  00108A  0E53               	movlw	low _temp
  2720  00108C  26E1               	addwf	fsr1l,f,c
  2721  00108E  0E00               	movlw	high _temp
  2722  001090  22E2               	addwfc	fsr1h,f,c
  2723  001092  CFDE FFE6          	movff	postinc2,postinc1
  2724  001096  CFDD FFE5          	movff	postdec2,postdec1
  2725                           
  2726                           ;main.c: 141: surface_one[i] = surface_two[i];
  2727  00109A  90D8               	bcf	status,0,c
  2728  00109C  3435               	rlcf	F@i,w,c
  2729  00109E  6ED9               	movwf	fsr2l,c
  2730  0010A0  3436               	rlcf	F@i+1,w,c
  2731  0010A2  6EDA               	movwf	fsr2h,c
  2732  0010A4  0E21               	movlw	low _surface_two
  2733  0010A6  26D9               	addwf	fsr2l,f,c
  2734  0010A8  0E00               	movlw	high _surface_two
  2735  0010AA  22DA               	addwfc	fsr2h,f,c
  2736  0010AC  90D8               	bcf	status,0,c
  2737  0010AE  3435               	rlcf	F@i,w,c
  2738  0010B0  6EE1               	movwf	fsr1l,c
  2739  0010B2  3436               	rlcf	F@i+1,w,c
  2740  0010B4  6EE2               	movwf	fsr1h,c
  2741  0010B6  0E29               	movlw	low _surface_one
  2742  0010B8  26E1               	addwf	fsr1l,f,c
  2743  0010BA  0E00               	movlw	high _surface_one
  2744  0010BC  22E2               	addwfc	fsr1h,f,c
  2745  0010BE  CFDE FFE6          	movff	postinc2,postinc1
  2746  0010C2  CFDD FFE5          	movff	postdec2,postdec1
  2747                           
  2748                           ;main.c: 142: surface_two[i] = surface_six[i];
  2749  0010C6  90D8               	bcf	status,0,c
  2750  0010C8  3435               	rlcf	F@i,w,c
  2751  0010CA  6ED9               	movwf	fsr2l,c
  2752  0010CC  3436               	rlcf	F@i+1,w,c
  2753  0010CE  6EDA               	movwf	fsr2h,c
  2754  0010D0  0E01               	movlw	low _surface_six
  2755  0010D2  26D9               	addwf	fsr2l,f,c
  2756  0010D4  0E00               	movlw	high _surface_six
  2757  0010D6  22DA               	addwfc	fsr2h,f,c
  2758  0010D8  90D8               	bcf	status,0,c
  2759  0010DA  3435               	rlcf	F@i,w,c
  2760  0010DC  6EE1               	movwf	fsr1l,c
  2761  0010DE  3436               	rlcf	F@i+1,w,c
  2762  0010E0  6EE2               	movwf	fsr1h,c
  2763  0010E2  0E21               	movlw	low _surface_two
  2764  0010E4  26E1               	addwf	fsr1l,f,c
  2765  0010E6  0E00               	movlw	high _surface_two
  2766  0010E8  22E2               	addwfc	fsr1h,f,c
  2767  0010EA  CFDE FFE6          	movff	postinc2,postinc1
  2768  0010EE  CFDD FFE5          	movff	postdec2,postdec1
  2769                           
  2770                           ;main.c: 143: surface_six[i] = surface_four[i];
  2771  0010F2  90D8               	bcf	status,0,c
  2772  0010F4  3435               	rlcf	F@i,w,c
  2773  0010F6  6ED9               	movwf	fsr2l,c
  2774  0010F8  3436               	rlcf	F@i+1,w,c
  2775  0010FA  6EDA               	movwf	fsr2h,c
  2776  0010FC  0E11               	movlw	low _surface_four
  2777  0010FE  26D9               	addwf	fsr2l,f,c
  2778  001100  0E00               	movlw	high _surface_four
  2779  001102  22DA               	addwfc	fsr2h,f,c
  2780  001104  90D8               	bcf	status,0,c
  2781  001106  3435               	rlcf	F@i,w,c
  2782  001108  6EE1               	movwf	fsr1l,c
  2783  00110A  3436               	rlcf	F@i+1,w,c
  2784  00110C  6EE2               	movwf	fsr1h,c
  2785  00110E  0E01               	movlw	low _surface_six
  2786  001110  26E1               	addwf	fsr1l,f,c
  2787  001112  0E00               	movlw	high _surface_six
  2788  001114  22E2               	addwfc	fsr1h,f,c
  2789  001116  CFDE FFE6          	movff	postinc2,postinc1
  2790  00111A  CFDD FFE5          	movff	postdec2,postdec1
  2791                           
  2792                           ;main.c: 144: surface_four[i] = temp[i];
  2793  00111E  90D8               	bcf	status,0,c
  2794  001120  3435               	rlcf	F@i,w,c
  2795  001122  6ED9               	movwf	fsr2l,c
  2796  001124  3436               	rlcf	F@i+1,w,c
  2797  001126  6EDA               	movwf	fsr2h,c
  2798  001128  0E53               	movlw	low _temp
  2799  00112A  26D9               	addwf	fsr2l,f,c
  2800  00112C  0E00               	movlw	high _temp
  2801  00112E  22DA               	addwfc	fsr2h,f,c
  2802  001130  90D8               	bcf	status,0,c
  2803  001132  3435               	rlcf	F@i,w,c
  2804  001134  6EE1               	movwf	fsr1l,c
  2805  001136  3436               	rlcf	F@i+1,w,c
  2806  001138  6EE2               	movwf	fsr1h,c
  2807  00113A  0E11               	movlw	low _surface_four
  2808  00113C  26E1               	addwf	fsr1l,f,c
  2809  00113E  0E00               	movlw	high _surface_four
  2810  001140  22E2               	addwfc	fsr1h,f,c
  2811  001142  CFDE FFE6          	movff	postinc2,postinc1
  2812  001146  CFDD FFE5          	movff	postdec2,postdec1
  2813  00114A  4A35               	infsnz	F@i,f,c
  2814  00114C  2A36               	incf	F@i+1,f,c
  2815  00114E  BE36               	btfsc	F@i+1,7,c
  2816  001150  D78E               	goto	l87
  2817  001152  5036               	movf	F@i+1,w,c
  2818  001154  E101               	bnz	l89
  2819  001156  D785               	goto	L9
  2820  001158                     l89:
  2821  001158  0012               	return		;funcret
  2822  00115A                     __end_of_F:
  2823                           	opt stack 0
  2824                           tblptru	equ	0xFF8
  2825                           tblptrh	equ	0xFF7
  2826                           tblptrl	equ	0xFF6
  2827                           tablat	equ	0xFF5
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postinc1	equ	0xFE6
  2831                           postdec1	equ	0xFE5
  2832                           fsr1h	equ	0xFE2
  2833                           fsr1l	equ	0xFE1
  2834                           postinc2	equ	0xFDE
  2835                           postdec2	equ	0xFDD
  2836                           fsr2h	equ	0xFDA
  2837                           fsr2l	equ	0xFD9
  2838                           status	equ	0xFD8
  2839                           
  2840 ;; *************** function _Di *****************
  2841 ;; Defined at:
  2842 ;;		line 77 in file "main.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  i               2    0[COMRAM] int 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2856 ;;      Params:         0       0       0       0       0       0       0
  2857 ;;      Locals:         2       0       0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0
  2859 ;;      Totals:         2       0       0       0       0       0       0
  2860 ;;Total ram usage:        2 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_scramble
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text14
  2871  00115A                     __ptext14:
  2872                           	opt stack 0
  2873  00115A                     _Di:
  2874                           	opt stack 29
  2875                           
  2876                           ;main.c: 78: int i;
  2877                           ;main.c: 79: for(i=2;i<4;i++) {
  2878                           
  2879                           ;incstack = 0
  2880  00115A  0E00               	movlw	0
  2881  00115C  6E36               	movwf	Di@i+1,c
  2882  00115E  0E02               	movlw	2
  2883  001160  6E35               	movwf	Di@i,c
  2884  001162  BE36               	btfsc	Di@i+1,7,c
  2885  001164  D008               	goto	l62
  2886  001166  5036               	movf	Di@i+1,w,c
  2887  001168  E105               	bnz	u90
  2888  00116A  0E04               	movlw	4
  2889  00116C  5C35               	subwf	Di@i,w,c
  2890  00116E  B0D8               	btfsc	status,0,c
  2891  001170  0012               	return	
  2892  001172  D001               	goto	l62
  2893  001174                     u90:
  2894  001174  0012               	return	
  2895  001176                     l62:
  2896                           
  2897                           ;main.c: 80: temp[i] = surface_three[i];
  2898  001176  90D8               	bcf	status,0,c
  2899  001178  3435               	rlcf	Di@i,w,c
  2900  00117A  6ED9               	movwf	fsr2l,c
  2901  00117C  3436               	rlcf	Di@i+1,w,c
  2902  00117E  6EDA               	movwf	fsr2h,c
  2903  001180  0E19               	movlw	low _surface_three
  2904  001182  26D9               	addwf	fsr2l,f,c
  2905  001184  0E00               	movlw	high _surface_three
  2906  001186  22DA               	addwfc	fsr2h,f,c
  2907  001188  90D8               	bcf	status,0,c
  2908  00118A  3435               	rlcf	Di@i,w,c
  2909  00118C  6EE1               	movwf	fsr1l,c
  2910  00118E  3436               	rlcf	Di@i+1,w,c
  2911  001190  6EE2               	movwf	fsr1h,c
  2912  001192  0E53               	movlw	low _temp
  2913  001194  26E1               	addwf	fsr1l,f,c
  2914  001196  0E00               	movlw	high _temp
  2915  001198  22E2               	addwfc	fsr1h,f,c
  2916  00119A  CFDE FFE6          	movff	postinc2,postinc1
  2917  00119E  CFDD FFE5          	movff	postdec2,postdec1
  2918                           
  2919                           ;main.c: 81: surface_three[i] = surface_four[i];
  2920  0011A2  90D8               	bcf	status,0,c
  2921  0011A4  3435               	rlcf	Di@i,w,c
  2922  0011A6  6ED9               	movwf	fsr2l,c
  2923  0011A8  3436               	rlcf	Di@i+1,w,c
  2924  0011AA  6EDA               	movwf	fsr2h,c
  2925  0011AC  0E11               	movlw	low _surface_four
  2926  0011AE  26D9               	addwf	fsr2l,f,c
  2927  0011B0  0E00               	movlw	high _surface_four
  2928  0011B2  22DA               	addwfc	fsr2h,f,c
  2929  0011B4  90D8               	bcf	status,0,c
  2930  0011B6  3435               	rlcf	Di@i,w,c
  2931  0011B8  6EE1               	movwf	fsr1l,c
  2932  0011BA  3436               	rlcf	Di@i+1,w,c
  2933  0011BC  6EE2               	movwf	fsr1h,c
  2934  0011BE  0E19               	movlw	low _surface_three
  2935  0011C0  26E1               	addwf	fsr1l,f,c
  2936  0011C2  0E00               	movlw	high _surface_three
  2937  0011C4  22E2               	addwfc	fsr1h,f,c
  2938  0011C6  CFDE FFE6          	movff	postinc2,postinc1
  2939  0011CA  CFDD FFE5          	movff	postdec2,postdec1
  2940                           
  2941                           ;main.c: 82: surface_four[i] = surface_five[i];
  2942  0011CE  90D8               	bcf	status,0,c
  2943  0011D0  3435               	rlcf	Di@i,w,c
  2944  0011D2  6ED9               	movwf	fsr2l,c
  2945  0011D4  3436               	rlcf	Di@i+1,w,c
  2946  0011D6  6EDA               	movwf	fsr2h,c
  2947  0011D8  0E09               	movlw	low _surface_five
  2948  0011DA  26D9               	addwf	fsr2l,f,c
  2949  0011DC  0E00               	movlw	high _surface_five
  2950  0011DE  22DA               	addwfc	fsr2h,f,c
  2951  0011E0  90D8               	bcf	status,0,c
  2952  0011E2  3435               	rlcf	Di@i,w,c
  2953  0011E4  6EE1               	movwf	fsr1l,c
  2954  0011E6  3436               	rlcf	Di@i+1,w,c
  2955  0011E8  6EE2               	movwf	fsr1h,c
  2956  0011EA  0E11               	movlw	low _surface_four
  2957  0011EC  26E1               	addwf	fsr1l,f,c
  2958  0011EE  0E00               	movlw	high _surface_four
  2959  0011F0  22E2               	addwfc	fsr1h,f,c
  2960  0011F2  CFDE FFE6          	movff	postinc2,postinc1
  2961  0011F6  CFDD FFE5          	movff	postdec2,postdec1
  2962                           
  2963                           ;main.c: 83: surface_five[i] = surface_two[i];
  2964  0011FA  90D8               	bcf	status,0,c
  2965  0011FC  3435               	rlcf	Di@i,w,c
  2966  0011FE  6ED9               	movwf	fsr2l,c
  2967  001200  3436               	rlcf	Di@i+1,w,c
  2968  001202  6EDA               	movwf	fsr2h,c
  2969  001204  0E21               	movlw	low _surface_two
  2970  001206  26D9               	addwf	fsr2l,f,c
  2971  001208  0E00               	movlw	high _surface_two
  2972  00120A  22DA               	addwfc	fsr2h,f,c
  2973  00120C  90D8               	bcf	status,0,c
  2974  00120E  3435               	rlcf	Di@i,w,c
  2975  001210  6EE1               	movwf	fsr1l,c
  2976  001212  3436               	rlcf	Di@i+1,w,c
  2977  001214  6EE2               	movwf	fsr1h,c
  2978  001216  0E09               	movlw	low _surface_five
  2979  001218  26E1               	addwf	fsr1l,f,c
  2980  00121A  0E00               	movlw	high _surface_five
  2981  00121C  22E2               	addwfc	fsr1h,f,c
  2982  00121E  CFDE FFE6          	movff	postinc2,postinc1
  2983  001222  CFDD FFE5          	movff	postdec2,postdec1
  2984                           
  2985                           ;main.c: 84: surface_two[i] = temp[i];
  2986  001226  90D8               	bcf	status,0,c
  2987  001228  3435               	rlcf	Di@i,w,c
  2988  00122A  6ED9               	movwf	fsr2l,c
  2989  00122C  3436               	rlcf	Di@i+1,w,c
  2990  00122E  6EDA               	movwf	fsr2h,c
  2991  001230  0E53               	movlw	low _temp
  2992  001232  26D9               	addwf	fsr2l,f,c
  2993  001234  0E00               	movlw	high _temp
  2994  001236  22DA               	addwfc	fsr2h,f,c
  2995  001238  90D8               	bcf	status,0,c
  2996  00123A  3435               	rlcf	Di@i,w,c
  2997  00123C  6EE1               	movwf	fsr1l,c
  2998  00123E  3436               	rlcf	Di@i+1,w,c
  2999  001240  6EE2               	movwf	fsr1h,c
  3000  001242  0E21               	movlw	low _surface_two
  3001  001244  26E1               	addwf	fsr1l,f,c
  3002  001246  0E00               	movlw	high _surface_two
  3003  001248  22E2               	addwfc	fsr1h,f,c
  3004  00124A  CFDE FFE6          	movff	postinc2,postinc1
  3005  00124E  CFDD FFE5          	movff	postdec2,postdec1
  3006  001252  4A35               	infsnz	Di@i,f,c
  3007  001254  2A36               	incf	Di@i+1,f,c
  3008  001256  BE36               	btfsc	Di@i+1,7,c
  3009  001258  D78E               	goto	l62
  3010  00125A  5036               	movf	Di@i+1,w,c
  3011  00125C  E101               	bnz	l64
  3012  00125E  D785               	goto	L10
  3013  001260                     l64:
  3014  001260  0012               	return		;funcret
  3015  001262                     __end_of_Di:
  3016                           	opt stack 0
  3017                           tblptru	equ	0xFF8
  3018                           tblptrh	equ	0xFF7
  3019                           tblptrl	equ	0xFF6
  3020                           tablat	equ	0xFF5
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           postinc1	equ	0xFE6
  3024                           postdec1	equ	0xFE5
  3025                           fsr1h	equ	0xFE2
  3026                           fsr1l	equ	0xFE1
  3027                           postinc2	equ	0xFDE
  3028                           postdec2	equ	0xFDD
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _D *****************
  3034 ;; Defined at:
  3035 ;;		line 65 in file "main.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  i               2    0[COMRAM] int 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3049 ;;      Params:         0       0       0       0       0       0       0
  3050 ;;      Locals:         2       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0
  3052 ;;      Totals:         2       0       0       0       0       0       0
  3053 ;;Total ram usage:        2 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; This function calls:
  3056 ;;		Nothing
  3057 ;; This function is called by:
  3058 ;;		_scramble
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text15
  3064  001262                     __ptext15:
  3065                           	opt stack 0
  3066  001262                     _D:
  3067                           	opt stack 29
  3068                           
  3069                           ;main.c: 66: int i;
  3070                           ;main.c: 67: for(i=2;i<4;i++) {
  3071                           
  3072                           ;incstack = 0
  3073  001262  0E00               	movlw	0
  3074  001264  6E36               	movwf	D@i+1,c
  3075  001266  0E02               	movlw	2
  3076  001268  6E35               	movwf	D@i,c
  3077  00126A  BE36               	btfsc	D@i+1,7,c
  3078  00126C  D008               	goto	l57
  3079  00126E  5036               	movf	D@i+1,w,c
  3080  001270  E105               	bnz	u70
  3081  001272  0E04               	movlw	4
  3082  001274  5C35               	subwf	D@i,w,c
  3083  001276  B0D8               	btfsc	status,0,c
  3084  001278  0012               	return	
  3085  00127A  D001               	goto	l57
  3086  00127C                     u70:
  3087  00127C  0012               	return	
  3088  00127E                     l57:
  3089                           
  3090                           ;main.c: 68: temp[i] = surface_three[i];
  3091  00127E  90D8               	bcf	status,0,c
  3092  001280  3435               	rlcf	D@i,w,c
  3093  001282  6ED9               	movwf	fsr2l,c
  3094  001284  3436               	rlcf	D@i+1,w,c
  3095  001286  6EDA               	movwf	fsr2h,c
  3096  001288  0E19               	movlw	low _surface_three
  3097  00128A  26D9               	addwf	fsr2l,f,c
  3098  00128C  0E00               	movlw	high _surface_three
  3099  00128E  22DA               	addwfc	fsr2h,f,c
  3100  001290  90D8               	bcf	status,0,c
  3101  001292  3435               	rlcf	D@i,w,c
  3102  001294  6EE1               	movwf	fsr1l,c
  3103  001296  3436               	rlcf	D@i+1,w,c
  3104  001298  6EE2               	movwf	fsr1h,c
  3105  00129A  0E53               	movlw	low _temp
  3106  00129C  26E1               	addwf	fsr1l,f,c
  3107  00129E  0E00               	movlw	high _temp
  3108  0012A0  22E2               	addwfc	fsr1h,f,c
  3109  0012A2  CFDE FFE6          	movff	postinc2,postinc1
  3110  0012A6  CFDD FFE5          	movff	postdec2,postdec1
  3111                           
  3112                           ;main.c: 69: surface_three[i] = surface_two[i];
  3113  0012AA  90D8               	bcf	status,0,c
  3114  0012AC  3435               	rlcf	D@i,w,c
  3115  0012AE  6ED9               	movwf	fsr2l,c
  3116  0012B0  3436               	rlcf	D@i+1,w,c
  3117  0012B2  6EDA               	movwf	fsr2h,c
  3118  0012B4  0E21               	movlw	low _surface_two
  3119  0012B6  26D9               	addwf	fsr2l,f,c
  3120  0012B8  0E00               	movlw	high _surface_two
  3121  0012BA  22DA               	addwfc	fsr2h,f,c
  3122  0012BC  90D8               	bcf	status,0,c
  3123  0012BE  3435               	rlcf	D@i,w,c
  3124  0012C0  6EE1               	movwf	fsr1l,c
  3125  0012C2  3436               	rlcf	D@i+1,w,c
  3126  0012C4  6EE2               	movwf	fsr1h,c
  3127  0012C6  0E19               	movlw	low _surface_three
  3128  0012C8  26E1               	addwf	fsr1l,f,c
  3129  0012CA  0E00               	movlw	high _surface_three
  3130  0012CC  22E2               	addwfc	fsr1h,f,c
  3131  0012CE  CFDE FFE6          	movff	postinc2,postinc1
  3132  0012D2  CFDD FFE5          	movff	postdec2,postdec1
  3133                           
  3134                           ;main.c: 70: surface_two[i] = surface_five[i];
  3135  0012D6  90D8               	bcf	status,0,c
  3136  0012D8  3435               	rlcf	D@i,w,c
  3137  0012DA  6ED9               	movwf	fsr2l,c
  3138  0012DC  3436               	rlcf	D@i+1,w,c
  3139  0012DE  6EDA               	movwf	fsr2h,c
  3140  0012E0  0E09               	movlw	low _surface_five
  3141  0012E2  26D9               	addwf	fsr2l,f,c
  3142  0012E4  0E00               	movlw	high _surface_five
  3143  0012E6  22DA               	addwfc	fsr2h,f,c
  3144  0012E8  90D8               	bcf	status,0,c
  3145  0012EA  3435               	rlcf	D@i,w,c
  3146  0012EC  6EE1               	movwf	fsr1l,c
  3147  0012EE  3436               	rlcf	D@i+1,w,c
  3148  0012F0  6EE2               	movwf	fsr1h,c
  3149  0012F2  0E21               	movlw	low _surface_two
  3150  0012F4  26E1               	addwf	fsr1l,f,c
  3151  0012F6  0E00               	movlw	high _surface_two
  3152  0012F8  22E2               	addwfc	fsr1h,f,c
  3153  0012FA  CFDE FFE6          	movff	postinc2,postinc1
  3154  0012FE  CFDD FFE5          	movff	postdec2,postdec1
  3155                           
  3156                           ;main.c: 71: surface_five[i] = surface_four[i];
  3157  001302  90D8               	bcf	status,0,c
  3158  001304  3435               	rlcf	D@i,w,c
  3159  001306  6ED9               	movwf	fsr2l,c
  3160  001308  3436               	rlcf	D@i+1,w,c
  3161  00130A  6EDA               	movwf	fsr2h,c
  3162  00130C  0E11               	movlw	low _surface_four
  3163  00130E  26D9               	addwf	fsr2l,f,c
  3164  001310  0E00               	movlw	high _surface_four
  3165  001312  22DA               	addwfc	fsr2h,f,c
  3166  001314  90D8               	bcf	status,0,c
  3167  001316  3435               	rlcf	D@i,w,c
  3168  001318  6EE1               	movwf	fsr1l,c
  3169  00131A  3436               	rlcf	D@i+1,w,c
  3170  00131C  6EE2               	movwf	fsr1h,c
  3171  00131E  0E09               	movlw	low _surface_five
  3172  001320  26E1               	addwf	fsr1l,f,c
  3173  001322  0E00               	movlw	high _surface_five
  3174  001324  22E2               	addwfc	fsr1h,f,c
  3175  001326  CFDE FFE6          	movff	postinc2,postinc1
  3176  00132A  CFDD FFE5          	movff	postdec2,postdec1
  3177                           
  3178                           ;main.c: 72: surface_four[i] = temp[i];
  3179  00132E  90D8               	bcf	status,0,c
  3180  001330  3435               	rlcf	D@i,w,c
  3181  001332  6ED9               	movwf	fsr2l,c
  3182  001334  3436               	rlcf	D@i+1,w,c
  3183  001336  6EDA               	movwf	fsr2h,c
  3184  001338  0E53               	movlw	low _temp
  3185  00133A  26D9               	addwf	fsr2l,f,c
  3186  00133C  0E00               	movlw	high _temp
  3187  00133E  22DA               	addwfc	fsr2h,f,c
  3188  001340  90D8               	bcf	status,0,c
  3189  001342  3435               	rlcf	D@i,w,c
  3190  001344  6EE1               	movwf	fsr1l,c
  3191  001346  3436               	rlcf	D@i+1,w,c
  3192  001348  6EE2               	movwf	fsr1h,c
  3193  00134A  0E11               	movlw	low _surface_four
  3194  00134C  26E1               	addwf	fsr1l,f,c
  3195  00134E  0E00               	movlw	high _surface_four
  3196  001350  22E2               	addwfc	fsr1h,f,c
  3197  001352  CFDE FFE6          	movff	postinc2,postinc1
  3198  001356  CFDD FFE5          	movff	postdec2,postdec1
  3199  00135A  4A35               	infsnz	D@i,f,c
  3200  00135C  2A36               	incf	D@i+1,f,c
  3201  00135E  BE36               	btfsc	D@i+1,7,c
  3202  001360  D78E               	goto	l57
  3203  001362  5036               	movf	D@i+1,w,c
  3204  001364  E101               	bnz	l59
  3205  001366  D785               	goto	L11
  3206  001368                     l59:
  3207  001368  0012               	return		;funcret
  3208  00136A                     __end_of_D:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           postinc0	equ	0xFEE
  3215                           wreg	equ	0xFE8
  3216                           postinc1	equ	0xFE6
  3217                           postdec1	equ	0xFE5
  3218                           fsr1h	equ	0xFE2
  3219                           fsr1l	equ	0xFE1
  3220                           postinc2	equ	0xFDE
  3221                           postdec2	equ	0xFDD
  3222                           fsr2h	equ	0xFDA
  3223                           fsr2l	equ	0xFD9
  3224                           status	equ	0xFD8
  3225                           
  3226 ;; *************** function _Bi *****************
  3227 ;; Defined at:
  3228 ;;		line 173 in file "main.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;  i               2    0[COMRAM] int 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3242 ;;      Params:         0       0       0       0       0       0       0
  3243 ;;      Locals:         2       0       0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0
  3245 ;;      Totals:         2       0       0       0       0       0       0
  3246 ;;Total ram usage:        2 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_scramble
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text16
  3257  00136A                     __ptext16:
  3258                           	opt stack 0
  3259  00136A                     _Bi:
  3260                           	opt stack 29
  3261                           
  3262                           ;main.c: 174: int i;
  3263                           ;main.c: 175: for(i=0;i<=1;i++) {
  3264                           
  3265                           ;incstack = 0
  3266  00136A  0E00               	movlw	0
  3267  00136C  6E36               	movwf	Bi@i+1,c
  3268  00136E  0E00               	movlw	0
  3269  001370  6E35               	movwf	Bi@i,c
  3270  001372  BE36               	btfsc	Bi@i+1,7,c
  3271  001374  D008               	goto	l102
  3272  001376  5036               	movf	Bi@i+1,w,c
  3273  001378  E105               	bnz	u250
  3274  00137A  0E02               	movlw	2
  3275  00137C  5C35               	subwf	Bi@i,w,c
  3276  00137E  B0D8               	btfsc	status,0,c
  3277  001380  0012               	return	
  3278  001382  D001               	goto	l102
  3279  001384                     u250:
  3280  001384  0012               	return	
  3281  001386                     l102:
  3282                           
  3283                           ;main.c: 176: temp[i] = surface_one[i];
  3284  001386  90D8               	bcf	status,0,c
  3285  001388  3435               	rlcf	Bi@i,w,c
  3286  00138A  6ED9               	movwf	fsr2l,c
  3287  00138C  3436               	rlcf	Bi@i+1,w,c
  3288  00138E  6EDA               	movwf	fsr2h,c
  3289  001390  0E29               	movlw	low _surface_one
  3290  001392  26D9               	addwf	fsr2l,f,c
  3291  001394  0E00               	movlw	high _surface_one
  3292  001396  22DA               	addwfc	fsr2h,f,c
  3293  001398  90D8               	bcf	status,0,c
  3294  00139A  3435               	rlcf	Bi@i,w,c
  3295  00139C  6EE1               	movwf	fsr1l,c
  3296  00139E  3436               	rlcf	Bi@i+1,w,c
  3297  0013A0  6EE2               	movwf	fsr1h,c
  3298  0013A2  0E53               	movlw	low _temp
  3299  0013A4  26E1               	addwf	fsr1l,f,c
  3300  0013A6  0E00               	movlw	high _temp
  3301  0013A8  22E2               	addwfc	fsr1h,f,c
  3302  0013AA  CFDE FFE6          	movff	postinc2,postinc1
  3303  0013AE  CFDD FFE5          	movff	postdec2,postdec1
  3304                           
  3305                           ;main.c: 177: surface_one[i] = surface_two[i];
  3306  0013B2  90D8               	bcf	status,0,c
  3307  0013B4  3435               	rlcf	Bi@i,w,c
  3308  0013B6  6ED9               	movwf	fsr2l,c
  3309  0013B8  3436               	rlcf	Bi@i+1,w,c
  3310  0013BA  6EDA               	movwf	fsr2h,c
  3311  0013BC  0E21               	movlw	low _surface_two
  3312  0013BE  26D9               	addwf	fsr2l,f,c
  3313  0013C0  0E00               	movlw	high _surface_two
  3314  0013C2  22DA               	addwfc	fsr2h,f,c
  3315  0013C4  90D8               	bcf	status,0,c
  3316  0013C6  3435               	rlcf	Bi@i,w,c
  3317  0013C8  6EE1               	movwf	fsr1l,c
  3318  0013CA  3436               	rlcf	Bi@i+1,w,c
  3319  0013CC  6EE2               	movwf	fsr1h,c
  3320  0013CE  0E29               	movlw	low _surface_one
  3321  0013D0  26E1               	addwf	fsr1l,f,c
  3322  0013D2  0E00               	movlw	high _surface_one
  3323  0013D4  22E2               	addwfc	fsr1h,f,c
  3324  0013D6  CFDE FFE6          	movff	postinc2,postinc1
  3325  0013DA  CFDD FFE5          	movff	postdec2,postdec1
  3326                           
  3327                           ;main.c: 178: surface_two[i] = surface_six[i];
  3328  0013DE  90D8               	bcf	status,0,c
  3329  0013E0  3435               	rlcf	Bi@i,w,c
  3330  0013E2  6ED9               	movwf	fsr2l,c
  3331  0013E4  3436               	rlcf	Bi@i+1,w,c
  3332  0013E6  6EDA               	movwf	fsr2h,c
  3333  0013E8  0E01               	movlw	low _surface_six
  3334  0013EA  26D9               	addwf	fsr2l,f,c
  3335  0013EC  0E00               	movlw	high _surface_six
  3336  0013EE  22DA               	addwfc	fsr2h,f,c
  3337  0013F0  90D8               	bcf	status,0,c
  3338  0013F2  3435               	rlcf	Bi@i,w,c
  3339  0013F4  6EE1               	movwf	fsr1l,c
  3340  0013F6  3436               	rlcf	Bi@i+1,w,c
  3341  0013F8  6EE2               	movwf	fsr1h,c
  3342  0013FA  0E21               	movlw	low _surface_two
  3343  0013FC  26E1               	addwf	fsr1l,f,c
  3344  0013FE  0E00               	movlw	high _surface_two
  3345  001400  22E2               	addwfc	fsr1h,f,c
  3346  001402  CFDE FFE6          	movff	postinc2,postinc1
  3347  001406  CFDD FFE5          	movff	postdec2,postdec1
  3348                           
  3349                           ;main.c: 179: surface_six[i] = surface_four[i];
  3350  00140A  90D8               	bcf	status,0,c
  3351  00140C  3435               	rlcf	Bi@i,w,c
  3352  00140E  6ED9               	movwf	fsr2l,c
  3353  001410  3436               	rlcf	Bi@i+1,w,c
  3354  001412  6EDA               	movwf	fsr2h,c
  3355  001414  0E11               	movlw	low _surface_four
  3356  001416  26D9               	addwf	fsr2l,f,c
  3357  001418  0E00               	movlw	high _surface_four
  3358  00141A  22DA               	addwfc	fsr2h,f,c
  3359  00141C  90D8               	bcf	status,0,c
  3360  00141E  3435               	rlcf	Bi@i,w,c
  3361  001420  6EE1               	movwf	fsr1l,c
  3362  001422  3436               	rlcf	Bi@i+1,w,c
  3363  001424  6EE2               	movwf	fsr1h,c
  3364  001426  0E01               	movlw	low _surface_six
  3365  001428  26E1               	addwf	fsr1l,f,c
  3366  00142A  0E00               	movlw	high _surface_six
  3367  00142C  22E2               	addwfc	fsr1h,f,c
  3368  00142E  CFDE FFE6          	movff	postinc2,postinc1
  3369  001432  CFDD FFE5          	movff	postdec2,postdec1
  3370                           
  3371                           ;main.c: 180: surface_four[i] = temp[i];
  3372  001436  90D8               	bcf	status,0,c
  3373  001438  3435               	rlcf	Bi@i,w,c
  3374  00143A  6ED9               	movwf	fsr2l,c
  3375  00143C  3436               	rlcf	Bi@i+1,w,c
  3376  00143E  6EDA               	movwf	fsr2h,c
  3377  001440  0E53               	movlw	low _temp
  3378  001442  26D9               	addwf	fsr2l,f,c
  3379  001444  0E00               	movlw	high _temp
  3380  001446  22DA               	addwfc	fsr2h,f,c
  3381  001448  90D8               	bcf	status,0,c
  3382  00144A  3435               	rlcf	Bi@i,w,c
  3383  00144C  6EE1               	movwf	fsr1l,c
  3384  00144E  3436               	rlcf	Bi@i+1,w,c
  3385  001450  6EE2               	movwf	fsr1h,c
  3386  001452  0E11               	movlw	low _surface_four
  3387  001454  26E1               	addwf	fsr1l,f,c
  3388  001456  0E00               	movlw	high _surface_four
  3389  001458  22E2               	addwfc	fsr1h,f,c
  3390  00145A  CFDE FFE6          	movff	postinc2,postinc1
  3391  00145E  CFDD FFE5          	movff	postdec2,postdec1
  3392  001462  4A35               	infsnz	Bi@i,f,c
  3393  001464  2A36               	incf	Bi@i+1,f,c
  3394  001466  BE36               	btfsc	Bi@i+1,7,c
  3395  001468  D78E               	goto	l102
  3396  00146A  5036               	movf	Bi@i+1,w,c
  3397  00146C  E101               	bnz	l104
  3398  00146E  D785               	goto	L12
  3399  001470                     l104:
  3400  001470  0012               	return		;funcret
  3401  001472                     __end_of_Bi:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           postinc0	equ	0xFEE
  3408                           wreg	equ	0xFE8
  3409                           postinc1	equ	0xFE6
  3410                           postdec1	equ	0xFE5
  3411                           fsr1h	equ	0xFE2
  3412                           fsr1l	equ	0xFE1
  3413                           postinc2	equ	0xFDE
  3414                           postdec2	equ	0xFDD
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _B *****************
  3420 ;; Defined at:
  3421 ;;		line 161 in file "main.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  i               2    0[COMRAM] int 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      void 
  3428 ;; Registers used:
  3429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3435 ;;      Params:         0       0       0       0       0       0       0
  3436 ;;      Locals:         2       0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0
  3438 ;;      Totals:         2       0       0       0       0       0       0
  3439 ;;Total ram usage:        2 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_scramble
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text17
  3450  001472                     __ptext17:
  3451                           	opt stack 0
  3452  001472                     _B:
  3453                           	opt stack 29
  3454                           
  3455                           ;main.c: 162: int i;
  3456                           ;main.c: 163: for(i=0;i<=1;i++) {
  3457                           
  3458                           ;incstack = 0
  3459  001472  0E00               	movlw	0
  3460  001474  6E36               	movwf	B@i+1,c
  3461  001476  0E00               	movlw	0
  3462  001478  6E35               	movwf	B@i,c
  3463  00147A  BE36               	btfsc	B@i+1,7,c
  3464  00147C  D008               	goto	l97
  3465  00147E  5036               	movf	B@i+1,w,c
  3466  001480  E105               	bnz	u230
  3467  001482  0E02               	movlw	2
  3468  001484  5C35               	subwf	B@i,w,c
  3469  001486  B0D8               	btfsc	status,0,c
  3470  001488  0012               	return	
  3471  00148A  D001               	goto	l97
  3472  00148C                     u230:
  3473  00148C  0012               	return	
  3474  00148E                     l97:
  3475                           
  3476                           ;main.c: 164: temp[i] = surface_one[i];
  3477  00148E  90D8               	bcf	status,0,c
  3478  001490  3435               	rlcf	B@i,w,c
  3479  001492  6ED9               	movwf	fsr2l,c
  3480  001494  3436               	rlcf	B@i+1,w,c
  3481  001496  6EDA               	movwf	fsr2h,c
  3482  001498  0E29               	movlw	low _surface_one
  3483  00149A  26D9               	addwf	fsr2l,f,c
  3484  00149C  0E00               	movlw	high _surface_one
  3485  00149E  22DA               	addwfc	fsr2h,f,c
  3486  0014A0  90D8               	bcf	status,0,c
  3487  0014A2  3435               	rlcf	B@i,w,c
  3488  0014A4  6EE1               	movwf	fsr1l,c
  3489  0014A6  3436               	rlcf	B@i+1,w,c
  3490  0014A8  6EE2               	movwf	fsr1h,c
  3491  0014AA  0E53               	movlw	low _temp
  3492  0014AC  26E1               	addwf	fsr1l,f,c
  3493  0014AE  0E00               	movlw	high _temp
  3494  0014B0  22E2               	addwfc	fsr1h,f,c
  3495  0014B2  CFDE FFE6          	movff	postinc2,postinc1
  3496  0014B6  CFDD FFE5          	movff	postdec2,postdec1
  3497                           
  3498                           ;main.c: 165: surface_one[i] = surface_four[i];
  3499  0014BA  90D8               	bcf	status,0,c
  3500  0014BC  3435               	rlcf	B@i,w,c
  3501  0014BE  6ED9               	movwf	fsr2l,c
  3502  0014C0  3436               	rlcf	B@i+1,w,c
  3503  0014C2  6EDA               	movwf	fsr2h,c
  3504  0014C4  0E11               	movlw	low _surface_four
  3505  0014C6  26D9               	addwf	fsr2l,f,c
  3506  0014C8  0E00               	movlw	high _surface_four
  3507  0014CA  22DA               	addwfc	fsr2h,f,c
  3508  0014CC  90D8               	bcf	status,0,c
  3509  0014CE  3435               	rlcf	B@i,w,c
  3510  0014D0  6EE1               	movwf	fsr1l,c
  3511  0014D2  3436               	rlcf	B@i+1,w,c
  3512  0014D4  6EE2               	movwf	fsr1h,c
  3513  0014D6  0E29               	movlw	low _surface_one
  3514  0014D8  26E1               	addwf	fsr1l,f,c
  3515  0014DA  0E00               	movlw	high _surface_one
  3516  0014DC  22E2               	addwfc	fsr1h,f,c
  3517  0014DE  CFDE FFE6          	movff	postinc2,postinc1
  3518  0014E2  CFDD FFE5          	movff	postdec2,postdec1
  3519                           
  3520                           ;main.c: 166: surface_four[i] = surface_six[i];
  3521  0014E6  90D8               	bcf	status,0,c
  3522  0014E8  3435               	rlcf	B@i,w,c
  3523  0014EA  6ED9               	movwf	fsr2l,c
  3524  0014EC  3436               	rlcf	B@i+1,w,c
  3525  0014EE  6EDA               	movwf	fsr2h,c
  3526  0014F0  0E01               	movlw	low _surface_six
  3527  0014F2  26D9               	addwf	fsr2l,f,c
  3528  0014F4  0E00               	movlw	high _surface_six
  3529  0014F6  22DA               	addwfc	fsr2h,f,c
  3530  0014F8  90D8               	bcf	status,0,c
  3531  0014FA  3435               	rlcf	B@i,w,c
  3532  0014FC  6EE1               	movwf	fsr1l,c
  3533  0014FE  3436               	rlcf	B@i+1,w,c
  3534  001500  6EE2               	movwf	fsr1h,c
  3535  001502  0E11               	movlw	low _surface_four
  3536  001504  26E1               	addwf	fsr1l,f,c
  3537  001506  0E00               	movlw	high _surface_four
  3538  001508  22E2               	addwfc	fsr1h,f,c
  3539  00150A  CFDE FFE6          	movff	postinc2,postinc1
  3540  00150E  CFDD FFE5          	movff	postdec2,postdec1
  3541                           
  3542                           ;main.c: 167: surface_six[i] = surface_two[i];
  3543  001512  90D8               	bcf	status,0,c
  3544  001514  3435               	rlcf	B@i,w,c
  3545  001516  6ED9               	movwf	fsr2l,c
  3546  001518  3436               	rlcf	B@i+1,w,c
  3547  00151A  6EDA               	movwf	fsr2h,c
  3548  00151C  0E21               	movlw	low _surface_two
  3549  00151E  26D9               	addwf	fsr2l,f,c
  3550  001520  0E00               	movlw	high _surface_two
  3551  001522  22DA               	addwfc	fsr2h,f,c
  3552  001524  90D8               	bcf	status,0,c
  3553  001526  3435               	rlcf	B@i,w,c
  3554  001528  6EE1               	movwf	fsr1l,c
  3555  00152A  3436               	rlcf	B@i+1,w,c
  3556  00152C  6EE2               	movwf	fsr1h,c
  3557  00152E  0E01               	movlw	low _surface_six
  3558  001530  26E1               	addwf	fsr1l,f,c
  3559  001532  0E00               	movlw	high _surface_six
  3560  001534  22E2               	addwfc	fsr1h,f,c
  3561  001536  CFDE FFE6          	movff	postinc2,postinc1
  3562  00153A  CFDD FFE5          	movff	postdec2,postdec1
  3563                           
  3564                           ;main.c: 168: surface_two[i] = temp[i];
  3565  00153E  90D8               	bcf	status,0,c
  3566  001540  3435               	rlcf	B@i,w,c
  3567  001542  6ED9               	movwf	fsr2l,c
  3568  001544  3436               	rlcf	B@i+1,w,c
  3569  001546  6EDA               	movwf	fsr2h,c
  3570  001548  0E53               	movlw	low _temp
  3571  00154A  26D9               	addwf	fsr2l,f,c
  3572  00154C  0E00               	movlw	high _temp
  3573  00154E  22DA               	addwfc	fsr2h,f,c
  3574  001550  90D8               	bcf	status,0,c
  3575  001552  3435               	rlcf	B@i,w,c
  3576  001554  6EE1               	movwf	fsr1l,c
  3577  001556  3436               	rlcf	B@i+1,w,c
  3578  001558  6EE2               	movwf	fsr1h,c
  3579  00155A  0E21               	movlw	low _surface_two
  3580  00155C  26E1               	addwf	fsr1l,f,c
  3581  00155E  0E00               	movlw	high _surface_two
  3582  001560  22E2               	addwfc	fsr1h,f,c
  3583  001562  CFDE FFE6          	movff	postinc2,postinc1
  3584  001566  CFDD FFE5          	movff	postdec2,postdec1
  3585  00156A  4A35               	infsnz	B@i,f,c
  3586  00156C  2A36               	incf	B@i+1,f,c
  3587  00156E  BE36               	btfsc	B@i+1,7,c
  3588  001570  D78E               	goto	l97
  3589  001572  5036               	movf	B@i+1,w,c
  3590  001574  E101               	bnz	l99
  3591  001576  D785               	goto	L13
  3592  001578                     l99:
  3593  001578  0012               	return		;funcret
  3594  00157A                     __end_of_B:
  3595                           	opt stack 0
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           postinc0	equ	0xFEE
  3601                           wreg	equ	0xFE8
  3602                           postinc1	equ	0xFE6
  3603                           postdec1	equ	0xFE5
  3604                           fsr1h	equ	0xFE2
  3605                           fsr1l	equ	0xFE1
  3606                           postinc2	equ	0xFDE
  3607                           postdec2	equ	0xFDD
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _restore *****************
  3613 ;; Defined at:
  3614 ;;		line 257 in file "main.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  i               2    0[COMRAM] int 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3628 ;;      Params:         0       0       0       0       0       0       0
  3629 ;;      Locals:         2       0       0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0
  3631 ;;      Totals:         2       0       0       0       0       0       0
  3632 ;;Total ram usage:        2 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text18
  3642  0007BE                     __ptext18:
  3643                           	opt stack 0
  3644  0007BE                     _restore:
  3645                           	opt stack 30
  3646                           
  3647                           ;main.c: 258: int i;
  3648                           ;main.c: 259: for(i=0;i<4;i++) {
  3649                           
  3650                           ;incstack = 0
  3651  0007BE  0E00               	movlw	0
  3652  0007C0  6E36               	movwf	restore@i+1,c
  3653  0007C2  0E00               	movlw	0
  3654  0007C4  6E35               	movwf	restore@i,c
  3655  0007C6  BE36               	btfsc	restore@i+1,7,c
  3656  0007C8  D008               	goto	l142
  3657  0007CA  5036               	movf	restore@i+1,w,c
  3658  0007CC  E105               	bnz	u430
  3659  0007CE  0E04               	movlw	4
  3660  0007D0  5C35               	subwf	restore@i,w,c
  3661  0007D2  B0D8               	btfsc	status,0,c
  3662  0007D4  0012               	return	
  3663  0007D6  D001               	goto	l142
  3664  0007D8                     u430:
  3665  0007D8  0012               	return	
  3666  0007DA                     l142:
  3667                           
  3668                           ;main.c: 260: surface_one[i] = native_surface_one[i];
  3669  0007DA  90D8               	bcf	status,0,c
  3670  0007DC  3435               	rlcf	restore@i,w,c
  3671  0007DE  6EF6               	movwf	tblptrl,c
  3672  0007E0  3436               	rlcf	restore@i+1,w,c
  3673  0007E2  6EF7               	movwf	tblptrh,c
  3674  0007E4  0E29               	movlw	low _native_surface_one
  3675  0007E6  26F6               	addwf	tblptrl,f,c
  3676  0007E8  0E06               	movlw	high _native_surface_one
  3677  0007EA  22F7               	addwfc	tblptrh,f,c
  3678  0007EC                     	if	0	;There are less than 3 active tblptr bytes
  3679  0007EC                     	endif
  3680  0007EC  90D8               	bcf	status,0,c
  3681  0007EE  3435               	rlcf	restore@i,w,c
  3682  0007F0  6ED9               	movwf	fsr2l,c
  3683  0007F2  3436               	rlcf	restore@i+1,w,c
  3684  0007F4  6EDA               	movwf	fsr2h,c
  3685  0007F6  0E29               	movlw	low _surface_one
  3686  0007F8  26D9               	addwf	fsr2l,f,c
  3687  0007FA  0E00               	movlw	high _surface_one
  3688  0007FC  22DA               	addwfc	fsr2h,f,c
  3689  0007FE  0009               	tblrd		*+
  3690  000800  CFF5 FFDE          	movff	tablat,postinc2
  3691  000804  0008               	tblrd		*
  3692  000806  CFF5 FFDD          	movff	tablat,postdec2
  3693                           
  3694                           ;main.c: 261: surface_two[i] = native_surface_two[i];
  3695  00080A  90D8               	bcf	status,0,c
  3696  00080C  3435               	rlcf	restore@i,w,c
  3697  00080E  6EF6               	movwf	tblptrl,c
  3698  000810  3436               	rlcf	restore@i+1,w,c
  3699  000812  6EF7               	movwf	tblptrh,c
  3700  000814  0E21               	movlw	low _native_surface_two
  3701  000816  26F6               	addwf	tblptrl,f,c
  3702  000818  0E06               	movlw	high _native_surface_two
  3703  00081A  22F7               	addwfc	tblptrh,f,c
  3704  00081C                     	if	0	;There are less than 3 active tblptr bytes
  3705  00081C                     	endif
  3706  00081C  90D8               	bcf	status,0,c
  3707  00081E  3435               	rlcf	restore@i,w,c
  3708  000820  6ED9               	movwf	fsr2l,c
  3709  000822  3436               	rlcf	restore@i+1,w,c
  3710  000824  6EDA               	movwf	fsr2h,c
  3711  000826  0E21               	movlw	low _surface_two
  3712  000828  26D9               	addwf	fsr2l,f,c
  3713  00082A  0E00               	movlw	high _surface_two
  3714  00082C  22DA               	addwfc	fsr2h,f,c
  3715  00082E  0009               	tblrd		*+
  3716  000830  CFF5 FFDE          	movff	tablat,postinc2
  3717  000834  0008               	tblrd		*
  3718  000836  CFF5 FFDD          	movff	tablat,postdec2
  3719                           
  3720                           ;main.c: 262: surface_three[i] = native_surface_three[i];
  3721  00083A  90D8               	bcf	status,0,c
  3722  00083C  3435               	rlcf	restore@i,w,c
  3723  00083E  6EF6               	movwf	tblptrl,c
  3724  000840  3436               	rlcf	restore@i+1,w,c
  3725  000842  6EF7               	movwf	tblptrh,c
  3726  000844  0E19               	movlw	low _native_surface_three
  3727  000846  26F6               	addwf	tblptrl,f,c
  3728  000848  0E06               	movlw	high _native_surface_three
  3729  00084A  22F7               	addwfc	tblptrh,f,c
  3730  00084C                     	if	0	;There are less than 3 active tblptr bytes
  3731  00084C                     	endif
  3732  00084C  90D8               	bcf	status,0,c
  3733  00084E  3435               	rlcf	restore@i,w,c
  3734  000850  6ED9               	movwf	fsr2l,c
  3735  000852  3436               	rlcf	restore@i+1,w,c
  3736  000854  6EDA               	movwf	fsr2h,c
  3737  000856  0E19               	movlw	low _surface_three
  3738  000858  26D9               	addwf	fsr2l,f,c
  3739  00085A  0E00               	movlw	high _surface_three
  3740  00085C  22DA               	addwfc	fsr2h,f,c
  3741  00085E  0009               	tblrd		*+
  3742  000860  CFF5 FFDE          	movff	tablat,postinc2
  3743  000864  0008               	tblrd		*
  3744  000866  CFF5 FFDD          	movff	tablat,postdec2
  3745                           
  3746                           ;main.c: 263: surface_four[i] = native_surface_four[i];
  3747  00086A  90D8               	bcf	status,0,c
  3748  00086C  3435               	rlcf	restore@i,w,c
  3749  00086E  6EF6               	movwf	tblptrl,c
  3750  000870  3436               	rlcf	restore@i+1,w,c
  3751  000872  6EF7               	movwf	tblptrh,c
  3752  000874  0E11               	movlw	low _native_surface_four
  3753  000876  26F6               	addwf	tblptrl,f,c
  3754  000878  0E06               	movlw	high _native_surface_four
  3755  00087A  22F7               	addwfc	tblptrh,f,c
  3756  00087C                     	if	0	;There are less than 3 active tblptr bytes
  3757  00087C                     	endif
  3758  00087C  90D8               	bcf	status,0,c
  3759  00087E  3435               	rlcf	restore@i,w,c
  3760  000880  6ED9               	movwf	fsr2l,c
  3761  000882  3436               	rlcf	restore@i+1,w,c
  3762  000884  6EDA               	movwf	fsr2h,c
  3763  000886  0E11               	movlw	low _surface_four
  3764  000888  26D9               	addwf	fsr2l,f,c
  3765  00088A  0E00               	movlw	high _surface_four
  3766  00088C  22DA               	addwfc	fsr2h,f,c
  3767  00088E  0009               	tblrd		*+
  3768  000890  CFF5 FFDE          	movff	tablat,postinc2
  3769  000894  0008               	tblrd		*
  3770  000896  CFF5 FFDD          	movff	tablat,postdec2
  3771                           
  3772                           ;main.c: 264: surface_five[i] = native_surface_five[i];
  3773  00089A  90D8               	bcf	status,0,c
  3774  00089C  3435               	rlcf	restore@i,w,c
  3775  00089E  6EF6               	movwf	tblptrl,c
  3776  0008A0  3436               	rlcf	restore@i+1,w,c
  3777  0008A2  6EF7               	movwf	tblptrh,c
  3778  0008A4  0E09               	movlw	low _native_surface_five
  3779  0008A6  26F6               	addwf	tblptrl,f,c
  3780  0008A8  0E06               	movlw	high _native_surface_five
  3781  0008AA  22F7               	addwfc	tblptrh,f,c
  3782  0008AC                     	if	0	;There are less than 3 active tblptr bytes
  3783  0008AC                     	endif
  3784  0008AC  90D8               	bcf	status,0,c
  3785  0008AE  3435               	rlcf	restore@i,w,c
  3786  0008B0  6ED9               	movwf	fsr2l,c
  3787  0008B2  3436               	rlcf	restore@i+1,w,c
  3788  0008B4  6EDA               	movwf	fsr2h,c
  3789  0008B6  0E09               	movlw	low _surface_five
  3790  0008B8  26D9               	addwf	fsr2l,f,c
  3791  0008BA  0E00               	movlw	high _surface_five
  3792  0008BC  22DA               	addwfc	fsr2h,f,c
  3793  0008BE  0009               	tblrd		*+
  3794  0008C0  CFF5 FFDE          	movff	tablat,postinc2
  3795  0008C4  0008               	tblrd		*
  3796  0008C6  CFF5 FFDD          	movff	tablat,postdec2
  3797                           
  3798                           ;main.c: 265: surface_six[i] = native_surface_six[i];
  3799  0008CA  90D8               	bcf	status,0,c
  3800  0008CC  3435               	rlcf	restore@i,w,c
  3801  0008CE  6EF6               	movwf	tblptrl,c
  3802  0008D0  3436               	rlcf	restore@i+1,w,c
  3803  0008D2  6EF7               	movwf	tblptrh,c
  3804  0008D4  0E01               	movlw	low _native_surface_six
  3805  0008D6  26F6               	addwf	tblptrl,f,c
  3806  0008D8  0E06               	movlw	high _native_surface_six
  3807  0008DA  22F7               	addwfc	tblptrh,f,c
  3808  0008DC                     	if	0	;There are less than 3 active tblptr bytes
  3809  0008DC                     	endif
  3810  0008DC  90D8               	bcf	status,0,c
  3811  0008DE  3435               	rlcf	restore@i,w,c
  3812  0008E0  6ED9               	movwf	fsr2l,c
  3813  0008E2  3436               	rlcf	restore@i+1,w,c
  3814  0008E4  6EDA               	movwf	fsr2h,c
  3815  0008E6  0E01               	movlw	low _surface_six
  3816  0008E8  26D9               	addwf	fsr2l,f,c
  3817  0008EA  0E00               	movlw	high _surface_six
  3818  0008EC  22DA               	addwfc	fsr2h,f,c
  3819  0008EE  0009               	tblrd		*+
  3820  0008F0  CFF5 FFDE          	movff	tablat,postinc2
  3821  0008F4  0008               	tblrd		*
  3822  0008F6  CFF5 FFDD          	movff	tablat,postdec2
  3823  0008FA  4A35               	infsnz	restore@i,f,c
  3824  0008FC  2A36               	incf	restore@i+1,f,c
  3825  0008FE  BE36               	btfsc	restore@i+1,7,c
  3826  000900  D76C               	goto	l142
  3827  000902  5036               	movf	restore@i+1,w,c
  3828  000904  E101               	bnz	l144
  3829  000906  D763               	goto	L14
  3830  000908                     l144:
  3831  000908  0012               	return		;funcret
  3832  00090A                     __end_of_restore:
  3833                           	opt stack 0
  3834                           tblptru	equ	0xFF8
  3835                           tblptrh	equ	0xFF7
  3836                           tblptrl	equ	0xFF6
  3837                           tablat	equ	0xFF5
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           postinc1	equ	0xFE6
  3841                           postdec1	equ	0xFE5
  3842                           fsr1h	equ	0xFE2
  3843                           fsr1l	equ	0xFE1
  3844                           postinc2	equ	0xFDE
  3845                           postdec2	equ	0xFDD
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _check *****************
  3851 ;; Defined at:
  3852 ;;		line 232 in file "main.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  i               2    4[COMRAM] int 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  2    0[COMRAM] int 
  3859 ;; Registers used:
  3860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3866 ;;      Params:         2       0       0       0       0       0       0
  3867 ;;      Locals:         2       0       0       0       0       0       0
  3868 ;;      Temps:          2       0       0       0       0       0       0
  3869 ;;      Totals:         6       0       0       0       0       0       0
  3870 ;;Total ram usage:        6 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text19
  3880  000632                     __ptext19:
  3881                           	opt stack 0
  3882  000632                     _check:
  3883                           	opt stack 30
  3884                           
  3885                           ;main.c: 233: int i;
  3886                           ;main.c: 234: for(i=0;i<4;i++) {
  3887                           
  3888                           ;incstack = 0
  3889  000632  0E00               	movlw	0
  3890  000634  6E3A               	movwf	check@i+1,c
  3891  000636  0E00               	movlw	0
  3892  000638  6E39               	movwf	check@i,c
  3893  00063A  BE3A               	btfsc	check@i+1,7,c
  3894  00063C  D008               	goto	l126
  3895  00063E  503A               	movf	check@i+1,w,c
  3896  000640  E105               	bnz	u720
  3897  000642  0E04               	movlw	4
  3898  000644  5C39               	subwf	check@i,w,c
  3899  000646  B0D8               	btfsc	status,0,c
  3900  000648  D0B5               	goto	u790
  3901  00064A  D001               	goto	l126
  3902  00064C                     u720:
  3903  00064C  D0B3               	goto	u790
  3904  00064E                     l126:
  3905                           
  3906                           ;main.c: 235: if(surface_one[i] != native_surface_one[i]) {
  3907  00064E  90D8               	bcf	status,0,c
  3908  000650  3439               	rlcf	check@i,w,c
  3909  000652  6EF6               	movwf	tblptrl,c
  3910  000654  343A               	rlcf	check@i+1,w,c
  3911  000656  6EF7               	movwf	tblptrh,c
  3912  000658  0E29               	movlw	low _native_surface_one
  3913  00065A  26F6               	addwf	tblptrl,f,c
  3914  00065C  0E06               	movlw	high _native_surface_one
  3915  00065E  22F7               	addwfc	tblptrh,f,c
  3916  000660                     	if	0	;There are less than 3 active tblptr bytes
  3917  000660                     	endif
  3918  000660  90D8               	bcf	status,0,c
  3919  000662  3439               	rlcf	check@i,w,c
  3920  000664  6ED9               	movwf	fsr2l,c
  3921  000666  343A               	rlcf	check@i+1,w,c
  3922  000668  6EDA               	movwf	fsr2h,c
  3923  00066A  0E29               	movlw	low _surface_one
  3924  00066C  26D9               	addwf	fsr2l,f,c
  3925  00066E  0E00               	movlw	high _surface_one
  3926  000670  22DA               	addwfc	fsr2h,f,c
  3927  000672  0009               	tblrd		*+
  3928  000674  50F5               	movf	tablat,w,c
  3929  000676  18DE               	xorwf	postinc2,w,c
  3930  000678  E105               	bnz	u730
  3931  00067A  0009               	tblrd		*+
  3932  00067C  50F5               	movf	tablat,w,c
  3933  00067E  18DE               	xorwf	postinc2,w,c
  3934  000680  B4D8               	btfsc	status,2,c
  3935  000682  D005               	goto	l128
  3936  000684                     u730:
  3937  000684                     l1295:
  3938                           
  3939                           ;main.c: 236: return 0;
  3940  000684  0E00               	movlw	0
  3941  000686  6E36               	movwf	?_check+1,c
  3942  000688  0E00               	movlw	0
  3943  00068A  6E35               	movwf	?_check,c
  3944  00068C  0012               	return	
  3945  00068E                     l128:
  3946                           
  3947                           ;main.c: 238: else if(surface_two[i] != native_surface_two[i]) {
  3948  00068E  90D8               	bcf	status,0,c
  3949  000690  3439               	rlcf	check@i,w,c
  3950  000692  6EF6               	movwf	tblptrl,c
  3951  000694  343A               	rlcf	check@i+1,w,c
  3952  000696  6EF7               	movwf	tblptrh,c
  3953  000698  0E21               	movlw	low _native_surface_two
  3954  00069A  26F6               	addwf	tblptrl,f,c
  3955  00069C  0E06               	movlw	high _native_surface_two
  3956  00069E  22F7               	addwfc	tblptrh,f,c
  3957  0006A0                     	if	0	;There are less than 3 active tblptr bytes
  3958  0006A0                     	endif
  3959  0006A0  90D8               	bcf	status,0,c
  3960  0006A2  3439               	rlcf	check@i,w,c
  3961  0006A4  6ED9               	movwf	fsr2l,c
  3962  0006A6  343A               	rlcf	check@i+1,w,c
  3963  0006A8  6EDA               	movwf	fsr2h,c
  3964  0006AA  0E21               	movlw	low _surface_two
  3965  0006AC  26D9               	addwf	fsr2l,f,c
  3966  0006AE  0E00               	movlw	high _surface_two
  3967  0006B0  22DA               	addwfc	fsr2h,f,c
  3968  0006B2  0009               	tblrd		*+
  3969  0006B4  50F5               	movf	tablat,w,c
  3970  0006B6  18DE               	xorwf	postinc2,w,c
  3971  0006B8  E1E5               	bnz	l1295
  3972  0006BA  0009               	tblrd		*+
  3973  0006BC  50F5               	movf	tablat,w,c
  3974  0006BE  18DE               	xorwf	postinc2,w,c
  3975  0006C0  A4D8               	btfss	status,2,c
  3976  0006C2  D7E0               	goto	u730
  3977                           
  3978                           ;main.c: 241: else if(surface_three[i] != native_surface_three[i]) {
  3979                           
  3980                           ;main.c: 240: }
  3981                           
  3982                           ;main.c: 239: return 0;
  3983  0006C4  90D8               	bcf	status,0,c
  3984  0006C6  3439               	rlcf	check@i,w,c
  3985  0006C8  6EF6               	movwf	tblptrl,c
  3986  0006CA  343A               	rlcf	check@i+1,w,c
  3987  0006CC  6EF7               	movwf	tblptrh,c
  3988  0006CE  0E19               	movlw	low _native_surface_three
  3989  0006D0  26F6               	addwf	tblptrl,f,c
  3990  0006D2  0E06               	movlw	high _native_surface_three
  3991  0006D4  22F7               	addwfc	tblptrh,f,c
  3992  0006D6                     	if	0	;There are less than 3 active tblptr bytes
  3993  0006D6                     	endif
  3994  0006D6  90D8               	bcf	status,0,c
  3995  0006D8  3439               	rlcf	check@i,w,c
  3996  0006DA  6ED9               	movwf	fsr2l,c
  3997  0006DC  343A               	rlcf	check@i+1,w,c
  3998  0006DE  6EDA               	movwf	fsr2h,c
  3999  0006E0  0E19               	movlw	low _surface_three
  4000  0006E2  26D9               	addwf	fsr2l,f,c
  4001  0006E4  0E00               	movlw	high _surface_three
  4002  0006E6  22DA               	addwfc	fsr2h,f,c
  4003  0006E8  0009               	tblrd		*+
  4004  0006EA  50F5               	movf	tablat,w,c
  4005  0006EC  18DE               	xorwf	postinc2,w,c
  4006  0006EE  E1CA               	bnz	l1295
  4007  0006F0  0009               	tblrd		*+
  4008  0006F2  50F5               	movf	tablat,w,c
  4009  0006F4  18DE               	xorwf	postinc2,w,c
  4010  0006F6  A4D8               	btfss	status,2,c
  4011  0006F8  D7C5               	goto	u730
  4012                           
  4013                           ;main.c: 244: else if(surface_four[i] != native_surface_four[i]) {
  4014                           
  4015                           ;main.c: 243: }
  4016                           
  4017                           ;main.c: 242: return 0;
  4018  0006FA  90D8               	bcf	status,0,c
  4019  0006FC  3439               	rlcf	check@i,w,c
  4020  0006FE  6EF6               	movwf	tblptrl,c
  4021  000700  343A               	rlcf	check@i+1,w,c
  4022  000702  6EF7               	movwf	tblptrh,c
  4023  000704  0E11               	movlw	low _native_surface_four
  4024  000706  26F6               	addwf	tblptrl,f,c
  4025  000708  0E06               	movlw	high _native_surface_four
  4026  00070A  22F7               	addwfc	tblptrh,f,c
  4027  00070C                     	if	0	;There are less than 3 active tblptr bytes
  4028  00070C                     	endif
  4029  00070C  90D8               	bcf	status,0,c
  4030  00070E  3439               	rlcf	check@i,w,c
  4031  000710  6ED9               	movwf	fsr2l,c
  4032  000712  343A               	rlcf	check@i+1,w,c
  4033  000714  6EDA               	movwf	fsr2h,c
  4034  000716  0E11               	movlw	low _surface_four
  4035  000718  26D9               	addwf	fsr2l,f,c
  4036  00071A  0E00               	movlw	high _surface_four
  4037  00071C  22DA               	addwfc	fsr2h,f,c
  4038  00071E  0009               	tblrd		*+
  4039  000720  50F5               	movf	tablat,w,c
  4040  000722  18DE               	xorwf	postinc2,w,c
  4041  000724  E1AF               	bnz	l1295
  4042  000726  0009               	tblrd		*+
  4043  000728  50F5               	movf	tablat,w,c
  4044  00072A  18DE               	xorwf	postinc2,w,c
  4045  00072C  A4D8               	btfss	status,2,c
  4046  00072E  D7AA               	goto	u730
  4047                           
  4048                           ;main.c: 247: else if(surface_five[i] != native_surface_five[i]) {
  4049                           
  4050                           ;main.c: 246: }
  4051                           
  4052                           ;main.c: 245: return 0;
  4053  000730  90D8               	bcf	status,0,c
  4054  000732  3439               	rlcf	check@i,w,c
  4055  000734  6EF6               	movwf	tblptrl,c
  4056  000736  343A               	rlcf	check@i+1,w,c
  4057  000738  6EF7               	movwf	tblptrh,c
  4058  00073A  0E09               	movlw	low _native_surface_five
  4059  00073C  26F6               	addwf	tblptrl,f,c
  4060  00073E  0E06               	movlw	high _native_surface_five
  4061  000740  22F7               	addwfc	tblptrh,f,c
  4062  000742                     	if	0	;There are less than 3 active tblptr bytes
  4063  000742                     	endif
  4064  000742  90D8               	bcf	status,0,c
  4065  000744  3439               	rlcf	check@i,w,c
  4066  000746  6ED9               	movwf	fsr2l,c
  4067  000748  343A               	rlcf	check@i+1,w,c
  4068  00074A  6EDA               	movwf	fsr2h,c
  4069  00074C  0E09               	movlw	low _surface_five
  4070  00074E  26D9               	addwf	fsr2l,f,c
  4071  000750  0E00               	movlw	high _surface_five
  4072  000752  22DA               	addwfc	fsr2h,f,c
  4073  000754  0009               	tblrd		*+
  4074  000756  50F5               	movf	tablat,w,c
  4075  000758  18DE               	xorwf	postinc2,w,c
  4076  00075A  E194               	bnz	l1295
  4077  00075C  0009               	tblrd		*+
  4078  00075E  50F5               	movf	tablat,w,c
  4079  000760  18DE               	xorwf	postinc2,w,c
  4080  000762  A4D8               	btfss	status,2,c
  4081  000764  D78F               	goto	u730
  4082                           
  4083                           ;main.c: 250: else if(surface_six[i] != native_surface_six[i]) {
  4084                           
  4085                           ;main.c: 249: }
  4086                           
  4087                           ;main.c: 248: return 0;
  4088  000766  90D8               	bcf	status,0,c
  4089  000768  3439               	rlcf	check@i,w,c
  4090  00076A  6EF6               	movwf	tblptrl,c
  4091  00076C  343A               	rlcf	check@i+1,w,c
  4092  00076E  6EF7               	movwf	tblptrh,c
  4093  000770  0E01               	movlw	low _native_surface_six
  4094  000772  26F6               	addwf	tblptrl,f,c
  4095  000774  0E06               	movlw	high _native_surface_six
  4096  000776  22F7               	addwfc	tblptrh,f,c
  4097  000778                     	if	0	;There are less than 3 active tblptr bytes
  4098  000778                     	endif
  4099  000778  90D8               	bcf	status,0,c
  4100  00077A  3439               	rlcf	check@i,w,c
  4101  00077C  6ED9               	movwf	fsr2l,c
  4102  00077E  343A               	rlcf	check@i+1,w,c
  4103  000780  6EDA               	movwf	fsr2h,c
  4104  000782  0E01               	movlw	low _surface_six
  4105  000784  26D9               	addwf	fsr2l,f,c
  4106  000786  0E00               	movlw	high _surface_six
  4107  000788  22DA               	addwfc	fsr2h,f,c
  4108  00078A  0009               	tblrd		*+
  4109  00078C  50F5               	movf	tablat,w,c
  4110  00078E  18DE               	xorwf	postinc2,w,c
  4111  000790  E105               	bnz	u780
  4112  000792  0009               	tblrd		*+
  4113  000794  50F5               	movf	tablat,w,c
  4114  000796  18DE               	xorwf	postinc2,w,c
  4115  000798  B4D8               	btfsc	status,2,c
  4116  00079A  D005               	goto	l139
  4117  00079C                     u780:
  4118                           
  4119                           ;main.c: 251: return 0;
  4120  00079C  0E00               	movlw	0
  4121  00079E  6E36               	movwf	?_check+1,c
  4122  0007A0  0E00               	movlw	0
  4123  0007A2  6E35               	movwf	?_check,c
  4124  0007A4  0012               	return	
  4125  0007A6                     l139:
  4126  0007A6  4A39               	infsnz	check@i,f,c
  4127  0007A8  2A3A               	incf	check@i+1,f,c
  4128  0007AA  BE3A               	btfsc	check@i+1,7,c
  4129  0007AC  D750               	goto	l126
  4130  0007AE  503A               	movf	check@i+1,w,c
  4131  0007B0  E101               	bnz	l1343
  4132  0007B2  D747               	goto	L15
  4133  0007B4                     u790:
  4134  0007B4                     l1343:
  4135                           
  4136                           ;main.c: 252: }
  4137                           ;main.c: 253: }
  4138                           ;main.c: 254: return 1;
  4139  0007B4  0E00               	movlw	0
  4140  0007B6  6E36               	movwf	?_check+1,c
  4141  0007B8  0E01               	movlw	1
  4142  0007BA  6E35               	movwf	?_check,c
  4143  0007BC  0012               	return	
  4144  0007BE                     __end_of_check:
  4145                           	opt stack 0
  4146                           tblptru	equ	0xFF8
  4147                           tblptrh	equ	0xFF7
  4148                           tblptrl	equ	0xFF6
  4149                           tablat	equ	0xFF5
  4150                           postinc0	equ	0xFEE
  4151                           wreg	equ	0xFE8
  4152                           postinc1	equ	0xFE6
  4153                           postdec1	equ	0xFE5
  4154                           fsr1h	equ	0xFE2
  4155                           fsr1l	equ	0xFE1
  4156                           postinc2	equ	0xFDE
  4157                           postdec2	equ	0xFDD
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           tblptru	equ	0xFF8
  4162                           tblptrh	equ	0xFF7
  4163                           tblptrl	equ	0xFF6
  4164                           tablat	equ	0xFF5
  4165                           postinc0	equ	0xFEE
  4166                           wreg	equ	0xFE8
  4167                           postinc1	equ	0xFE6
  4168                           postdec1	equ	0xFE5
  4169                           fsr1h	equ	0xFE2
  4170                           fsr1l	equ	0xFE1
  4171                           postinc2	equ	0xFDE
  4172                           postdec2	equ	0xFDD
  4173                           fsr2h	equ	0xFDA
  4174                           fsr2l	equ	0xFD9
  4175                           status	equ	0xFD8
  4176                           
  4177                           	psect	rparam
  4178  0000                     tblptru	equ	0xFF8
  4179                           tblptrh	equ	0xFF7
  4180                           tblptrl	equ	0xFF6
  4181                           tablat	equ	0xFF5
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           postinc1	equ	0xFE6
  4185                           postdec1	equ	0xFE5
  4186                           fsr1h	equ	0xFE2
  4187                           fsr1l	equ	0xFE1
  4188                           postinc2	equ	0xFDE
  4189                           postdec2	equ	0xFDD
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    48
    Data        52
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     30      90
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_scramble
    _scramble->___awmod
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    5876
                                             26 COMRAM     4     4      0
                                  _B
                                 _Bi
                                  _D
                                 _Di
                                  _F
                                 _Fi
                                  _L
                                 _Li
                                  _R
                                 _Ri
                                  _U
                                 _Ui
                              _check
                            _restore
                           _scramble
 ---------------------------------------------------------------------------------
 (1) _scramble                                             6     6      0    3145
                                             20 COMRAM     6     6      0
                                  _B
                                 _Bi
                                  _D
                                 _Di
                                  _F
                                 _Fi
                                  _L
                                 _Li
                                  _R
                                 _Ri
                                  _U
                                 _Ui
                            ___awmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _Ui                                                   2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _U                                                    2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Ri                                                   2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _R                                                    2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Li                                                   2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _L                                                    2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Fi                                                   2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _F                                                    2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Di                                                   2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _D                                                    2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Bi                                                   2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _B                                                    2     2      0     180
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _restore                                              2     2      0     210
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _check                                                6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _B
   _Bi
   _D
   _Di
   _F
   _Fi
   _L
   _Li
   _R
   _Ri
   _U
   _Ui
   _check
   _restore
   _scramble
     _B
     _Bi
     _D
     _Di
     _F
     _Fi
     _L
     _Li
     _R
     _Ri
     _U
     _Ui
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
     _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1E      5A       1       70.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      15        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Jan 07 01:12:37 2018

                           _B 1472                             _D 1262                             _F 1052  
                           _L 0C2E                             _R 0A16                             _U 0E42  
                          B@i 0035                            D@i 0035                            ?_B 0035  
                          ?_D 0035                            ?_F 0035                            F@i 0035  
                          ?_L 0035                            ?_R 0035                            ?_U 0035  
                          L@i 0035                            R@i 0035                            U@i 0035  
                          l52 0D56                            l62 1176                            l54 0E40  
                          l47 0E5E                            l64 1260                            l72 0B3E  
                          l57 127E                            l49 0F48                            l74 0C2C  
                          l82 0926                            l59 1368                            l67 0C4A  
                          l92 0F66                            l84 0A14                            l69 0D38  
                          l77 0A32                            l94 1050                            l87 106E  
                          l79 0B20                            l97 148E                            l89 1158  
                          l99 1578                            _Bi 136A                            u30 0E5C  
                          _Di 115A                            u50 0D54                            _Fi 0F4A  
                          u70 127C                            u90 1174                            _Li 0B22  
                          _Ri 090A                            _Ui 0D3A                           ??_B 0035  
                         ??_D 0035                           ??_F 0035                           ??_L 0035  
                         ??_R 0035                           ??_U 0035                           ?_Bi 0035  
                         ?_Di 0035                           ?_Fi 0035                           ?_Li 0035  
                         ?_Ri 0035                           ?_Ui 0035                           Bi@i 0035  
                         Di@i 0035                           l102 1386                           l110 16BA  
                         l111 175C                           l104 1470                           l120 16F0  
                         l112 16C0                           l121 16F6                           l113 16C6  
                         l122 16FC                           l114 16CC                           l115 16D2  
                         l107 1694                           l123 1762                           l116 16D8  
                         l109 1702                           l117 16DE                           Fi@i 0035  
                         l126 064E                           l142 07DA                           l118 16E4  
                         l119 16EA                           l151 1666                           l128 068E  
                         l144 0908                           l152 15B6                           l161 15E8  
                         l153 15C0                           l139 07A6                           l171 161A  
                         l163 15F2                           l155 15CA                           l180 1652  
                         l173 1624                           l165 15FC                           l157 15D4  
                         l149 15A4                           l175 162E                           l167 1606  
                         l159 15DE                           l169 1610                           l370 1792  
                         l179 163A                           l373 17B2                           l197 17E4  
                         l374 17BC                           l366 1778                           l198 17F8  
                         l375 17CA                           l367 1784                           l369 179A  
                         Li@i 0035                           u110 0C48                           u210 0F64  
                         u130 0B3C                           u230 148C                           u150 0A30  
                         u250 1384                           u170 0924                           u430 07D8  
                         u190 106C                           u720 064C                           u730 0684  
                         Ri@i 0035                           u670 179E                           u780 079C  
                         u790 07B4                           u950 165A                           Ui@i 0035  
                ___awmod@sign 0048                           wreg 000FE8          _native_surface_three 0619  
                        ??_Bi 0035                          ??_Di 0035                          ??_Fi 0035  
                        ??_Li 0035                          ??_Ri 0035                          ??_Ui 0035  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          l1245 1684  
                        l1343 07B4                          l1295 0684                          _TMR0 000FD6  
                        _main 157A                          _rand 182A                          _temp 0053  
                        fsr1h 000FE2                          fsr2h 000FDA                          fsr1l 000FE1  
                        fsr2l 000FD9                          start 0000                   _surface_one 0029  
                 _surface_six 0001                   _surface_two 0021                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000                scramble@random 004B                         ?_main 0035  
                       ?_rand 0041               __end_of___awmod 17D4           ___lmul@multiplicand 0039  
                       _check 0632                         _randx 0031                         _srand 18E6  
                       tablat 000FF5               __end_of_restore 090A                  _surface_five 0009  
                       status 000FD8                  _surface_four 0011               __initialization 187C  
                __end_of_main 1670                  __end_of_rand 187C                        ??_main 004F  
                      ??_rand 0043                 __activetblptr 000002                        ?_check 0035  
                      ?_srand 0035                        ___lmul 17D4                     ??___awmod 0047  
                      check@i 0039                        clear_0 18A2               ___awmod@divisor 0045  
             ___awmod@counter 0047              __end_of_scramble 1764                  __pdataCOMRAM 0001  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        srand@x 0035                     ??_restore 0035  
               _surface_three 0019                    __accesstop 0080       __end_of__initialization 18A8  
             __CFG_PBADEN$OFF 000000            _native_surface_one 0629            _native_surface_six 0601  
          _native_surface_two 0621                 ___rparam_used 000001                __pcstackCOMRAM 0035  
               __end_of_check 07BE                 __end_of_srand 18F4                    __end_of_Bi 1472  
                  __end_of_Di 1262                    __end_of_Fi 1052                    __end_of_Li 0C2E  
                  __end_of_Ri 0A16                    __end_of_Ui 0E42                       ??_check 0037  
                     ??_srand 0037                       ?___lmul 0035                ___lmul@product 003D  
                  __size_of_B 0108                    __size_of_D 0108                    __size_of_F 0108  
                  __size_of_L 010C                    __size_of_R 010C                    __size_of_U 0108  
                     __Hparam 0000                     ?_scramble 0035                       __Lparam 0000  
             __size_of___lmul 0056                       ___awmod 1764                  __psmallconst 0600  
                     __pcinit 187C                       __ramtop 0600                       __ptext0 157A  
                     __ptext1 1670                       __ptext2 18E6                       __ptext3 182A  
                     __ptext4 17D4                       __ptext5 1764                       __ptext6 0D3A  
                     __ptext7 0E42                       __ptext8 090A                       __ptext9 0A16  
            ___awmod@dividend 0043                       _restore 07BE          end_of_initialization 18A8  
               __Lmediumconst 0000                    ??_scramble 0049                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE                     _PORTBbits 000F81                     _PORTCbits 000F82  
                   _PORTDbits 000F83                     _TRISBbits 000F93                     _TRISCbits 000F94  
                   _TRISDbits 000F95           _native_surface_five 0609           _native_surface_four 0611  
                  main@solved 0051                __end_of___lmul 182A                 __pidataCOMRAM 18B2  
         start_initialization 187C              __CFG_OSC$INTIO67 000000                      ??___lmul 003D  
                 __pbssCOMRAM 0053                     __end_of_B 157A                     __end_of_D 136A  
                   __end_of_F 115A                     __end_of_L 0D3A                     __end_of_R 0B22  
                   __end_of_U 0F4A             __size_of_scramble 00F4                      ?___awmod 0043  
                 __smallconst 0600                      ?_restore 0035                __size_of_check 018C  
              __size_of_srand 000E                   __size_of_Bi 0108                   __size_of_Di 0108  
                 __size_of_Fi 0108                   __size_of_Li 010C                   __size_of_Ri 010C  
                 __size_of_Ui 0108                     main@pause 004F             ___lmul@multiplier 0035  
                   copy_data0 1890                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___awmod 0070                      __ptext10 0B22                      __ptext11 0C2E  
                    __ptext12 0F4A                      __ptext13 1052                      __ptext14 115A  
                    __ptext15 1262                      __ptext16 136A                      __ptext17 1472  
                    __ptext18 07BE                      __ptext19 0632              __size_of_restore 014C  
                   scramble@i 004D                 __size_of_main 00F6                 __size_of_rand 0052  
__end_of_native_surface_three 0621                      _scramble 1670   __end_of_native_surface_five 0611  
 __end_of_native_surface_four 0619                      restore@i 0035    __end_of_native_surface_one 0631  
  __end_of_native_surface_six 0609    __end_of_native_surface_two 0629  
