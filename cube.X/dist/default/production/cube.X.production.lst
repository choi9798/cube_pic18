

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue Jan  9 23:57:17 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 1.44
    60                           ; Generated 14/09/2017 GMT
    61                           ; 
    62                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  003A60                     __pidataCOMRAM:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _randx
    99  003A60  0001               	dw	1
   100  003A62  0000               	dw	0
   101                           
   102                           ;initializer for _temp
   103  003A64  30                 	db	48
   104  003A65  30                 	db	48
   105  003A66  30                 	db	48
   106  003A67  30                 	db	48
   107                           
   108                           ;initializer for _surface_six
   109  003A68  36                 	db	54
   110  003A69  36                 	db	54
   111  003A6A  36                 	db	54
   112  003A6B  36                 	db	54
   113                           
   114                           ;initializer for _surface_five
   115  003A6C  35                 	db	53
   116  003A6D  35                 	db	53
   117  003A6E  35                 	db	53
   118  003A6F  35                 	db	53
   119                           
   120                           ;initializer for _surface_four
   121  003A70  34                 	db	52
   122  003A71  34                 	db	52
   123  003A72  34                 	db	52
   124  003A73  34                 	db	52
   125                           
   126                           ;initializer for _surface_three
   127  003A74  33                 	db	51
   128  003A75  33                 	db	51
   129  003A76  33                 	db	51
   130  003A77  33                 	db	51
   131                           
   132                           ;initializer for _surface_two
   133  003A78  32                 	db	50
   134  003A79  32                 	db	50
   135  003A7A  32                 	db	50
   136  003A7B  32                 	db	50
   137                           
   138                           ;initializer for _surface_one
   139  003A7C  31                 	db	49
   140  003A7D  31                 	db	49
   141  003A7E  31                 	db	49
   142  003A7F  31                 	db	49
   143                           
   144                           	psect	smallconst
   145  000600                     __psmallconst:
   146                           	opt stack 0
   147  000600  00                 	db	0
   148  000601                     _native_surface_six:
   149                           	opt stack 0
   150  000601  36                 	db	54
   151  000602  36                 	db	54
   152  000603  36                 	db	54
   153  000604  36                 	db	54
   154  000605                     __end_of_native_surface_six:
   155                           	opt stack 0
   156  000605                     _native_surface_five:
   157                           	opt stack 0
   158  000605  35                 	db	53
   159  000606  35                 	db	53
   160  000607  35                 	db	53
   161  000608  35                 	db	53
   162  000609                     __end_of_native_surface_five:
   163                           	opt stack 0
   164  000609                     _native_surface_four:
   165                           	opt stack 0
   166  000609  34                 	db	52
   167  00060A  34                 	db	52
   168  00060B  34                 	db	52
   169  00060C  34                 	db	52
   170  00060D                     __end_of_native_surface_four:
   171                           	opt stack 0
   172  00060D                     _native_surface_three:
   173                           	opt stack 0
   174  00060D  33                 	db	51
   175  00060E  33                 	db	51
   176  00060F  33                 	db	51
   177  000610  33                 	db	51
   178  000611                     __end_of_native_surface_three:
   179                           	opt stack 0
   180  000611                     _native_surface_two:
   181                           	opt stack 0
   182  000611  32                 	db	50
   183  000612  32                 	db	50
   184  000613  32                 	db	50
   185  000614  32                 	db	50
   186  000615                     __end_of_native_surface_two:
   187                           	opt stack 0
   188  000615                     _native_surface_one:
   189                           	opt stack 0
   190  000615  31                 	db	49
   191  000616  31                 	db	49
   192  000617  31                 	db	49
   193  000618  31                 	db	49
   194  000619                     __end_of_native_surface_one:
   195                           	opt stack 0
   196  0000                     _TMR0	set	4054
   197  0000                     _SSPBUF	set	4041
   198  0000                     _SSPSTATbits	set	4039
   199  0000                     _SSPCON1	set	4038
   200  0000                     _SSPSTAT	set	4039
   201  0000                     _PORTBbits	set	3969
   202  0000                     _PORTCbits	set	3970
   203  0000                     _PORTDbits	set	3971
   204  0000                     _TRISDbits	set	3989
   205  0000                     _TRISBbits	set	3987
   206  0000                     _TRISCbits	set	3988
   207  0000                     _RCONbits	set	4048
   208  0000                     _INTCONbits	set	4082
   209  0000                     _TRISAbits	set	3986
   210  0000                     _TRISC3	set	31907
   211  0000                     _TRISC5	set	31909
   212  0000                     _RA5	set	31749
   213  0000                     _RA4	set	31748
   214  0000                     _RA3	set	31747
   215  0000                     _RA2	set	31746
   216  0000                     _RA1	set	31745
   217  0000                     _RA0	set	31744
   218                           
   219                           ; #config settings
   220  000619  00                 	db	0	; dummy byte at the end
   221  0000                     
   222                           	psect	cinit
   223  003A30                     __pcinit:
   224                           	opt stack 0
   225  003A30                     start_initialization:
   226                           	opt stack 0
   227  003A30                     __initialization:
   228                           	opt stack 0
   229                           
   230                           ; Initialize objects allocated to COMRAM (32 bytes)
   231                           ; load TBLPTR registers with __pidataCOMRAM
   232  003A30  0E60               	movlw	low __pidataCOMRAM
   233  003A32  6EF6               	movwf	tblptrl,c
   234  003A34  0E3A               	movlw	high __pidataCOMRAM
   235  003A36  6EF7               	movwf	tblptrh,c
   236  003A38  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   237  003A3A  6EF8               	movwf	tblptru,c
   238  003A3C  EE00  F032         	lfsr	0,__pdataCOMRAM
   239  003A40  EE10 F020          	lfsr	1,32
   240  003A44                     copy_data0:
   241  003A44  0009               	tblrd		*+
   242  003A46  CFF5 FFEE          	movff	tablat,postinc0
   243  003A4A  50E5               	movf	postdec1,w,c
   244  003A4C  50E1               	movf	fsr1l,w,c
   245  003A4E  E1FA               	bnz	copy_data0
   246                           
   247                           ; Clear objects allocated to COMRAM (1 bytes)
   248  003A50  6A52               	clrf	__pbssCOMRAM& (0+255),c
   249  003A52                     end_of_initialization:
   250                           	opt stack 0
   251  003A52                     __end_of__initialization:
   252                           	opt stack 0
   253  003A52  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254  003A54  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255  003A56  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  003A58  6EF8               	movwf	tblptru,c
   257  003A5A  0100               	movlb	0
   258  003A5C  EFDE  F012         	goto	_main	;jump to C main() function
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           postdec1	equ	0xFE5
   265                           fsr1l	equ	0xFE1
   266                           
   267                           	psect	bssCOMRAM
   268  000052                     __pbssCOMRAM:
   269                           	opt stack 0
   270  000052                     _re:
   271                           	opt stack 0
   272  000052                     	ds	1
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           postdec1	equ	0xFE5
   279                           fsr1l	equ	0xFE1
   280                           
   281                           	psect	dataCOMRAM
   282  000032                     __pdataCOMRAM:
   283                           	opt stack 0
   284  000032                     _randx:
   285                           	opt stack 0
   286  000032                     	ds	4
   287  000036                     _temp:
   288                           	opt stack 0
   289  000036                     	ds	4
   290  00003A                     _surface_six:
   291                           	opt stack 0
   292  00003A                     	ds	4
   293  00003E                     _surface_five:
   294                           	opt stack 0
   295  00003E                     	ds	4
   296  000042                     _surface_four:
   297                           	opt stack 0
   298  000042                     	ds	4
   299  000046                     _surface_three:
   300                           	opt stack 0
   301  000046                     	ds	4
   302  00004A                     _surface_two:
   303                           	opt stack 0
   304  00004A                     	ds	4
   305  00004E                     _surface_one:
   306                           	opt stack 0
   307  00004E                     	ds	4
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	cstackBANK0
   317  000080                     __pcstackBANK0:
   318                           	opt stack 0
   319  000080                     led@rotate:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x0
   323  000080                     	ds	1
   324  000081                     led@num:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x1
   328  000081                     	ds	1
   329  000082                     led@i:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x2
   333  000082                     	ds	2
   334  000084                     led@count:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x4
   338  000084                     	ds	2
   339  000086                     U@i:
   340                           	opt stack 0
   341  000086                     Ui@i:
   342                           	opt stack 0
   343  000086                     D@i:
   344                           	opt stack 0
   345  000086                     Di@i:
   346                           	opt stack 0
   347  000086                     L@i:
   348                           	opt stack 0
   349  000086                     Li@i:
   350                           	opt stack 0
   351  000086                     R@i:
   352                           	opt stack 0
   353  000086                     Ri@i:
   354                           	opt stack 0
   355  000086                     F@i:
   356                           	opt stack 0
   357  000086                     Fi@i:
   358                           	opt stack 0
   359  000086                     B@i:
   360                           	opt stack 0
   361  000086                     Bi@i:
   362                           	opt stack 0
   363  000086                     restore@i:
   364                           	opt stack 0
   365  000086                     fixed@i:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x6
   369  000086                     	ds	2
   370  000088                     main@pause:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x8
   374  000088                     	ds	2
   375  00008A                     main@solved:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0xA
   379  00008A                     	ds	2
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	cstackCOMRAM
   389  000001                     __pcstackCOMRAM:
   390                           	opt stack 0
   391  000001                     ?___lmul:
   392                           	opt stack 0
   393  000001                     i2spiWrite@dat:
   394                           	opt stack 0
   395  000001                     srand@x:
   396                           	opt stack 0
   397  000001                     ___lmul@multiplier:
   398                           	opt stack 0
   399                           
   400                           ; 4 bytes @ 0x0
   401  000001                     	ds	1
   402  000002                     ??i2_led:
   403                           
   404                           ; 1 bytes @ 0x1
   405  000002                     	ds	1
   406  000003                     
   407                           ; 1 bytes @ 0x2
   408  000003                     	ds	2
   409  000005                     ___lmul@multiplicand:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0x4
   413  000005                     	ds	1
   414  000006                     i2led@rotate:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x5
   418  000006                     	ds	1
   419  000007                     i2led@num:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x6
   423  000007                     	ds	1
   424  000008                     i2led@i:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x7
   428  000008                     	ds	1
   429  000009                     ___lmul@product:
   430                           	opt stack 0
   431                           
   432                           ; 4 bytes @ 0x8
   433  000009                     	ds	1
   434  00000A                     i2led@count:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x9
   438  00000A                     	ds	2
   439  00000C                     i2U@i:
   440                           	opt stack 0
   441  00000C                     i2Ui@i:
   442                           	opt stack 0
   443  00000C                     i2D@i:
   444                           	opt stack 0
   445  00000C                     i2Di@i:
   446                           	opt stack 0
   447  00000C                     i2L@i:
   448                           	opt stack 0
   449  00000C                     i2Li@i:
   450                           	opt stack 0
   451  00000C                     i2R@i:
   452                           	opt stack 0
   453  00000C                     i2Ri@i:
   454                           	opt stack 0
   455  00000C                     i2F@i:
   456                           	opt stack 0
   457  00000C                     i2Fi@i:
   458                           	opt stack 0
   459  00000C                     i2B@i:
   460                           	opt stack 0
   461  00000C                     i2Bi@i:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0xB
   465  00000C                     	ds	1
   466  00000D                     ?_rand:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0xC
   470  00000D                     	ds	2
   471  00000F                     ?___awmod:
   472                           	opt stack 0
   473  00000F                     ___awmod@dividend:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0xE
   477  00000F                     	ds	2
   478  000011                     ___awmod@divisor:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482  000011                     	ds	2
   483  000013                     ___awmod@counter:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x12
   487  000013                     	ds	1
   488  000014                     ___awmod@sign:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x13
   492  000014                     	ds	1
   493  000015                     ??_scramble:
   494                           
   495                           ; 1 bytes @ 0x14
   496  000015                     	ds	20
   497  000029                     scramble@random:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x28
   501  000029                     	ds	2
   502  00002B                     scramble@i:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x2A
   506  00002B                     	ds	2
   507  00002D                     ?_check:
   508                           	opt stack 0
   509  00002D                     spiInit@sDataSample:
   510                           	opt stack 0
   511  00002D                     spiWrite@dat:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x2C
   515  00002D                     	ds	1
   516  00002E                     ??_led:
   517  00002E                     spiInit@sClockIdle:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x2D
   521  00002E                     	ds	1
   522  00002F                     ??_check:
   523  00002F                     spiInit@sTransmitEdge:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x2E
   527  00002F                     	ds	1
   528  000030                     spiInit@sType:
   529                           	opt stack 0
   530  000030                     check@i:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x2F
   534  000030                     	ds	2
   535  000032                     tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           postinc0	equ	0xFEE
   540                           postdec1	equ	0xFE5
   541                           fsr1l	equ	0xFE1
   542                           
   543                           ; 1 bytes @ 0x31
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 737 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  solved          2   10[BANK0 ] int 
   554 ;;  pause           2    8[BANK0 ] int 
   555 ;;  j               2    0        int 
   556 ;;  i               2    0        int 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   566 ;;      Params:         0       0       0       0       0       0       0
   567 ;;      Locals:         0       4       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0
   569 ;;      Totals:         0       4       0       0       0       0       0
   570 ;;Total ram usage:        4 bytes
   571 ;; Hardware stack levels required when called:    9
   572 ;; This function calls:
   573 ;;		_B
   574 ;;		_Bi
   575 ;;		_D
   576 ;;		_Di
   577 ;;		_F
   578 ;;		_Fi
   579 ;;		_L
   580 ;;		_Li
   581 ;;		_R
   582 ;;		_Ri
   583 ;;		_U
   584 ;;		_Ui
   585 ;;		_check
   586 ;;		_fixed
   587 ;;		_led
   588 ;;		_restore
   589 ;;		_spiInit
   590 ;; This function is called by:
   591 ;;		Startup code after reset
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text0
   596  0025BC                     __ptext0:
   597                           	opt stack 0
   598  0025BC                     _main:
   599                           	opt stack 22
   600                           
   601                           ;main.c: 739: TRISCbits.RC7 = 1;
   602                           
   603                           ;incstack = 0
   604  0025BC  8E94               	bsf	3988,7,c	;volatile
   605                           
   606                           ;main.c: 740: TRISCbits.RC6 = 1;
   607  0025BE  8C94               	bsf	3988,6,c	;volatile
   608                           
   609                           ;main.c: 741: TRISBbits.RB5 = 1;
   610  0025C0  8A93               	bsf	3987,5,c	;volatile
   611                           
   612                           ;main.c: 742: TRISBbits.RB4 = 1;
   613  0025C2  8893               	bsf	3987,4,c	;volatile
   614                           
   615                           ;main.c: 743: TRISBbits.RB3 = 1;
   616  0025C4  8693               	bsf	3987,3,c	;volatile
   617                           
   618                           ;main.c: 744: TRISBbits.RB2 = 1;
   619  0025C6  8493               	bsf	3987,2,c	;volatile
   620                           
   621                           ;main.c: 745: TRISBbits.RB1 = 1;
   622  0025C8  8293               	bsf	3987,1,c	;volatile
   623                           
   624                           ;main.c: 746: TRISBbits.RB0 = 1;
   625  0025CA  8093               	bsf	3987,0,c	;volatile
   626                           
   627                           ;main.c: 747: TRISDbits.RD7 = 1;
   628  0025CC  8E95               	bsf	3989,7,c	;volatile
   629                           
   630                           ;main.c: 748: TRISDbits.RD6 = 1;
   631  0025CE  8C95               	bsf	3989,6,c	;volatile
   632                           
   633                           ;main.c: 749: TRISDbits.RD5 = 1;
   634  0025D0  8A95               	bsf	3989,5,c	;volatile
   635                           
   636                           ;main.c: 750: TRISDbits.RD4 = 1;
   637  0025D2  8895               	bsf	3989,4,c	;volatile
   638                           
   639                           ;main.c: 751: TRISDbits.RD3 = 1;
   640  0025D4  8695               	bsf	3989,3,c	;volatile
   641                           
   642                           ;main.c: 752: TRISDbits.RD2 = 1;
   643  0025D6  8495               	bsf	3989,2,c	;volatile
   644                           
   645                           ;main.c: 754: int i, j;
   646                           ;main.c: 755: int solved = 1;
   647  0025D8  0E00               	movlw	0
   648  0025DA  0100               	movlb	0	; () banked
   649  0025DC  6F8B               	movwf	(main@solved+1)& (0+255),b
   650  0025DE  0E01               	movlw	1
   651  0025E0  6F8A               	movwf	main@solved& (0+255),b
   652                           
   653                           ;main.c: 756: int pause = 0;
   654  0025E2  0E00               	movlw	0
   655  0025E4  6F89               	movwf	(main@pause+1)& (0+255),b
   656  0025E6  0E00               	movlw	0
   657  0025E8  6F88               	movwf	main@pause& (0+255),b
   658                           
   659                           ; BSR set to: 0
   660                           ;main.c: 758: spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, S
      +                          PI_IDLE_2_ACTIVE);
   661  0025EA  0E00               	movlw	0
   662  0025EC  6E2D               	movwf	spiInit@sDataSample,c
   663  0025EE  0E00               	movlw	0
   664  0025F0  6E2E               	movwf	spiInit@sClockIdle,c
   665  0025F2  0E00               	movlw	0
   666  0025F4  6E2F               	movwf	spiInit@sTransmitEdge,c
   667  0025F6  0E20               	movlw	32
   668  0025F8  EC40  F01D         	call	_spiInit
   669                           
   670                           ;main.c: 760: led('A');
   671  0025FC  0E41               	movlw	65
   672  0025FE  EC0D  F003         	call	_led
   673  002602                     
   674                           ;main.c: 763: if(PORTDbits.RD3 == 0 && solved == 1) {
   675  002602  B683               	btfsc	3971,3,c	;volatile
   676  002604  D00C               	goto	l351
   677  002606  0100               	movlb	0	; () banked
   678  002608  058A               	decf	main@solved& (0+255),w,b
   679  00260A  118B               	iorwf	(main@solved+1)& (0+255),w,b
   680  00260C  A4D8               	btfss	status,2,c
   681  00260E  D007               	goto	l351
   682                           
   683                           ; BSR set to: 0
   684                           ;main.c: 764: RCONbits.IPEN = 1;
   685  002610  8ED0               	bsf	4048,7,c	;volatile
   686                           
   687                           ;main.c: 765: INTCONbits.GIEH = 1;
   688  002612  8EF2               	bsf	intcon,7,c	;volatile
   689                           
   690                           ; BSR set to: 0
   691                           ;main.c: 766: solved = 0;
   692  002614  0E00               	movlw	0
   693  002616  6F8B               	movwf	(main@solved+1)& (0+255),b
   694  002618  0E00               	movlw	0
   695  00261A  6F8A               	movwf	main@solved& (0+255),b
   696                           
   697                           ;main.c: 768: }
   698  00261C  D050               	goto	l354
   699  00261E                     l351:
   700                           
   701                           ;main.c: 769: else if(PORTDbits.RD2 == 0) {
   702  00261E  B483               	btfsc	3971,2,c	;volatile
   703  002620  D04E               	goto	l354
   704                           
   705                           ;main.c: 770: fixed();
   706  002622  EC48  F01C         	call	_fixed	;wreg free
   707                           
   708                           ;main.c: 771: }
   709                           ;main.c: 772: while(solved == 0) {
   710  002626  D04B               	goto	l354
   711  002628                     l355:
   712                           
   713                           ; BSR set to: 0
   714                           ;main.c: 773: if(PORTCbits.RC7 == 0) {
   715  002628  BE82               	btfsc	3970,7,c	;volatile
   716  00262A  D003               	goto	l356
   717                           
   718                           ; BSR set to: 0
   719                           ;main.c: 774: U();
   720  00262C  EC0A  F017         	call	_U	;wreg free
   721                           
   722                           ;main.c: 775: }
   723  002630  D040               	goto	l380
   724  002632                     l356:
   725                           
   726                           ; BSR set to: 0
   727                           ;main.c: 776: else if(PORTCbits.RC6 == 0) {
   728  002632  BC82               	btfsc	3970,6,c	;volatile
   729  002634  D003               	goto	l358
   730                           
   731                           ; BSR set to: 0
   732                           ;main.c: 777: Ui();
   733  002636  ECB0  F016         	call	_Ui	;wreg free
   734                           
   735                           ;main.c: 778: }
   736  00263A  D03B               	goto	l380
   737  00263C                     l358:
   738                           
   739                           ; BSR set to: 0
   740                           ;main.c: 779: else if(PORTBbits.RB5 == 0) {
   741  00263C  BA81               	btfsc	3969,5,c	;volatile
   742  00263E  D003               	goto	l360
   743                           
   744                           ; BSR set to: 0
   745                           ;main.c: 780: D();
   746  002640  EC72  F018         	call	_D	;wreg free
   747                           
   748                           ;main.c: 781: }
   749  002644  D036               	goto	l380
   750  002646                     l360:
   751                           
   752                           ; BSR set to: 0
   753                           ;main.c: 782: else if(PORTBbits.RB4 == 0) {
   754  002646  B881               	btfsc	3969,4,c	;volatile
   755  002648  D003               	goto	l362
   756                           
   757                           ; BSR set to: 0
   758                           ;main.c: 783: Di();
   759  00264A  EC18  F018         	call	_Di	;wreg free
   760                           
   761                           ;main.c: 784: }
   762  00264E  D031               	goto	l380
   763  002650                     l362:
   764                           
   765                           ; BSR set to: 0
   766                           ;main.c: 785: else if(PORTBbits.RB3 == 0) {
   767  002650  B681               	btfsc	3969,3,c	;volatile
   768  002652  D003               	goto	l364
   769                           
   770                           ; BSR set to: 0
   771                           ;main.c: 786: L();
   772  002654  ECE8  F014         	call	_L	;wreg free
   773                           
   774                           ;main.c: 787: }
   775  002658  D02C               	goto	l380
   776  00265A                     l364:
   777                           
   778                           ; BSR set to: 0
   779                           ;main.c: 788: else if(PORTBbits.RB2 == 0) {
   780  00265A  B481               	btfsc	3969,2,c	;volatile
   781  00265C  D003               	goto	l366
   782                           
   783                           ; BSR set to: 0
   784                           ;main.c: 789: Li();
   785  00265E  EC8C  F014         	call	_Li	;wreg free
   786                           
   787                           ;main.c: 790: }
   788  002662  D027               	goto	l380
   789  002664                     l366:
   790                           
   791                           ; BSR set to: 0
   792                           ;main.c: 791: else if(PORTBbits.RB1 == 0) {
   793  002664  B281               	btfsc	3969,1,c	;volatile
   794  002666  D003               	goto	l368
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 792: R();
   798  002668  EC30  F014         	call	_R	;wreg free
   799                           
   800                           ;main.c: 793: }
   801  00266C  D022               	goto	l380
   802  00266E                     l368:
   803                           
   804                           ; BSR set to: 0
   805                           ;main.c: 794: else if(PORTBbits.RB0 == 0) {
   806  00266E  B081               	btfsc	3969,0,c	;volatile
   807  002670  D003               	goto	l370
   808                           
   809                           ; BSR set to: 0
   810                           ;main.c: 795: Ri();
   811  002672  ECD4  F013         	call	_Ri	;wreg free
   812                           
   813                           ;main.c: 796: }
   814  002676  D01D               	goto	l380
   815  002678                     l370:
   816                           
   817                           ; BSR set to: 0
   818                           ;main.c: 797: else if(PORTDbits.RD7 == 0) {
   819  002678  BE83               	btfsc	3971,7,c	;volatile
   820  00267A  D003               	goto	l372
   821                           
   822                           ; BSR set to: 0
   823                           ;main.c: 798: F();
   824  00267C  ECBE  F017         	call	_F	;wreg free
   825                           
   826                           ;main.c: 799: }
   827  002680  D018               	goto	l380
   828  002682                     l372:
   829                           
   830                           ; BSR set to: 0
   831                           ;main.c: 800: else if(PORTDbits.RD6 == 0) {
   832  002682  BC83               	btfsc	3971,6,c	;volatile
   833  002684  D003               	goto	l374
   834                           
   835                           ; BSR set to: 0
   836                           ;main.c: 801: Fi();
   837  002686  EC64  F017         	call	_Fi	;wreg free
   838                           
   839                           ;main.c: 802: }
   840  00268A  D013               	goto	l380
   841  00268C                     l374:
   842                           
   843                           ; BSR set to: 0
   844                           ;main.c: 803: else if(PORTDbits.RD5 == 0) {
   845  00268C  BA83               	btfsc	3971,5,c	;volatile
   846  00268E  D003               	goto	l376
   847                           
   848                           ; BSR set to: 0
   849                           ;main.c: 804: B();
   850  002690  EC26  F019         	call	_B	;wreg free
   851                           
   852                           ;main.c: 805: }
   853  002694  D00E               	goto	l380
   854  002696                     l376:
   855                           
   856                           ; BSR set to: 0
   857                           ;main.c: 806: else if(PORTDbits.RD4 == 0) {
   858  002696  B883               	btfsc	3971,4,c	;volatile
   859  002698  D003               	goto	l378
   860                           
   861                           ; BSR set to: 0
   862                           ;main.c: 807: Bi();
   863  00269A  ECCC  F018         	call	_Bi	;wreg free
   864                           
   865                           ;main.c: 808: }
   866  00269E  D009               	goto	l380
   867  0026A0                     l378:
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 809: else if(PORTDbits.RD3 == 0) {
   871  0026A0  B683               	btfsc	3971,3,c	;volatile
   872  0026A2  D007               	goto	l380
   873                           
   874                           ; BSR set to: 0
   875                           ;main.c: 813: restore();
   876  0026A4  EC65  F013         	call	_restore	;wreg free
   877                           
   878                           ;main.c: 814: solved = 1;
   879  0026A8  0E00               	movlw	0
   880  0026AA  0100               	movlb	0	; () banked
   881  0026AC  6F8B               	movwf	(main@solved+1)& (0+255),b
   882  0026AE  0E01               	movlw	1
   883  0026B0  6F8A               	movwf	main@solved& (0+255),b
   884  0026B2                     l380:
   885                           
   886                           ;main.c: 818: }
   887                           ;main.c: 819: solved = check();
   888                           
   889                           ; BSR set to: 0
   890                           
   891                           ; BSR set to: 0
   892                           
   893                           ; BSR set to: 0
   894                           
   895                           ; BSR set to: 0
   896                           
   897                           ; BSR set to: 0
   898                           
   899                           ; BSR set to: 0
   900                           
   901                           ; BSR set to: 0
   902                           
   903                           ; BSR set to: 0
   904                           
   905                           ; BSR set to: 0
   906                           
   907                           ; BSR set to: 0
   908                           
   909                           ; BSR set to: 0
   910                           
   911                           ; BSR set to: 0
   912                           
   913                           ; BSR set to: 0
   914  0026B2  EC48  F012         	call	_check	;wreg free
   915  0026B6  C02D  F08A         	movff	?_check,main@solved
   916  0026BA  C02E  F08B         	movff	?_check+1,main@solved+1
   917  0026BE                     l354:
   918  0026BE  0100               	movlb	0	; () banked
   919  0026C0  518A               	movf	main@solved& (0+255),w,b
   920  0026C2  118B               	iorwf	(main@solved+1)& (0+255),w,b
   921  0026C4  A4D8               	btfss	status,2,c
   922  0026C6  D79D               	goto	l350
   923  0026C8  D7AF               	goto	l355
   924  0026CA                     __end_of_main:
   925                           	opt stack 0
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           tblptrl	equ	0xFF6
   929                           tablat	equ	0xFF5
   930                           intcon	equ	0xFF2
   931                           postinc0	equ	0xFEE
   932                           postdec1	equ	0xFE5
   933                           fsr1l	equ	0xFE1
   934                           status	equ	0xFD8
   935                           
   936 ;; *************** function _spiInit *****************
   937 ;; Defined at:
   938 ;;		line 12 in file "spi.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  sType           1    wreg     enum E3002
   941 ;;  sDataSample     1   44[COMRAM] enum E3010
   942 ;;  sClockIdle      1   45[COMRAM] enum E3014
   943 ;;  sTransmitEdg    1   46[COMRAM] enum E3018
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  sType           1   47[COMRAM] enum E3002
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   955 ;;      Params:         3       0       0       0       0       0       0
   956 ;;      Locals:         1       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0
   958 ;;      Totals:         4       0       0       0       0       0       0
   959 ;;Total ram usage:        4 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    5
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text1
   970  003A80                     __ptext1:
   971                           	opt stack 0
   972  003A80                     _spiInit:
   973                           	opt stack 25
   974                           
   975                           ; BSR set to: 0
   976                           ;incstack = 0
   977                           ;spiInit@sType stored from wreg
   978  003A80  6E30               	movwf	spiInit@sType,c
   979                           
   980                           ;spi.c: 14: TRISC5 = 0;
   981  003A82  9A94               	bcf	3988,5,c	;volatile
   982                           
   983                           ;spi.c: 15: if(sType & 0b00000100)
   984  003A84  A430               	btfss	spiInit@sType,2,c
   985  003A86  D004               	goto	l399
   986                           
   987                           ;spi.c: 16: {
   988                           ;spi.c: 17: SSPSTAT = sTransmitEdge;
   989  003A88  C02F  FFC7         	movff	spiInit@sTransmitEdge,4039	;volatile
   990                           
   991                           ;spi.c: 18: TRISC3 = 1;
   992  003A8C  8694               	bsf	3988,3,c	;volatile
   993                           
   994                           ;spi.c: 19: }
   995  003A8E  D004               	goto	l400
   996  003A90                     l399:
   997                           
   998                           ;spi.c: 20: else
   999                           ;spi.c: 21: {
  1000                           ;spi.c: 22: SSPSTAT = sDataSample | sTransmitEdge;
  1001  003A90  502D               	movf	spiInit@sDataSample,w,c
  1002  003A92  102F               	iorwf	spiInit@sTransmitEdge,w,c
  1003  003A94  6EC7               	movwf	4039,c	;volatile
  1004                           
  1005                           ;spi.c: 23: TRISC3 = 0;
  1006  003A96  9694               	bcf	3988,3,c	;volatile
  1007  003A98                     l400:
  1008                           
  1009                           ;spi.c: 24: }
  1010                           ;spi.c: 26: SSPCON1 = sType | sClockIdle;
  1011  003A98  5030               	movf	spiInit@sType,w,c
  1012  003A9A  102E               	iorwf	spiInit@sClockIdle,w,c
  1013  003A9C  6EC6               	movwf	4038,c	;volatile
  1014  003A9E  0012               	return		;funcret
  1015  003AA0                     __end_of_spiInit:
  1016                           	opt stack 0
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           intcon	equ	0xFF2
  1022                           postinc0	equ	0xFEE
  1023                           postdec1	equ	0xFE5
  1024                           fsr1l	equ	0xFE1
  1025                           status	equ	0xFD8
  1026                           
  1027 ;; *************** function _restore *****************
  1028 ;; Defined at:
  1029 ;;		line 685 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  i               2    6[BANK0 ] int 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1043 ;;      Params:         0       0       0       0       0       0       0
  1044 ;;      Locals:         0       2       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0
  1046 ;;      Totals:         0       2       0       0       0       0       0
  1047 ;;Total ram usage:        2 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    8
  1050 ;; This function calls:
  1051 ;;		_led
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text2
  1058  0026CA                     __ptext2:
  1059                           	opt stack 0
  1060  0026CA                     _restore:
  1061                           	opt stack 22
  1062                           
  1063                           ;main.c: 686: int i;
  1064                           ;main.c: 687: for(i=0;i<4;i++) {
  1065                           
  1066                           ;incstack = 0
  1067  0026CA  0E00               	movlw	0
  1068  0026CC  0100               	movlb	0	; () banked
  1069  0026CE  6F87               	movwf	(restore@i+1)& (0+255),b
  1070  0026D0  0E00               	movlw	0
  1071  0026D2  6F86               	movwf	restore@i& (0+255),b
  1072  0026D4                     l5240:
  1073                           
  1074                           ; BSR set to: 0
  1075  0026D4  BF87               	btfsc	(restore@i+1)& (0+255),7,b
  1076  0026D6  D006               	goto	l322
  1077  0026D8  5187               	movf	(restore@i+1)& (0+255),w,b
  1078  0026DA  E165               	bnz	l324
  1079  0026DC  0E04               	movlw	4
  1080  0026DE  5D86               	subwf	restore@i& (0+255),w,b
  1081  0026E0  B0D8               	btfsc	status,0,c
  1082  0026E2  0012               	return	
  1083  0026E4                     l322:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 688: surface_one[i] = native_surface_one[i];
  1087                           
  1088                           ; BSR set to: 0
  1089  0026E4  0E15               	movlw	low _native_surface_one
  1090  0026E6  2586               	addwf	restore@i& (0+255),w,b
  1091  0026E8  6EF6               	movwf	tblptrl,c
  1092  0026EA  0E06               	movlw	high _native_surface_one
  1093  0026EC  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1094  0026EE  6EF7               	movwf	tblptrh,c
  1095  0026F0                     	if	0	;There are less than 3 active tblptr bytes
  1096  0026F0                     	endif
  1097  0026F0  0E4E               	movlw	low _surface_one
  1098  0026F2  2586               	addwf	restore@i& (0+255),w,b
  1099  0026F4  6ED9               	movwf	fsr2l,c
  1100  0026F6  0E00               	movlw	high _surface_one
  1101  0026F8  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1102  0026FA  6EDA               	movwf	fsr2h,c
  1103  0026FC  0008               	tblrd		*
  1104  0026FE  CFF5 FFDF          	movff	tablat,indf2
  1105                           
  1106                           ;main.c: 689: surface_two[i] = native_surface_two[i];
  1107  002702  0E11               	movlw	low _native_surface_two
  1108  002704  2586               	addwf	restore@i& (0+255),w,b
  1109  002706  6EF6               	movwf	tblptrl,c
  1110  002708  0E06               	movlw	high _native_surface_two
  1111  00270A  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1112  00270C  6EF7               	movwf	tblptrh,c
  1113  00270E                     	if	0	;There are less than 3 active tblptr bytes
  1114  00270E                     	endif
  1115  00270E  0E4A               	movlw	low _surface_two
  1116  002710  2586               	addwf	restore@i& (0+255),w,b
  1117  002712  6ED9               	movwf	fsr2l,c
  1118  002714  0E00               	movlw	high _surface_two
  1119  002716  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1120  002718  6EDA               	movwf	fsr2h,c
  1121  00271A  0008               	tblrd		*
  1122  00271C  CFF5 FFDF          	movff	tablat,indf2
  1123                           
  1124                           ;main.c: 690: surface_three[i] = native_surface_three[i];
  1125  002720  0E0D               	movlw	low _native_surface_three
  1126  002722  2586               	addwf	restore@i& (0+255),w,b
  1127  002724  6EF6               	movwf	tblptrl,c
  1128  002726  0E06               	movlw	high _native_surface_three
  1129  002728  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1130  00272A  6EF7               	movwf	tblptrh,c
  1131  00272C                     	if	0	;There are less than 3 active tblptr bytes
  1132  00272C                     	endif
  1133  00272C  0E46               	movlw	low _surface_three
  1134  00272E  2586               	addwf	restore@i& (0+255),w,b
  1135  002730  6ED9               	movwf	fsr2l,c
  1136  002732  0E00               	movlw	high _surface_three
  1137  002734  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1138  002736  6EDA               	movwf	fsr2h,c
  1139  002738  0008               	tblrd		*
  1140  00273A  CFF5 FFDF          	movff	tablat,indf2
  1141                           
  1142                           ;main.c: 691: surface_four[i] = native_surface_four[i];
  1143  00273E  0E09               	movlw	low _native_surface_four
  1144  002740  2586               	addwf	restore@i& (0+255),w,b
  1145  002742  6EF6               	movwf	tblptrl,c
  1146  002744  0E06               	movlw	high _native_surface_four
  1147  002746  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1148  002748  6EF7               	movwf	tblptrh,c
  1149  00274A                     	if	0	;There are less than 3 active tblptr bytes
  1150  00274A                     	endif
  1151  00274A  0E42               	movlw	low _surface_four
  1152  00274C  2586               	addwf	restore@i& (0+255),w,b
  1153  00274E  6ED9               	movwf	fsr2l,c
  1154  002750  0E00               	movlw	high _surface_four
  1155  002752  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1156  002754  6EDA               	movwf	fsr2h,c
  1157  002756  0008               	tblrd		*
  1158  002758  CFF5 FFDF          	movff	tablat,indf2
  1159                           
  1160                           ;main.c: 692: surface_five[i] = native_surface_five[i];
  1161  00275C  0E05               	movlw	low _native_surface_five
  1162  00275E  2586               	addwf	restore@i& (0+255),w,b
  1163  002760  6EF6               	movwf	tblptrl,c
  1164  002762  0E06               	movlw	high _native_surface_five
  1165  002764  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1166  002766  6EF7               	movwf	tblptrh,c
  1167  002768                     	if	0	;There are less than 3 active tblptr bytes
  1168  002768                     	endif
  1169  002768  0E3E               	movlw	low _surface_five
  1170  00276A  2586               	addwf	restore@i& (0+255),w,b
  1171  00276C  6ED9               	movwf	fsr2l,c
  1172  00276E  0E00               	movlw	high _surface_five
  1173  002770  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1174  002772  6EDA               	movwf	fsr2h,c
  1175  002774  0008               	tblrd		*
  1176  002776  CFF5 FFDF          	movff	tablat,indf2
  1177                           
  1178                           ;main.c: 693: surface_six[i] = native_surface_six[i];
  1179  00277A  0E01               	movlw	low _native_surface_six
  1180  00277C  2586               	addwf	restore@i& (0+255),w,b
  1181  00277E  6EF6               	movwf	tblptrl,c
  1182  002780  0E06               	movlw	high _native_surface_six
  1183  002782  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1184  002784  6EF7               	movwf	tblptrh,c
  1185  002786                     	if	0	;There are less than 3 active tblptr bytes
  1186  002786                     	endif
  1187  002786  0E3A               	movlw	low _surface_six
  1188  002788  2586               	addwf	restore@i& (0+255),w,b
  1189  00278A  6ED9               	movwf	fsr2l,c
  1190  00278C  0E00               	movlw	high _surface_six
  1191  00278E  2187               	addwfc	(restore@i+1)& (0+255),w,b
  1192  002790  6EDA               	movwf	fsr2h,c
  1193  002792  0008               	tblrd		*
  1194  002794  CFF5 FFDF          	movff	tablat,indf2
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 694: led('A');
  1198  002798  0E41               	movlw	65
  1199  00279A  EC0D  F003         	call	_led
  1200  00279E  0100               	movlb	0	; () banked
  1201  0027A0  4B86               	infsnz	restore@i& (0+255),f,b
  1202  0027A2  2B87               	incf	(restore@i+1)& (0+255),f,b
  1203  0027A4  D797               	goto	l5240
  1204  0027A6                     l324:
  1205                           
  1206                           ; BSR set to: 0
  1207  0027A6  0012               	return		;funcret
  1208  0027A8                     __end_of_restore:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           intcon	equ	0xFF2
  1215                           postinc0	equ	0xFEE
  1216                           postdec1	equ	0xFE5
  1217                           fsr1l	equ	0xFE1
  1218                           indf2	equ	0xFDF
  1219                           fsr2h	equ	0xFDA
  1220                           fsr2l	equ	0xFD9
  1221                           status	equ	0xFD8
  1222                           
  1223 ;; *************** function _fixed *****************
  1224 ;; Defined at:
  1225 ;;		line 698 in file "main.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  i               2    6[BANK0 ] int 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1239 ;;      Params:         0       0       0       0       0       0       0
  1240 ;;      Locals:         0       2       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0
  1242 ;;      Totals:         0       2       0       0       0       0       0
  1243 ;;Total ram usage:        2 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    8
  1246 ;; This function calls:
  1247 ;;		_led
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text3
  1254  003890                     __ptext3:
  1255                           	opt stack 0
  1256  003890                     _fixed:
  1257                           	opt stack 22
  1258                           
  1259                           ;main.c: 699: int i;
  1260                           ;main.c: 700: for(i=0;i<4;i++) {
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;incstack = 0
  1264  003890  0E00               	movlw	0
  1265  003892  0100               	movlb	0	; () banked
  1266  003894  6F87               	movwf	(fixed@i+1)& (0+255),b
  1267  003896  0E00               	movlw	0
  1268  003898  6F86               	movwf	fixed@i& (0+255),b
  1269  00389A                     l5254:
  1270                           
  1271                           ; BSR set to: 0
  1272  00389A  BF87               	btfsc	(fixed@i+1)& (0+255),7,b
  1273  00389C  D006               	goto	l327
  1274  00389E  5187               	movf	(fixed@i+1)& (0+255),w,b
  1275  0038A0  E137               	bnz	l5264
  1276  0038A2  0E04               	movlw	4
  1277  0038A4  5D86               	subwf	fixed@i& (0+255),w,b
  1278  0038A6  B0D8               	btfsc	status,0,c
  1279  0038A8  D033               	goto	u6320
  1280  0038AA                     l327:
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;main.c: 701: surface_one[i] = '1';
  1284                           
  1285                           ; BSR set to: 0
  1286  0038AA  0E4E               	movlw	low _surface_one
  1287  0038AC  2586               	addwf	fixed@i& (0+255),w,b
  1288  0038AE  6ED9               	movwf	fsr2l,c
  1289  0038B0  0E00               	movlw	high _surface_one
  1290  0038B2  2187               	addwfc	(fixed@i+1)& (0+255),w,b
  1291  0038B4  6EDA               	movwf	fsr2h,c
  1292  0038B6  0E31               	movlw	49
  1293  0038B8  6EDF               	movwf	indf2,c
  1294                           
  1295                           ;main.c: 702: surface_two[i] = '1';
  1296  0038BA  0E4A               	movlw	low _surface_two
  1297  0038BC  2586               	addwf	fixed@i& (0+255),w,b
  1298  0038BE  6ED9               	movwf	fsr2l,c
  1299  0038C0  0E00               	movlw	high _surface_two
  1300  0038C2  2187               	addwfc	(fixed@i+1)& (0+255),w,b
  1301  0038C4  6EDA               	movwf	fsr2h,c
  1302  0038C6  0E31               	movlw	49
  1303  0038C8  6EDF               	movwf	indf2,c
  1304                           
  1305                           ;main.c: 703: surface_three[i] = '1';
  1306  0038CA  0E46               	movlw	low _surface_three
  1307  0038CC  2586               	addwf	fixed@i& (0+255),w,b
  1308  0038CE  6ED9               	movwf	fsr2l,c
  1309  0038D0  0E00               	movlw	high _surface_three
  1310  0038D2  2187               	addwfc	(fixed@i+1)& (0+255),w,b
  1311  0038D4  6EDA               	movwf	fsr2h,c
  1312  0038D6  0E31               	movlw	49
  1313  0038D8  6EDF               	movwf	indf2,c
  1314                           
  1315                           ;main.c: 704: surface_four[i] = '1';
  1316  0038DA  0E42               	movlw	low _surface_four
  1317  0038DC  2586               	addwf	fixed@i& (0+255),w,b
  1318  0038DE  6ED9               	movwf	fsr2l,c
  1319  0038E0  0E00               	movlw	high _surface_four
  1320  0038E2  2187               	addwfc	(fixed@i+1)& (0+255),w,b
  1321  0038E4  6EDA               	movwf	fsr2h,c
  1322  0038E6  0E31               	movlw	49
  1323  0038E8  6EDF               	movwf	indf2,c
  1324                           
  1325                           ;main.c: 705: surface_five[i] = '1';
  1326  0038EA  0E3E               	movlw	low _surface_five
  1327  0038EC  2586               	addwf	fixed@i& (0+255),w,b
  1328  0038EE  6ED9               	movwf	fsr2l,c
  1329  0038F0  0E00               	movlw	high _surface_five
  1330  0038F2  2187               	addwfc	(fixed@i+1)& (0+255),w,b
  1331  0038F4  6EDA               	movwf	fsr2h,c
  1332  0038F6  0E31               	movlw	49
  1333  0038F8  6EDF               	movwf	indf2,c
  1334                           
  1335                           ;main.c: 706: surface_six[i] = '1';
  1336  0038FA  0E3A               	movlw	low _surface_six
  1337  0038FC  2586               	addwf	fixed@i& (0+255),w,b
  1338  0038FE  6ED9               	movwf	fsr2l,c
  1339  003900  0E00               	movlw	high _surface_six
  1340  003902  2187               	addwfc	(fixed@i+1)& (0+255),w,b
  1341  003904  6EDA               	movwf	fsr2h,c
  1342  003906  0E31               	movlw	49
  1343  003908  6EDF               	movwf	indf2,c
  1344                           
  1345                           ; BSR set to: 0
  1346  00390A  4B86               	infsnz	fixed@i& (0+255),f,b
  1347  00390C  2B87               	incf	(fixed@i+1)& (0+255),f,b
  1348  00390E  D7C5               	goto	l5254
  1349  003910                     u6320:
  1350  003910                     l5264:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;main.c: 707: }
  1354                           ;main.c: 708: led('A');
  1355  003910  0E41               	movlw	65
  1356  003912  EC0D  F003         	call	_led
  1357  003916  0012               	return		;funcret
  1358  003918                     __end_of_fixed:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           intcon	equ	0xFF2
  1365                           postinc0	equ	0xFEE
  1366                           postdec1	equ	0xFE5
  1367                           fsr1l	equ	0xFE1
  1368                           indf2	equ	0xFDF
  1369                           fsr2h	equ	0xFDA
  1370                           fsr2l	equ	0xFD9
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _check *****************
  1374 ;; Defined at:
  1375 ;;		line 711 in file "main.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  i               2   47[COMRAM] int 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  2   44[COMRAM] int 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1389 ;;      Params:         2       0       0       0       0       0       0
  1390 ;;      Locals:         2       0       0       0       0       0       0
  1391 ;;      Temps:          1       0       0       0       0       0       0
  1392 ;;      Totals:         5       0       0       0       0       0       0
  1393 ;;Total ram usage:        5 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    5
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text4
  1404  002490                     __ptext4:
  1405                           	opt stack 0
  1406  002490                     _check:
  1407                           	opt stack 25
  1408                           
  1409                           ;main.c: 712: int i;
  1410                           ;main.c: 713: for(i=0;i<4;i++) {
  1411                           
  1412                           ;incstack = 0
  1413  002490  0E00               	movlw	0
  1414  002492  6E31               	movwf	check@i+1,c
  1415  002494  0E00               	movlw	0
  1416  002496  6E30               	movwf	check@i,c
  1417  002498  BE31               	btfsc	check@i+1,7,c
  1418  00249A  D008               	goto	l332
  1419  00249C  5031               	movf	check@i+1,w,c
  1420  00249E  E105               	bnz	u6330
  1421  0024A0  0E04               	movlw	4
  1422  0024A2  5C30               	subwf	check@i,w,c
  1423  0024A4  B0D8               	btfsc	status,0,c
  1424  0024A6  D085               	goto	u6400
  1425  0024A8  D001               	goto	l332
  1426  0024AA                     u6330:
  1427  0024AA  D083               	goto	u6400
  1428  0024AC                     l332:
  1429                           
  1430                           ;main.c: 714: if(surface_one[i] != native_surface_one[i]) {
  1431  0024AC  0E4E               	movlw	low _surface_one
  1432  0024AE  2430               	addwf	check@i,w,c
  1433  0024B0  6ED9               	movwf	fsr2l,c
  1434  0024B2  0E00               	movlw	high _surface_one
  1435  0024B4  2031               	addwfc	check@i+1,w,c
  1436  0024B6  6EDA               	movwf	fsr2h,c
  1437  0024B8  50DF               	movf	indf2,w,c
  1438  0024BA  6E2F               	movwf	??_check& (0+255),c
  1439  0024BC  0E15               	movlw	low _native_surface_one
  1440  0024BE  2430               	addwf	check@i,w,c
  1441  0024C0  6EF6               	movwf	tblptrl,c
  1442  0024C2  0E06               	movlw	high _native_surface_one
  1443  0024C4  2031               	addwfc	check@i+1,w,c
  1444  0024C6  6EF7               	movwf	tblptrh,c
  1445  0024C8                     	if	0	;There are less than 3 active tblptr bytes
  1446  0024C8                     	endif
  1447  0024C8  0008               	tblrd		*
  1448  0024CA  50F5               	movf	tablat,w,c
  1449  0024CC  182F               	xorwf	??_check,w,c
  1450  0024CE  B4D8               	btfsc	status,2,c
  1451  0024D0  D005               	goto	l334
  1452  0024D2                     u6340:
  1453                           
  1454                           ;main.c: 715: return 0;
  1455  0024D2  0E00               	movlw	0
  1456  0024D4  6E2E               	movwf	?_check+1,c
  1457  0024D6  0E00               	movlw	0
  1458  0024D8  6E2D               	movwf	?_check,c
  1459  0024DA  0012               	return	
  1460  0024DC                     l334:
  1461                           
  1462                           ;main.c: 717: else if(surface_two[i] != native_surface_two[i]) {
  1463  0024DC  0E4A               	movlw	low _surface_two
  1464  0024DE  2430               	addwf	check@i,w,c
  1465  0024E0  6ED9               	movwf	fsr2l,c
  1466  0024E2  0E00               	movlw	high _surface_two
  1467  0024E4  2031               	addwfc	check@i+1,w,c
  1468  0024E6  6EDA               	movwf	fsr2h,c
  1469  0024E8  50DF               	movf	indf2,w,c
  1470  0024EA  6E2F               	movwf	??_check& (0+255),c
  1471  0024EC  0E11               	movlw	low _native_surface_two
  1472  0024EE  2430               	addwf	check@i,w,c
  1473  0024F0  6EF6               	movwf	tblptrl,c
  1474  0024F2  0E06               	movlw	high _native_surface_two
  1475  0024F4  2031               	addwfc	check@i+1,w,c
  1476  0024F6  6EF7               	movwf	tblptrh,c
  1477  0024F8                     	if	0	;There are less than 3 active tblptr bytes
  1478  0024F8                     	endif
  1479  0024F8  0008               	tblrd		*
  1480  0024FA  50F5               	movf	tablat,w,c
  1481  0024FC  182F               	xorwf	??_check,w,c
  1482  0024FE  A4D8               	btfss	status,2,c
  1483  002500  D7E8               	goto	u6340
  1484                           
  1485                           ;main.c: 720: else if(surface_three[i] != native_surface_three[i]) {
  1486                           
  1487                           ;main.c: 719: }
  1488                           
  1489                           ;main.c: 718: return 0;
  1490  002502  0E46               	movlw	low _surface_three
  1491  002504  2430               	addwf	check@i,w,c
  1492  002506  6ED9               	movwf	fsr2l,c
  1493  002508  0E00               	movlw	high _surface_three
  1494  00250A  2031               	addwfc	check@i+1,w,c
  1495  00250C  6EDA               	movwf	fsr2h,c
  1496  00250E  50DF               	movf	indf2,w,c
  1497  002510  6E2F               	movwf	??_check& (0+255),c
  1498  002512  0E0D               	movlw	low _native_surface_three
  1499  002514  2430               	addwf	check@i,w,c
  1500  002516  6EF6               	movwf	tblptrl,c
  1501  002518  0E06               	movlw	high _native_surface_three
  1502  00251A  2031               	addwfc	check@i+1,w,c
  1503  00251C  6EF7               	movwf	tblptrh,c
  1504  00251E                     	if	0	;There are less than 3 active tblptr bytes
  1505  00251E                     	endif
  1506  00251E  0008               	tblrd		*
  1507  002520  50F5               	movf	tablat,w,c
  1508  002522  182F               	xorwf	??_check,w,c
  1509  002524  A4D8               	btfss	status,2,c
  1510  002526  D7D5               	goto	u6340
  1511                           
  1512                           ;main.c: 723: else if(surface_four[i] != native_surface_four[i]) {
  1513                           
  1514                           ;main.c: 722: }
  1515                           
  1516                           ;main.c: 721: return 0;
  1517  002528  0E42               	movlw	low _surface_four
  1518  00252A  2430               	addwf	check@i,w,c
  1519  00252C  6ED9               	movwf	fsr2l,c
  1520  00252E  0E00               	movlw	high _surface_four
  1521  002530  2031               	addwfc	check@i+1,w,c
  1522  002532  6EDA               	movwf	fsr2h,c
  1523  002534  50DF               	movf	indf2,w,c
  1524  002536  6E2F               	movwf	??_check& (0+255),c
  1525  002538  0E09               	movlw	low _native_surface_four
  1526  00253A  2430               	addwf	check@i,w,c
  1527  00253C  6EF6               	movwf	tblptrl,c
  1528  00253E  0E06               	movlw	high _native_surface_four
  1529  002540  2031               	addwfc	check@i+1,w,c
  1530  002542  6EF7               	movwf	tblptrh,c
  1531  002544                     	if	0	;There are less than 3 active tblptr bytes
  1532  002544                     	endif
  1533  002544  0008               	tblrd		*
  1534  002546  50F5               	movf	tablat,w,c
  1535  002548  182F               	xorwf	??_check,w,c
  1536  00254A  A4D8               	btfss	status,2,c
  1537  00254C  D7C2               	goto	u6340
  1538                           
  1539                           ;main.c: 726: else if(surface_five[i] != native_surface_five[i]) {
  1540                           
  1541                           ;main.c: 725: }
  1542                           
  1543                           ;main.c: 724: return 0;
  1544  00254E  0E3E               	movlw	low _surface_five
  1545  002550  2430               	addwf	check@i,w,c
  1546  002552  6ED9               	movwf	fsr2l,c
  1547  002554  0E00               	movlw	high _surface_five
  1548  002556  2031               	addwfc	check@i+1,w,c
  1549  002558  6EDA               	movwf	fsr2h,c
  1550  00255A  50DF               	movf	indf2,w,c
  1551  00255C  6E2F               	movwf	??_check& (0+255),c
  1552  00255E  0E05               	movlw	low _native_surface_five
  1553  002560  2430               	addwf	check@i,w,c
  1554  002562  6EF6               	movwf	tblptrl,c
  1555  002564  0E06               	movlw	high _native_surface_five
  1556  002566  2031               	addwfc	check@i+1,w,c
  1557  002568  6EF7               	movwf	tblptrh,c
  1558  00256A                     	if	0	;There are less than 3 active tblptr bytes
  1559  00256A                     	endif
  1560  00256A  0008               	tblrd		*
  1561  00256C  50F5               	movf	tablat,w,c
  1562  00256E  182F               	xorwf	??_check,w,c
  1563  002570  A4D8               	btfss	status,2,c
  1564  002572  D7AF               	goto	u6340
  1565                           
  1566                           ;main.c: 729: else if(surface_six[i] != native_surface_six[i]) {
  1567                           
  1568                           ;main.c: 728: }
  1569                           
  1570                           ;main.c: 727: return 0;
  1571  002574  0E3A               	movlw	low _surface_six
  1572  002576  2430               	addwf	check@i,w,c
  1573  002578  6ED9               	movwf	fsr2l,c
  1574  00257A  0E00               	movlw	high _surface_six
  1575  00257C  2031               	addwfc	check@i+1,w,c
  1576  00257E  6EDA               	movwf	fsr2h,c
  1577  002580  50DF               	movf	indf2,w,c
  1578  002582  6E2F               	movwf	??_check& (0+255),c
  1579  002584  0E01               	movlw	low _native_surface_six
  1580  002586  2430               	addwf	check@i,w,c
  1581  002588  6EF6               	movwf	tblptrl,c
  1582  00258A  0E06               	movlw	high _native_surface_six
  1583  00258C  2031               	addwfc	check@i+1,w,c
  1584  00258E  6EF7               	movwf	tblptrh,c
  1585  002590                     	if	0	;There are less than 3 active tblptr bytes
  1586  002590                     	endif
  1587  002590  0008               	tblrd		*
  1588  002592  50F5               	movf	tablat,w,c
  1589  002594  182F               	xorwf	??_check,w,c
  1590  002596  B4D8               	btfsc	status,2,c
  1591  002598  D005               	goto	l345
  1592                           
  1593                           ;main.c: 730: return 0;
  1594  00259A  0E00               	movlw	0
  1595  00259C  6E2E               	movwf	?_check+1,c
  1596  00259E  0E00               	movlw	0
  1597  0025A0  6E2D               	movwf	?_check,c
  1598  0025A2  0012               	return	
  1599  0025A4                     l345:
  1600  0025A4  4A30               	infsnz	check@i,f,c
  1601  0025A6  2A31               	incf	check@i+1,f,c
  1602  0025A8  BE31               	btfsc	check@i+1,7,c
  1603  0025AA  D780               	goto	l332
  1604  0025AC  5031               	movf	check@i+1,w,c
  1605  0025AE  E101               	bnz	l5322
  1606  0025B0  D777               	goto	L1
  1607  0025B2                     u6400:
  1608  0025B2                     l5322:
  1609                           
  1610                           ;main.c: 731: }
  1611                           ;main.c: 732: }
  1612                           ;main.c: 733: return 1;
  1613  0025B2  0E00               	movlw	0
  1614  0025B4  6E2E               	movwf	?_check+1,c
  1615  0025B6  0E01               	movlw	1
  1616  0025B8  6E2D               	movwf	?_check,c
  1617  0025BA  0012               	return	
  1618  0025BC                     __end_of_check:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           intcon	equ	0xFF2
  1625                           postinc0	equ	0xFEE
  1626                           postdec1	equ	0xFE5
  1627                           fsr1l	equ	0xFE1
  1628                           indf2	equ	0xFDF
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _Ui *****************
  1634 ;; Defined at:
  1635 ;;		line 60 in file "main.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  i               2    6[BANK0 ] int 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1649 ;;      Params:         0       0       0       0       0       0       0
  1650 ;;      Locals:         0       2       0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0
  1652 ;;      Totals:         0       2       0       0       0       0       0
  1653 ;;Total ram usage:        2 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    8
  1656 ;; This function calls:
  1657 ;;		_led
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text5
  1664  002D60                     __ptext5:
  1665                           	opt stack 0
  1666  002D60                     _Ui:
  1667                           	opt stack 22
  1668                           
  1669                           ;main.c: 61: int i;
  1670                           ;main.c: 62: for(i=0;i<2;i++) {
  1671                           
  1672                           ;incstack = 0
  1673  002D60  0E00               	movlw	0
  1674  002D62  0100               	movlb	0	; () banked
  1675  002D64  6F87               	movwf	(Ui@i+1)& (0+255),b
  1676  002D66  0E00               	movlw	0
  1677  002D68  6F86               	movwf	Ui@i& (0+255),b
  1678  002D6A                     l5086:
  1679                           
  1680                           ; BSR set to: 0
  1681  002D6A  BF87               	btfsc	(Ui@i+1)& (0+255),7,b
  1682  002D6C  D006               	goto	l82
  1683  002D6E  5187               	movf	(Ui@i+1)& (0+255),w,b
  1684  002D70  E14D               	bnz	l5096
  1685  002D72  0E02               	movlw	2
  1686  002D74  5D86               	subwf	Ui@i& (0+255),w,b
  1687  002D76  B0D8               	btfsc	status,0,c
  1688  002D78  D049               	goto	u6080
  1689  002D7A                     l82:
  1690                           
  1691                           ; BSR set to: 0
  1692                           ;main.c: 63: temp[i] = surface_three[i];
  1693                           
  1694                           ; BSR set to: 0
  1695  002D7A  0E46               	movlw	low _surface_three
  1696  002D7C  2586               	addwf	Ui@i& (0+255),w,b
  1697  002D7E  6ED9               	movwf	fsr2l,c
  1698  002D80  0E00               	movlw	high _surface_three
  1699  002D82  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1700  002D84  6EDA               	movwf	fsr2h,c
  1701  002D86  0E36               	movlw	low _temp
  1702  002D88  2586               	addwf	Ui@i& (0+255),w,b
  1703  002D8A  6EE1               	movwf	fsr1l,c
  1704  002D8C  0E00               	movlw	high _temp
  1705  002D8E  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1706  002D90  6EE2               	movwf	fsr1h,c
  1707  002D92  CFDF FFE7          	movff	indf2,indf1
  1708                           
  1709                           ;main.c: 64: surface_three[i] = surface_two[i];
  1710  002D96  0E4A               	movlw	low _surface_two
  1711  002D98  2586               	addwf	Ui@i& (0+255),w,b
  1712  002D9A  6ED9               	movwf	fsr2l,c
  1713  002D9C  0E00               	movlw	high _surface_two
  1714  002D9E  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1715  002DA0  6EDA               	movwf	fsr2h,c
  1716  002DA2  0E46               	movlw	low _surface_three
  1717  002DA4  2586               	addwf	Ui@i& (0+255),w,b
  1718  002DA6  6EE1               	movwf	fsr1l,c
  1719  002DA8  0E00               	movlw	high _surface_three
  1720  002DAA  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1721  002DAC  6EE2               	movwf	fsr1h,c
  1722  002DAE  CFDF FFE7          	movff	indf2,indf1
  1723                           
  1724                           ;main.c: 65: surface_two[i] = surface_five[i];
  1725  002DB2  0E3E               	movlw	low _surface_five
  1726  002DB4  2586               	addwf	Ui@i& (0+255),w,b
  1727  002DB6  6ED9               	movwf	fsr2l,c
  1728  002DB8  0E00               	movlw	high _surface_five
  1729  002DBA  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1730  002DBC  6EDA               	movwf	fsr2h,c
  1731  002DBE  0E4A               	movlw	low _surface_two
  1732  002DC0  2586               	addwf	Ui@i& (0+255),w,b
  1733  002DC2  6EE1               	movwf	fsr1l,c
  1734  002DC4  0E00               	movlw	high _surface_two
  1735  002DC6  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1736  002DC8  6EE2               	movwf	fsr1h,c
  1737  002DCA  CFDF FFE7          	movff	indf2,indf1
  1738                           
  1739                           ;main.c: 66: surface_five[i] = surface_four[i];
  1740  002DCE  0E42               	movlw	low _surface_four
  1741  002DD0  2586               	addwf	Ui@i& (0+255),w,b
  1742  002DD2  6ED9               	movwf	fsr2l,c
  1743  002DD4  0E00               	movlw	high _surface_four
  1744  002DD6  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1745  002DD8  6EDA               	movwf	fsr2h,c
  1746  002DDA  0E3E               	movlw	low _surface_five
  1747  002DDC  2586               	addwf	Ui@i& (0+255),w,b
  1748  002DDE  6EE1               	movwf	fsr1l,c
  1749  002DE0  0E00               	movlw	high _surface_five
  1750  002DE2  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1751  002DE4  6EE2               	movwf	fsr1h,c
  1752  002DE6  CFDF FFE7          	movff	indf2,indf1
  1753                           
  1754                           ;main.c: 67: surface_four[i] = temp[i];
  1755  002DEA  0E36               	movlw	low _temp
  1756  002DEC  2586               	addwf	Ui@i& (0+255),w,b
  1757  002DEE  6ED9               	movwf	fsr2l,c
  1758  002DF0  0E00               	movlw	high _temp
  1759  002DF2  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1760  002DF4  6EDA               	movwf	fsr2h,c
  1761  002DF6  0E42               	movlw	low _surface_four
  1762  002DF8  2586               	addwf	Ui@i& (0+255),w,b
  1763  002DFA  6EE1               	movwf	fsr1l,c
  1764  002DFC  0E00               	movlw	high _surface_four
  1765  002DFE  2187               	addwfc	(Ui@i+1)& (0+255),w,b
  1766  002E00  6EE2               	movwf	fsr1h,c
  1767  002E02  CFDF FFE7          	movff	indf2,indf1
  1768                           
  1769                           ; BSR set to: 0
  1770  002E06  4B86               	infsnz	Ui@i& (0+255),f,b
  1771  002E08  2B87               	incf	(Ui@i+1)& (0+255),f,b
  1772  002E0A  D7AF               	goto	l5086
  1773  002E0C                     u6080:
  1774  002E0C                     l5096:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;main.c: 68: }
  1778                           ;main.c: 69: led('U');
  1779  002E0C  0E55               	movlw	85
  1780  002E0E  EC0D  F003         	call	_led
  1781  002E12  0012               	return		;funcret
  1782  002E14                     __end_of_Ui:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           intcon	equ	0xFF2
  1789                           postinc0	equ	0xFEE
  1790                           indf1	equ	0xFE7
  1791                           postdec1	equ	0xFE5
  1792                           fsr1h	equ	0xFE2
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _U *****************
  1800 ;; Defined at:
  1801 ;;		line 46 in file "main.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  i               2    6[BANK0 ] int 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         0       0       0       0       0       0       0
  1816 ;;      Locals:         0       2       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0
  1818 ;;      Totals:         0       2       0       0       0       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    8
  1822 ;; This function calls:
  1823 ;;		_led
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text6
  1830  002E14                     __ptext6:
  1831                           	opt stack 0
  1832  002E14                     _U:
  1833                           	opt stack 22
  1834                           
  1835                           ;main.c: 47: int i;
  1836                           ;main.c: 49: for(i=0;i<2;i++) {
  1837                           
  1838                           ;incstack = 0
  1839  002E14  0E00               	movlw	0
  1840  002E16  0100               	movlb	0	; () banked
  1841  002E18  6F87               	movwf	(U@i+1)& (0+255),b
  1842  002E1A  0E00               	movlw	0
  1843  002E1C  6F86               	movwf	U@i& (0+255),b
  1844  002E1E                     l5072:
  1845                           
  1846                           ; BSR set to: 0
  1847  002E1E  BF87               	btfsc	(U@i+1)& (0+255),7,b
  1848  002E20  D006               	goto	l77
  1849  002E22  5187               	movf	(U@i+1)& (0+255),w,b
  1850  002E24  E14D               	bnz	l5082
  1851  002E26  0E02               	movlw	2
  1852  002E28  5D86               	subwf	U@i& (0+255),w,b
  1853  002E2A  B0D8               	btfsc	status,0,c
  1854  002E2C  D049               	goto	u6060
  1855  002E2E                     l77:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;main.c: 50: temp[i] = surface_three[i];
  1859                           
  1860                           ; BSR set to: 0
  1861  002E2E  0E46               	movlw	low _surface_three
  1862  002E30  2586               	addwf	U@i& (0+255),w,b
  1863  002E32  6ED9               	movwf	fsr2l,c
  1864  002E34  0E00               	movlw	high _surface_three
  1865  002E36  2187               	addwfc	(U@i+1)& (0+255),w,b
  1866  002E38  6EDA               	movwf	fsr2h,c
  1867  002E3A  0E36               	movlw	low _temp
  1868  002E3C  2586               	addwf	U@i& (0+255),w,b
  1869  002E3E  6EE1               	movwf	fsr1l,c
  1870  002E40  0E00               	movlw	high _temp
  1871  002E42  2187               	addwfc	(U@i+1)& (0+255),w,b
  1872  002E44  6EE2               	movwf	fsr1h,c
  1873  002E46  CFDF FFE7          	movff	indf2,indf1
  1874                           
  1875                           ;main.c: 51: surface_three[i] = surface_four[i];
  1876  002E4A  0E42               	movlw	low _surface_four
  1877  002E4C  2586               	addwf	U@i& (0+255),w,b
  1878  002E4E  6ED9               	movwf	fsr2l,c
  1879  002E50  0E00               	movlw	high _surface_four
  1880  002E52  2187               	addwfc	(U@i+1)& (0+255),w,b
  1881  002E54  6EDA               	movwf	fsr2h,c
  1882  002E56  0E46               	movlw	low _surface_three
  1883  002E58  2586               	addwf	U@i& (0+255),w,b
  1884  002E5A  6EE1               	movwf	fsr1l,c
  1885  002E5C  0E00               	movlw	high _surface_three
  1886  002E5E  2187               	addwfc	(U@i+1)& (0+255),w,b
  1887  002E60  6EE2               	movwf	fsr1h,c
  1888  002E62  CFDF FFE7          	movff	indf2,indf1
  1889                           
  1890                           ;main.c: 52: surface_four[i] = surface_five[i];
  1891  002E66  0E3E               	movlw	low _surface_five
  1892  002E68  2586               	addwf	U@i& (0+255),w,b
  1893  002E6A  6ED9               	movwf	fsr2l,c
  1894  002E6C  0E00               	movlw	high _surface_five
  1895  002E6E  2187               	addwfc	(U@i+1)& (0+255),w,b
  1896  002E70  6EDA               	movwf	fsr2h,c
  1897  002E72  0E42               	movlw	low _surface_four
  1898  002E74  2586               	addwf	U@i& (0+255),w,b
  1899  002E76  6EE1               	movwf	fsr1l,c
  1900  002E78  0E00               	movlw	high _surface_four
  1901  002E7A  2187               	addwfc	(U@i+1)& (0+255),w,b
  1902  002E7C  6EE2               	movwf	fsr1h,c
  1903  002E7E  CFDF FFE7          	movff	indf2,indf1
  1904                           
  1905                           ;main.c: 53: surface_five[i] = surface_two[i];
  1906  002E82  0E4A               	movlw	low _surface_two
  1907  002E84  2586               	addwf	U@i& (0+255),w,b
  1908  002E86  6ED9               	movwf	fsr2l,c
  1909  002E88  0E00               	movlw	high _surface_two
  1910  002E8A  2187               	addwfc	(U@i+1)& (0+255),w,b
  1911  002E8C  6EDA               	movwf	fsr2h,c
  1912  002E8E  0E3E               	movlw	low _surface_five
  1913  002E90  2586               	addwf	U@i& (0+255),w,b
  1914  002E92  6EE1               	movwf	fsr1l,c
  1915  002E94  0E00               	movlw	high _surface_five
  1916  002E96  2187               	addwfc	(U@i+1)& (0+255),w,b
  1917  002E98  6EE2               	movwf	fsr1h,c
  1918  002E9A  CFDF FFE7          	movff	indf2,indf1
  1919                           
  1920                           ;main.c: 54: surface_two[i] = temp[i];
  1921  002E9E  0E36               	movlw	low _temp
  1922  002EA0  2586               	addwf	U@i& (0+255),w,b
  1923  002EA2  6ED9               	movwf	fsr2l,c
  1924  002EA4  0E00               	movlw	high _temp
  1925  002EA6  2187               	addwfc	(U@i+1)& (0+255),w,b
  1926  002EA8  6EDA               	movwf	fsr2h,c
  1927  002EAA  0E4A               	movlw	low _surface_two
  1928  002EAC  2586               	addwf	U@i& (0+255),w,b
  1929  002EAE  6EE1               	movwf	fsr1l,c
  1930  002EB0  0E00               	movlw	high _surface_two
  1931  002EB2  2187               	addwfc	(U@i+1)& (0+255),w,b
  1932  002EB4  6EE2               	movwf	fsr1h,c
  1933  002EB6  CFDF FFE7          	movff	indf2,indf1
  1934                           
  1935                           ; BSR set to: 0
  1936  002EBA  4B86               	infsnz	U@i& (0+255),f,b
  1937  002EBC  2B87               	incf	(U@i+1)& (0+255),f,b
  1938  002EBE  D7AF               	goto	l5072
  1939  002EC0                     u6060:
  1940  002EC0                     l5082:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 55: }
  1944                           ;main.c: 56: led('U');
  1945  002EC0  0E55               	movlw	85
  1946  002EC2  EC0D  F003         	call	_led
  1947  002EC6  0012               	return		;funcret
  1948  002EC8                     __end_of_U:
  1949                           	opt stack 0
  1950                           tblptru	equ	0xFF8
  1951                           tblptrh	equ	0xFF7
  1952                           tblptrl	equ	0xFF6
  1953                           tablat	equ	0xFF5
  1954                           intcon	equ	0xFF2
  1955                           postinc0	equ	0xFEE
  1956                           indf1	equ	0xFE7
  1957                           postdec1	equ	0xFE5
  1958                           fsr1h	equ	0xFE2
  1959                           fsr1l	equ	0xFE1
  1960                           indf2	equ	0xFDF
  1961                           fsr2h	equ	0xFDA
  1962                           fsr2l	equ	0xFD9
  1963                           status	equ	0xFD8
  1964                           
  1965 ;; *************** function _Ri *****************
  1966 ;; Defined at:
  1967 ;;		line 138 in file "main.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  i               2    6[BANK0 ] int 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1981 ;;      Params:         0       0       0       0       0       0       0
  1982 ;;      Locals:         0       2       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0
  1984 ;;      Totals:         0       2       0       0       0       0       0
  1985 ;;Total ram usage:        2 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    8
  1988 ;; This function calls:
  1989 ;;		_led
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text7
  1996  0027A8                     __ptext7:
  1997                           	opt stack 0
  1998  0027A8                     _Ri:
  1999                           	opt stack 22
  2000                           
  2001                           ;main.c: 139: int i;
  2002                           ;main.c: 140: for(i=1;i<4;i+=2) {
  2003                           
  2004                           ;incstack = 0
  2005  0027A8  0E00               	movlw	0
  2006  0027AA  0100               	movlb	0	; () banked
  2007  0027AC  6F87               	movwf	(Ri@i+1)& (0+255),b
  2008  0027AE  0E01               	movlw	1
  2009  0027B0  6F86               	movwf	Ri@i& (0+255),b
  2010  0027B2                     l5170:
  2011                           
  2012                           ; BSR set to: 0
  2013  0027B2  BF87               	btfsc	(Ri@i+1)& (0+255),7,b
  2014  0027B4  D006               	goto	l112
  2015  0027B6  5187               	movf	(Ri@i+1)& (0+255),w,b
  2016  0027B8  E14F               	bnz	l5180
  2017  0027BA  0E04               	movlw	4
  2018  0027BC  5D86               	subwf	Ri@i& (0+255),w,b
  2019  0027BE  B0D8               	btfsc	status,0,c
  2020  0027C0  D04B               	goto	u6200
  2021  0027C2                     l112:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;main.c: 141: temp[i] = surface_three[i];
  2025                           
  2026                           ; BSR set to: 0
  2027  0027C2  0E46               	movlw	low _surface_three
  2028  0027C4  2586               	addwf	Ri@i& (0+255),w,b
  2029  0027C6  6ED9               	movwf	fsr2l,c
  2030  0027C8  0E00               	movlw	high _surface_three
  2031  0027CA  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2032  0027CC  6EDA               	movwf	fsr2h,c
  2033  0027CE  0E36               	movlw	low _temp
  2034  0027D0  2586               	addwf	Ri@i& (0+255),w,b
  2035  0027D2  6EE1               	movwf	fsr1l,c
  2036  0027D4  0E00               	movlw	high _temp
  2037  0027D6  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2038  0027D8  6EE2               	movwf	fsr1h,c
  2039  0027DA  CFDF FFE7          	movff	indf2,indf1
  2040                           
  2041                           ;main.c: 142: surface_three[i] = surface_one[i];
  2042  0027DE  0E4E               	movlw	low _surface_one
  2043  0027E0  2586               	addwf	Ri@i& (0+255),w,b
  2044  0027E2  6ED9               	movwf	fsr2l,c
  2045  0027E4  0E00               	movlw	high _surface_one
  2046  0027E6  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2047  0027E8  6EDA               	movwf	fsr2h,c
  2048  0027EA  0E46               	movlw	low _surface_three
  2049  0027EC  2586               	addwf	Ri@i& (0+255),w,b
  2050  0027EE  6EE1               	movwf	fsr1l,c
  2051  0027F0  0E00               	movlw	high _surface_three
  2052  0027F2  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2053  0027F4  6EE2               	movwf	fsr1h,c
  2054  0027F6  CFDF FFE7          	movff	indf2,indf1
  2055                           
  2056                           ;main.c: 143: surface_one[i] = surface_two[i];
  2057  0027FA  0E4A               	movlw	low _surface_two
  2058  0027FC  2586               	addwf	Ri@i& (0+255),w,b
  2059  0027FE  6ED9               	movwf	fsr2l,c
  2060  002800  0E00               	movlw	high _surface_two
  2061  002802  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2062  002804  6EDA               	movwf	fsr2h,c
  2063  002806  0E4E               	movlw	low _surface_one
  2064  002808  2586               	addwf	Ri@i& (0+255),w,b
  2065  00280A  6EE1               	movwf	fsr1l,c
  2066  00280C  0E00               	movlw	high _surface_one
  2067  00280E  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2068  002810  6EE2               	movwf	fsr1h,c
  2069  002812  CFDF FFE7          	movff	indf2,indf1
  2070                           
  2071                           ;main.c: 144: surface_two[i] = surface_six[i];
  2072  002816  0E3A               	movlw	low _surface_six
  2073  002818  2586               	addwf	Ri@i& (0+255),w,b
  2074  00281A  6ED9               	movwf	fsr2l,c
  2075  00281C  0E00               	movlw	high _surface_six
  2076  00281E  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2077  002820  6EDA               	movwf	fsr2h,c
  2078  002822  0E4A               	movlw	low _surface_two
  2079  002824  2586               	addwf	Ri@i& (0+255),w,b
  2080  002826  6EE1               	movwf	fsr1l,c
  2081  002828  0E00               	movlw	high _surface_two
  2082  00282A  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2083  00282C  6EE2               	movwf	fsr1h,c
  2084  00282E  CFDF FFE7          	movff	indf2,indf1
  2085                           
  2086                           ;main.c: 145: surface_six[i] = temp[i];
  2087  002832  0E36               	movlw	low _temp
  2088  002834  2586               	addwf	Ri@i& (0+255),w,b
  2089  002836  6ED9               	movwf	fsr2l,c
  2090  002838  0E00               	movlw	high _temp
  2091  00283A  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2092  00283C  6EDA               	movwf	fsr2h,c
  2093  00283E  0E3A               	movlw	low _surface_six
  2094  002840  2586               	addwf	Ri@i& (0+255),w,b
  2095  002842  6EE1               	movwf	fsr1l,c
  2096  002844  0E00               	movlw	high _surface_six
  2097  002846  2187               	addwfc	(Ri@i+1)& (0+255),w,b
  2098  002848  6EE2               	movwf	fsr1h,c
  2099  00284A  CFDF FFE7          	movff	indf2,indf1
  2100                           
  2101                           ; BSR set to: 0
  2102  00284E  0E02               	movlw	2
  2103  002850  2786               	addwf	Ri@i& (0+255),f,b
  2104  002852  0E00               	movlw	0
  2105  002854  2387               	addwfc	(Ri@i+1)& (0+255),f,b
  2106  002856  D7AD               	goto	l5170
  2107  002858                     u6200:
  2108  002858                     l5180:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;main.c: 146: }
  2112                           ;main.c: 147: led('R');
  2113  002858  0E52               	movlw	82
  2114  00285A  EC0D  F003         	call	_led
  2115  00285E  0012               	return		;funcret
  2116  002860                     __end_of_Ri:
  2117                           	opt stack 0
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           intcon	equ	0xFF2
  2123                           postinc0	equ	0xFEE
  2124                           indf1	equ	0xFE7
  2125                           postdec1	equ	0xFE5
  2126                           fsr1h	equ	0xFE2
  2127                           fsr1l	equ	0xFE1
  2128                           indf2	equ	0xFDF
  2129                           fsr2h	equ	0xFDA
  2130                           fsr2l	equ	0xFD9
  2131                           status	equ	0xFD8
  2132                           
  2133 ;; *************** function _R *****************
  2134 ;; Defined at:
  2135 ;;		line 125 in file "main.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  i               2    6[BANK0 ] int 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         0       0       0       0       0       0       0
  2150 ;;      Locals:         0       2       0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0
  2152 ;;      Totals:         0       2       0       0       0       0       0
  2153 ;;Total ram usage:        2 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    8
  2156 ;; This function calls:
  2157 ;;		_led
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text8
  2164  002860                     __ptext8:
  2165                           	opt stack 0
  2166  002860                     _R:
  2167                           	opt stack 22
  2168                           
  2169                           ;main.c: 126: int i;
  2170                           ;main.c: 127: for(i=1;i<4;i+=2) {
  2171                           
  2172                           ;incstack = 0
  2173  002860  0E00               	movlw	0
  2174  002862  0100               	movlb	0	; () banked
  2175  002864  6F87               	movwf	(R@i+1)& (0+255),b
  2176  002866  0E01               	movlw	1
  2177  002868  6F86               	movwf	R@i& (0+255),b
  2178  00286A                     l5156:
  2179                           
  2180                           ; BSR set to: 0
  2181  00286A  BF87               	btfsc	(R@i+1)& (0+255),7,b
  2182  00286C  D006               	goto	l107
  2183  00286E  5187               	movf	(R@i+1)& (0+255),w,b
  2184  002870  E14F               	bnz	l5166
  2185  002872  0E04               	movlw	4
  2186  002874  5D86               	subwf	R@i& (0+255),w,b
  2187  002876  B0D8               	btfsc	status,0,c
  2188  002878  D04B               	goto	u6180
  2189  00287A                     l107:
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;main.c: 128: temp[i] = surface_three[i];
  2193                           
  2194                           ; BSR set to: 0
  2195  00287A  0E46               	movlw	low _surface_three
  2196  00287C  2586               	addwf	R@i& (0+255),w,b
  2197  00287E  6ED9               	movwf	fsr2l,c
  2198  002880  0E00               	movlw	high _surface_three
  2199  002882  2187               	addwfc	(R@i+1)& (0+255),w,b
  2200  002884  6EDA               	movwf	fsr2h,c
  2201  002886  0E36               	movlw	low _temp
  2202  002888  2586               	addwf	R@i& (0+255),w,b
  2203  00288A  6EE1               	movwf	fsr1l,c
  2204  00288C  0E00               	movlw	high _temp
  2205  00288E  2187               	addwfc	(R@i+1)& (0+255),w,b
  2206  002890  6EE2               	movwf	fsr1h,c
  2207  002892  CFDF FFE7          	movff	indf2,indf1
  2208                           
  2209                           ;main.c: 129: surface_three[i] = surface_six[i];
  2210  002896  0E3A               	movlw	low _surface_six
  2211  002898  2586               	addwf	R@i& (0+255),w,b
  2212  00289A  6ED9               	movwf	fsr2l,c
  2213  00289C  0E00               	movlw	high _surface_six
  2214  00289E  2187               	addwfc	(R@i+1)& (0+255),w,b
  2215  0028A0  6EDA               	movwf	fsr2h,c
  2216  0028A2  0E46               	movlw	low _surface_three
  2217  0028A4  2586               	addwf	R@i& (0+255),w,b
  2218  0028A6  6EE1               	movwf	fsr1l,c
  2219  0028A8  0E00               	movlw	high _surface_three
  2220  0028AA  2187               	addwfc	(R@i+1)& (0+255),w,b
  2221  0028AC  6EE2               	movwf	fsr1h,c
  2222  0028AE  CFDF FFE7          	movff	indf2,indf1
  2223                           
  2224                           ;main.c: 130: surface_six[i] = surface_two[i];
  2225  0028B2  0E4A               	movlw	low _surface_two
  2226  0028B4  2586               	addwf	R@i& (0+255),w,b
  2227  0028B6  6ED9               	movwf	fsr2l,c
  2228  0028B8  0E00               	movlw	high _surface_two
  2229  0028BA  2187               	addwfc	(R@i+1)& (0+255),w,b
  2230  0028BC  6EDA               	movwf	fsr2h,c
  2231  0028BE  0E3A               	movlw	low _surface_six
  2232  0028C0  2586               	addwf	R@i& (0+255),w,b
  2233  0028C2  6EE1               	movwf	fsr1l,c
  2234  0028C4  0E00               	movlw	high _surface_six
  2235  0028C6  2187               	addwfc	(R@i+1)& (0+255),w,b
  2236  0028C8  6EE2               	movwf	fsr1h,c
  2237  0028CA  CFDF FFE7          	movff	indf2,indf1
  2238                           
  2239                           ;main.c: 131: surface_two[i] = surface_one[i];
  2240  0028CE  0E4E               	movlw	low _surface_one
  2241  0028D0  2586               	addwf	R@i& (0+255),w,b
  2242  0028D2  6ED9               	movwf	fsr2l,c
  2243  0028D4  0E00               	movlw	high _surface_one
  2244  0028D6  2187               	addwfc	(R@i+1)& (0+255),w,b
  2245  0028D8  6EDA               	movwf	fsr2h,c
  2246  0028DA  0E4A               	movlw	low _surface_two
  2247  0028DC  2586               	addwf	R@i& (0+255),w,b
  2248  0028DE  6EE1               	movwf	fsr1l,c
  2249  0028E0  0E00               	movlw	high _surface_two
  2250  0028E2  2187               	addwfc	(R@i+1)& (0+255),w,b
  2251  0028E4  6EE2               	movwf	fsr1h,c
  2252  0028E6  CFDF FFE7          	movff	indf2,indf1
  2253                           
  2254                           ;main.c: 132: surface_one[i] = temp[i];
  2255  0028EA  0E36               	movlw	low _temp
  2256  0028EC  2586               	addwf	R@i& (0+255),w,b
  2257  0028EE  6ED9               	movwf	fsr2l,c
  2258  0028F0  0E00               	movlw	high _temp
  2259  0028F2  2187               	addwfc	(R@i+1)& (0+255),w,b
  2260  0028F4  6EDA               	movwf	fsr2h,c
  2261  0028F6  0E4E               	movlw	low _surface_one
  2262  0028F8  2586               	addwf	R@i& (0+255),w,b
  2263  0028FA  6EE1               	movwf	fsr1l,c
  2264  0028FC  0E00               	movlw	high _surface_one
  2265  0028FE  2187               	addwfc	(R@i+1)& (0+255),w,b
  2266  002900  6EE2               	movwf	fsr1h,c
  2267  002902  CFDF FFE7          	movff	indf2,indf1
  2268                           
  2269                           ; BSR set to: 0
  2270  002906  0E02               	movlw	2
  2271  002908  2786               	addwf	R@i& (0+255),f,b
  2272  00290A  0E00               	movlw	0
  2273  00290C  2387               	addwfc	(R@i+1)& (0+255),f,b
  2274  00290E  D7AD               	goto	l5156
  2275  002910                     u6180:
  2276  002910                     l5166:
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;main.c: 133: }
  2280                           ;main.c: 134: led('R');
  2281  002910  0E52               	movlw	82
  2282  002912  EC0D  F003         	call	_led
  2283  002916  0012               	return		;funcret
  2284  002918                     __end_of_R:
  2285                           	opt stack 0
  2286                           tblptru	equ	0xFF8
  2287                           tblptrh	equ	0xFF7
  2288                           tblptrl	equ	0xFF6
  2289                           tablat	equ	0xFF5
  2290                           intcon	equ	0xFF2
  2291                           postinc0	equ	0xFEE
  2292                           indf1	equ	0xFE7
  2293                           postdec1	equ	0xFE5
  2294                           fsr1h	equ	0xFE2
  2295                           fsr1l	equ	0xFE1
  2296                           indf2	equ	0xFDF
  2297                           fsr2h	equ	0xFDA
  2298                           fsr2l	equ	0xFD9
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function _Li *****************
  2302 ;; Defined at:
  2303 ;;		line 112 in file "main.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  i               2    6[BANK0 ] int 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2317 ;;      Params:         0       0       0       0       0       0       0
  2318 ;;      Locals:         0       2       0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0
  2320 ;;      Totals:         0       2       0       0       0       0       0
  2321 ;;Total ram usage:        2 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    8
  2324 ;; This function calls:
  2325 ;;		_led
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text9
  2332  002918                     __ptext9:
  2333                           	opt stack 0
  2334  002918                     _Li:
  2335                           	opt stack 22
  2336                           
  2337                           ;main.c: 113: int i;
  2338                           ;main.c: 114: for(i=0;i<3;i+=2) {
  2339                           
  2340                           ;incstack = 0
  2341  002918  0E00               	movlw	0
  2342  00291A  0100               	movlb	0	; () banked
  2343  00291C  6F87               	movwf	(Li@i+1)& (0+255),b
  2344  00291E  0E00               	movlw	0
  2345  002920  6F86               	movwf	Li@i& (0+255),b
  2346  002922                     l5142:
  2347                           
  2348                           ; BSR set to: 0
  2349  002922  BF87               	btfsc	(Li@i+1)& (0+255),7,b
  2350  002924  D006               	goto	l102
  2351  002926  5187               	movf	(Li@i+1)& (0+255),w,b
  2352  002928  E14F               	bnz	l5152
  2353  00292A  0E03               	movlw	3
  2354  00292C  5D86               	subwf	Li@i& (0+255),w,b
  2355  00292E  B0D8               	btfsc	status,0,c
  2356  002930  D04B               	goto	u6160
  2357  002932                     l102:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;main.c: 115: temp[i] = surface_three[i];
  2361                           
  2362                           ; BSR set to: 0
  2363  002932  0E46               	movlw	low _surface_three
  2364  002934  2586               	addwf	Li@i& (0+255),w,b
  2365  002936  6ED9               	movwf	fsr2l,c
  2366  002938  0E00               	movlw	high _surface_three
  2367  00293A  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2368  00293C  6EDA               	movwf	fsr2h,c
  2369  00293E  0E36               	movlw	low _temp
  2370  002940  2586               	addwf	Li@i& (0+255),w,b
  2371  002942  6EE1               	movwf	fsr1l,c
  2372  002944  0E00               	movlw	high _temp
  2373  002946  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2374  002948  6EE2               	movwf	fsr1h,c
  2375  00294A  CFDF FFE7          	movff	indf2,indf1
  2376                           
  2377                           ;main.c: 116: surface_three[i] = surface_six[i];
  2378  00294E  0E3A               	movlw	low _surface_six
  2379  002950  2586               	addwf	Li@i& (0+255),w,b
  2380  002952  6ED9               	movwf	fsr2l,c
  2381  002954  0E00               	movlw	high _surface_six
  2382  002956  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2383  002958  6EDA               	movwf	fsr2h,c
  2384  00295A  0E46               	movlw	low _surface_three
  2385  00295C  2586               	addwf	Li@i& (0+255),w,b
  2386  00295E  6EE1               	movwf	fsr1l,c
  2387  002960  0E00               	movlw	high _surface_three
  2388  002962  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2389  002964  6EE2               	movwf	fsr1h,c
  2390  002966  CFDF FFE7          	movff	indf2,indf1
  2391                           
  2392                           ;main.c: 117: surface_six[i] = surface_two[i];
  2393  00296A  0E4A               	movlw	low _surface_two
  2394  00296C  2586               	addwf	Li@i& (0+255),w,b
  2395  00296E  6ED9               	movwf	fsr2l,c
  2396  002970  0E00               	movlw	high _surface_two
  2397  002972  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2398  002974  6EDA               	movwf	fsr2h,c
  2399  002976  0E3A               	movlw	low _surface_six
  2400  002978  2586               	addwf	Li@i& (0+255),w,b
  2401  00297A  6EE1               	movwf	fsr1l,c
  2402  00297C  0E00               	movlw	high _surface_six
  2403  00297E  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2404  002980  6EE2               	movwf	fsr1h,c
  2405  002982  CFDF FFE7          	movff	indf2,indf1
  2406                           
  2407                           ;main.c: 118: surface_two[i] = surface_one[i];
  2408  002986  0E4E               	movlw	low _surface_one
  2409  002988  2586               	addwf	Li@i& (0+255),w,b
  2410  00298A  6ED9               	movwf	fsr2l,c
  2411  00298C  0E00               	movlw	high _surface_one
  2412  00298E  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2413  002990  6EDA               	movwf	fsr2h,c
  2414  002992  0E4A               	movlw	low _surface_two
  2415  002994  2586               	addwf	Li@i& (0+255),w,b
  2416  002996  6EE1               	movwf	fsr1l,c
  2417  002998  0E00               	movlw	high _surface_two
  2418  00299A  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2419  00299C  6EE2               	movwf	fsr1h,c
  2420  00299E  CFDF FFE7          	movff	indf2,indf1
  2421                           
  2422                           ;main.c: 119: surface_one[i] = temp[i];
  2423  0029A2  0E36               	movlw	low _temp
  2424  0029A4  2586               	addwf	Li@i& (0+255),w,b
  2425  0029A6  6ED9               	movwf	fsr2l,c
  2426  0029A8  0E00               	movlw	high _temp
  2427  0029AA  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2428  0029AC  6EDA               	movwf	fsr2h,c
  2429  0029AE  0E4E               	movlw	low _surface_one
  2430  0029B0  2586               	addwf	Li@i& (0+255),w,b
  2431  0029B2  6EE1               	movwf	fsr1l,c
  2432  0029B4  0E00               	movlw	high _surface_one
  2433  0029B6  2187               	addwfc	(Li@i+1)& (0+255),w,b
  2434  0029B8  6EE2               	movwf	fsr1h,c
  2435  0029BA  CFDF FFE7          	movff	indf2,indf1
  2436                           
  2437                           ; BSR set to: 0
  2438  0029BE  0E02               	movlw	2
  2439  0029C0  2786               	addwf	Li@i& (0+255),f,b
  2440  0029C2  0E00               	movlw	0
  2441  0029C4  2387               	addwfc	(Li@i+1)& (0+255),f,b
  2442  0029C6  D7AD               	goto	l5142
  2443  0029C8                     u6160:
  2444  0029C8                     l5152:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;main.c: 120: }
  2448                           ;main.c: 121: led('L');
  2449  0029C8  0E4C               	movlw	76
  2450  0029CA  EC0D  F003         	call	_led
  2451  0029CE  0012               	return		;funcret
  2452  0029D0                     __end_of_Li:
  2453                           	opt stack 0
  2454                           tblptru	equ	0xFF8
  2455                           tblptrh	equ	0xFF7
  2456                           tblptrl	equ	0xFF6
  2457                           tablat	equ	0xFF5
  2458                           intcon	equ	0xFF2
  2459                           postinc0	equ	0xFEE
  2460                           indf1	equ	0xFE7
  2461                           postdec1	equ	0xFE5
  2462                           fsr1h	equ	0xFE2
  2463                           fsr1l	equ	0xFE1
  2464                           indf2	equ	0xFDF
  2465                           fsr2h	equ	0xFDA
  2466                           fsr2l	equ	0xFD9
  2467                           status	equ	0xFD8
  2468                           
  2469 ;; *************** function _L *****************
  2470 ;; Defined at:
  2471 ;;		line 99 in file "main.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  i               2    6[BANK0 ] int 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2485 ;;      Params:         0       0       0       0       0       0       0
  2486 ;;      Locals:         0       2       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0
  2488 ;;      Totals:         0       2       0       0       0       0       0
  2489 ;;Total ram usage:        2 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    8
  2492 ;; This function calls:
  2493 ;;		_led
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text10
  2500  0029D0                     __ptext10:
  2501                           	opt stack 0
  2502  0029D0                     _L:
  2503                           	opt stack 22
  2504                           
  2505                           ;main.c: 100: int i;
  2506                           ;main.c: 101: for(i=0;i<3;i+=2) {
  2507                           
  2508                           ;incstack = 0
  2509  0029D0  0E00               	movlw	0
  2510  0029D2  0100               	movlb	0	; () banked
  2511  0029D4  6F87               	movwf	(L@i+1)& (0+255),b
  2512  0029D6  0E00               	movlw	0
  2513  0029D8  6F86               	movwf	L@i& (0+255),b
  2514  0029DA                     l5128:
  2515                           
  2516                           ; BSR set to: 0
  2517  0029DA  BF87               	btfsc	(L@i+1)& (0+255),7,b
  2518  0029DC  D006               	goto	l97
  2519  0029DE  5187               	movf	(L@i+1)& (0+255),w,b
  2520  0029E0  E14F               	bnz	l5138
  2521  0029E2  0E03               	movlw	3
  2522  0029E4  5D86               	subwf	L@i& (0+255),w,b
  2523  0029E6  B0D8               	btfsc	status,0,c
  2524  0029E8  D04B               	goto	u6140
  2525  0029EA                     l97:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;main.c: 102: temp[i] = surface_three[i];
  2529                           
  2530                           ; BSR set to: 0
  2531  0029EA  0E46               	movlw	low _surface_three
  2532  0029EC  2586               	addwf	L@i& (0+255),w,b
  2533  0029EE  6ED9               	movwf	fsr2l,c
  2534  0029F0  0E00               	movlw	high _surface_three
  2535  0029F2  2187               	addwfc	(L@i+1)& (0+255),w,b
  2536  0029F4  6EDA               	movwf	fsr2h,c
  2537  0029F6  0E36               	movlw	low _temp
  2538  0029F8  2586               	addwf	L@i& (0+255),w,b
  2539  0029FA  6EE1               	movwf	fsr1l,c
  2540  0029FC  0E00               	movlw	high _temp
  2541  0029FE  2187               	addwfc	(L@i+1)& (0+255),w,b
  2542  002A00  6EE2               	movwf	fsr1h,c
  2543  002A02  CFDF FFE7          	movff	indf2,indf1
  2544                           
  2545                           ;main.c: 103: surface_three[i] = surface_one[i];
  2546  002A06  0E4E               	movlw	low _surface_one
  2547  002A08  2586               	addwf	L@i& (0+255),w,b
  2548  002A0A  6ED9               	movwf	fsr2l,c
  2549  002A0C  0E00               	movlw	high _surface_one
  2550  002A0E  2187               	addwfc	(L@i+1)& (0+255),w,b
  2551  002A10  6EDA               	movwf	fsr2h,c
  2552  002A12  0E46               	movlw	low _surface_three
  2553  002A14  2586               	addwf	L@i& (0+255),w,b
  2554  002A16  6EE1               	movwf	fsr1l,c
  2555  002A18  0E00               	movlw	high _surface_three
  2556  002A1A  2187               	addwfc	(L@i+1)& (0+255),w,b
  2557  002A1C  6EE2               	movwf	fsr1h,c
  2558  002A1E  CFDF FFE7          	movff	indf2,indf1
  2559                           
  2560                           ;main.c: 104: surface_one[i] = surface_two[i];
  2561  002A22  0E4A               	movlw	low _surface_two
  2562  002A24  2586               	addwf	L@i& (0+255),w,b
  2563  002A26  6ED9               	movwf	fsr2l,c
  2564  002A28  0E00               	movlw	high _surface_two
  2565  002A2A  2187               	addwfc	(L@i+1)& (0+255),w,b
  2566  002A2C  6EDA               	movwf	fsr2h,c
  2567  002A2E  0E4E               	movlw	low _surface_one
  2568  002A30  2586               	addwf	L@i& (0+255),w,b
  2569  002A32  6EE1               	movwf	fsr1l,c
  2570  002A34  0E00               	movlw	high _surface_one
  2571  002A36  2187               	addwfc	(L@i+1)& (0+255),w,b
  2572  002A38  6EE2               	movwf	fsr1h,c
  2573  002A3A  CFDF FFE7          	movff	indf2,indf1
  2574                           
  2575                           ;main.c: 105: surface_two[i] = surface_six[i];
  2576  002A3E  0E3A               	movlw	low _surface_six
  2577  002A40  2586               	addwf	L@i& (0+255),w,b
  2578  002A42  6ED9               	movwf	fsr2l,c
  2579  002A44  0E00               	movlw	high _surface_six
  2580  002A46  2187               	addwfc	(L@i+1)& (0+255),w,b
  2581  002A48  6EDA               	movwf	fsr2h,c
  2582  002A4A  0E4A               	movlw	low _surface_two
  2583  002A4C  2586               	addwf	L@i& (0+255),w,b
  2584  002A4E  6EE1               	movwf	fsr1l,c
  2585  002A50  0E00               	movlw	high _surface_two
  2586  002A52  2187               	addwfc	(L@i+1)& (0+255),w,b
  2587  002A54  6EE2               	movwf	fsr1h,c
  2588  002A56  CFDF FFE7          	movff	indf2,indf1
  2589                           
  2590                           ;main.c: 106: surface_six[i] = temp[i];
  2591  002A5A  0E36               	movlw	low _temp
  2592  002A5C  2586               	addwf	L@i& (0+255),w,b
  2593  002A5E  6ED9               	movwf	fsr2l,c
  2594  002A60  0E00               	movlw	high _temp
  2595  002A62  2187               	addwfc	(L@i+1)& (0+255),w,b
  2596  002A64  6EDA               	movwf	fsr2h,c
  2597  002A66  0E3A               	movlw	low _surface_six
  2598  002A68  2586               	addwf	L@i& (0+255),w,b
  2599  002A6A  6EE1               	movwf	fsr1l,c
  2600  002A6C  0E00               	movlw	high _surface_six
  2601  002A6E  2187               	addwfc	(L@i+1)& (0+255),w,b
  2602  002A70  6EE2               	movwf	fsr1h,c
  2603  002A72  CFDF FFE7          	movff	indf2,indf1
  2604                           
  2605                           ; BSR set to: 0
  2606  002A76  0E02               	movlw	2
  2607  002A78  2786               	addwf	L@i& (0+255),f,b
  2608  002A7A  0E00               	movlw	0
  2609  002A7C  2387               	addwfc	(L@i+1)& (0+255),f,b
  2610  002A7E  D7AD               	goto	l5128
  2611  002A80                     u6140:
  2612  002A80                     l5138:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;main.c: 107: }
  2616                           ;main.c: 108: led('L');
  2617  002A80  0E4C               	movlw	76
  2618  002A82  EC0D  F003         	call	_led
  2619  002A86  0012               	return		;funcret
  2620  002A88                     __end_of_L:
  2621                           	opt stack 0
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           indf1	equ	0xFE7
  2629                           postdec1	equ	0xFE5
  2630                           fsr1h	equ	0xFE2
  2631                           fsr1l	equ	0xFE1
  2632                           indf2	equ	0xFDF
  2633                           fsr2h	equ	0xFDA
  2634                           fsr2l	equ	0xFD9
  2635                           status	equ	0xFD8
  2636                           
  2637 ;; *************** function _Fi *****************
  2638 ;; Defined at:
  2639 ;;		line 164 in file "main.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  i               2    6[BANK0 ] int 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2653 ;;      Params:         0       0       0       0       0       0       0
  2654 ;;      Locals:         0       2       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0
  2656 ;;      Totals:         0       2       0       0       0       0       0
  2657 ;;Total ram usage:        2 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    8
  2660 ;; This function calls:
  2661 ;;		_led
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text11
  2668  002EC8                     __ptext11:
  2669                           	opt stack 0
  2670  002EC8                     _Fi:
  2671                           	opt stack 22
  2672                           
  2673                           ;main.c: 165: int i;
  2674                           ;main.c: 166: for(i=2;i<=3;i++) {
  2675                           
  2676                           ;incstack = 0
  2677  002EC8  0E00               	movlw	0
  2678  002ECA  0100               	movlb	0	; () banked
  2679  002ECC  6F87               	movwf	(Fi@i+1)& (0+255),b
  2680  002ECE  0E02               	movlw	2
  2681  002ED0  6F86               	movwf	Fi@i& (0+255),b
  2682  002ED2                     l5198:
  2683                           
  2684                           ; BSR set to: 0
  2685  002ED2  BF87               	btfsc	(Fi@i+1)& (0+255),7,b
  2686  002ED4  D006               	goto	l122
  2687  002ED6  5187               	movf	(Fi@i+1)& (0+255),w,b
  2688  002ED8  E14D               	bnz	l5208
  2689  002EDA  0E04               	movlw	4
  2690  002EDC  5D86               	subwf	Fi@i& (0+255),w,b
  2691  002EDE  B0D8               	btfsc	status,0,c
  2692  002EE0  D049               	goto	u6240
  2693  002EE2                     l122:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;main.c: 167: temp[i] = surface_one[i];
  2697                           
  2698                           ; BSR set to: 0
  2699  002EE2  0E4E               	movlw	low _surface_one
  2700  002EE4  2586               	addwf	Fi@i& (0+255),w,b
  2701  002EE6  6ED9               	movwf	fsr2l,c
  2702  002EE8  0E00               	movlw	high _surface_one
  2703  002EEA  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2704  002EEC  6EDA               	movwf	fsr2h,c
  2705  002EEE  0E36               	movlw	low _temp
  2706  002EF0  2586               	addwf	Fi@i& (0+255),w,b
  2707  002EF2  6EE1               	movwf	fsr1l,c
  2708  002EF4  0E00               	movlw	high _temp
  2709  002EF6  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2710  002EF8  6EE2               	movwf	fsr1h,c
  2711  002EFA  CFDF FFE7          	movff	indf2,indf1
  2712                           
  2713                           ;main.c: 168: surface_one[i] = surface_four[i];
  2714  002EFE  0E42               	movlw	low _surface_four
  2715  002F00  2586               	addwf	Fi@i& (0+255),w,b
  2716  002F02  6ED9               	movwf	fsr2l,c
  2717  002F04  0E00               	movlw	high _surface_four
  2718  002F06  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2719  002F08  6EDA               	movwf	fsr2h,c
  2720  002F0A  0E4E               	movlw	low _surface_one
  2721  002F0C  2586               	addwf	Fi@i& (0+255),w,b
  2722  002F0E  6EE1               	movwf	fsr1l,c
  2723  002F10  0E00               	movlw	high _surface_one
  2724  002F12  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2725  002F14  6EE2               	movwf	fsr1h,c
  2726  002F16  CFDF FFE7          	movff	indf2,indf1
  2727                           
  2728                           ;main.c: 169: surface_four[i] = surface_six[i];
  2729  002F1A  0E3A               	movlw	low _surface_six
  2730  002F1C  2586               	addwf	Fi@i& (0+255),w,b
  2731  002F1E  6ED9               	movwf	fsr2l,c
  2732  002F20  0E00               	movlw	high _surface_six
  2733  002F22  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2734  002F24  6EDA               	movwf	fsr2h,c
  2735  002F26  0E42               	movlw	low _surface_four
  2736  002F28  2586               	addwf	Fi@i& (0+255),w,b
  2737  002F2A  6EE1               	movwf	fsr1l,c
  2738  002F2C  0E00               	movlw	high _surface_four
  2739  002F2E  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2740  002F30  6EE2               	movwf	fsr1h,c
  2741  002F32  CFDF FFE7          	movff	indf2,indf1
  2742                           
  2743                           ;main.c: 170: surface_six[i] = surface_two[i];
  2744  002F36  0E4A               	movlw	low _surface_two
  2745  002F38  2586               	addwf	Fi@i& (0+255),w,b
  2746  002F3A  6ED9               	movwf	fsr2l,c
  2747  002F3C  0E00               	movlw	high _surface_two
  2748  002F3E  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2749  002F40  6EDA               	movwf	fsr2h,c
  2750  002F42  0E3A               	movlw	low _surface_six
  2751  002F44  2586               	addwf	Fi@i& (0+255),w,b
  2752  002F46  6EE1               	movwf	fsr1l,c
  2753  002F48  0E00               	movlw	high _surface_six
  2754  002F4A  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2755  002F4C  6EE2               	movwf	fsr1h,c
  2756  002F4E  CFDF FFE7          	movff	indf2,indf1
  2757                           
  2758                           ;main.c: 171: surface_two[i] = temp[i];
  2759  002F52  0E36               	movlw	low _temp
  2760  002F54  2586               	addwf	Fi@i& (0+255),w,b
  2761  002F56  6ED9               	movwf	fsr2l,c
  2762  002F58  0E00               	movlw	high _temp
  2763  002F5A  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2764  002F5C  6EDA               	movwf	fsr2h,c
  2765  002F5E  0E4A               	movlw	low _surface_two
  2766  002F60  2586               	addwf	Fi@i& (0+255),w,b
  2767  002F62  6EE1               	movwf	fsr1l,c
  2768  002F64  0E00               	movlw	high _surface_two
  2769  002F66  2187               	addwfc	(Fi@i+1)& (0+255),w,b
  2770  002F68  6EE2               	movwf	fsr1h,c
  2771  002F6A  CFDF FFE7          	movff	indf2,indf1
  2772                           
  2773                           ; BSR set to: 0
  2774  002F6E  4B86               	infsnz	Fi@i& (0+255),f,b
  2775  002F70  2B87               	incf	(Fi@i+1)& (0+255),f,b
  2776  002F72  D7AF               	goto	l5198
  2777  002F74                     u6240:
  2778  002F74                     l5208:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;main.c: 172: }
  2782                           ;main.c: 173: led('F');
  2783  002F74  0E46               	movlw	70
  2784  002F76  EC0D  F003         	call	_led
  2785  002F7A  0012               	return		;funcret
  2786  002F7C                     __end_of_Fi:
  2787                           	opt stack 0
  2788                           tblptru	equ	0xFF8
  2789                           tblptrh	equ	0xFF7
  2790                           tblptrl	equ	0xFF6
  2791                           tablat	equ	0xFF5
  2792                           intcon	equ	0xFF2
  2793                           postinc0	equ	0xFEE
  2794                           indf1	equ	0xFE7
  2795                           postdec1	equ	0xFE5
  2796                           fsr1h	equ	0xFE2
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           fsr2h	equ	0xFDA
  2800                           fsr2l	equ	0xFD9
  2801                           status	equ	0xFD8
  2802                           
  2803 ;; *************** function _F *****************
  2804 ;; Defined at:
  2805 ;;		line 151 in file "main.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  i               2    6[BANK0 ] int 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2819 ;;      Params:         0       0       0       0       0       0       0
  2820 ;;      Locals:         0       2       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0
  2822 ;;      Totals:         0       2       0       0       0       0       0
  2823 ;;Total ram usage:        2 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    8
  2826 ;; This function calls:
  2827 ;;		_led
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text12
  2834  002F7C                     __ptext12:
  2835                           	opt stack 0
  2836  002F7C                     _F:
  2837                           	opt stack 22
  2838                           
  2839                           ;main.c: 152: int i;
  2840                           ;main.c: 153: for(i=2;i<=3;i++) {
  2841                           
  2842                           ;incstack = 0
  2843  002F7C  0E00               	movlw	0
  2844  002F7E  0100               	movlb	0	; () banked
  2845  002F80  6F87               	movwf	(F@i+1)& (0+255),b
  2846  002F82  0E02               	movlw	2
  2847  002F84  6F86               	movwf	F@i& (0+255),b
  2848  002F86                     l5184:
  2849                           
  2850                           ; BSR set to: 0
  2851  002F86  BF87               	btfsc	(F@i+1)& (0+255),7,b
  2852  002F88  D006               	goto	l117
  2853  002F8A  5187               	movf	(F@i+1)& (0+255),w,b
  2854  002F8C  E14D               	bnz	l5194
  2855  002F8E  0E04               	movlw	4
  2856  002F90  5D86               	subwf	F@i& (0+255),w,b
  2857  002F92  B0D8               	btfsc	status,0,c
  2858  002F94  D049               	goto	u6220
  2859  002F96                     l117:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;main.c: 154: temp[i] = surface_one[i];
  2863                           
  2864                           ; BSR set to: 0
  2865  002F96  0E4E               	movlw	low _surface_one
  2866  002F98  2586               	addwf	F@i& (0+255),w,b
  2867  002F9A  6ED9               	movwf	fsr2l,c
  2868  002F9C  0E00               	movlw	high _surface_one
  2869  002F9E  2187               	addwfc	(F@i+1)& (0+255),w,b
  2870  002FA0  6EDA               	movwf	fsr2h,c
  2871  002FA2  0E36               	movlw	low _temp
  2872  002FA4  2586               	addwf	F@i& (0+255),w,b
  2873  002FA6  6EE1               	movwf	fsr1l,c
  2874  002FA8  0E00               	movlw	high _temp
  2875  002FAA  2187               	addwfc	(F@i+1)& (0+255),w,b
  2876  002FAC  6EE2               	movwf	fsr1h,c
  2877  002FAE  CFDF FFE7          	movff	indf2,indf1
  2878                           
  2879                           ;main.c: 155: surface_one[i] = surface_two[i];
  2880  002FB2  0E4A               	movlw	low _surface_two
  2881  002FB4  2586               	addwf	F@i& (0+255),w,b
  2882  002FB6  6ED9               	movwf	fsr2l,c
  2883  002FB8  0E00               	movlw	high _surface_two
  2884  002FBA  2187               	addwfc	(F@i+1)& (0+255),w,b
  2885  002FBC  6EDA               	movwf	fsr2h,c
  2886  002FBE  0E4E               	movlw	low _surface_one
  2887  002FC0  2586               	addwf	F@i& (0+255),w,b
  2888  002FC2  6EE1               	movwf	fsr1l,c
  2889  002FC4  0E00               	movlw	high _surface_one
  2890  002FC6  2187               	addwfc	(F@i+1)& (0+255),w,b
  2891  002FC8  6EE2               	movwf	fsr1h,c
  2892  002FCA  CFDF FFE7          	movff	indf2,indf1
  2893                           
  2894                           ;main.c: 156: surface_two[i] = surface_six[i];
  2895  002FCE  0E3A               	movlw	low _surface_six
  2896  002FD0  2586               	addwf	F@i& (0+255),w,b
  2897  002FD2  6ED9               	movwf	fsr2l,c
  2898  002FD4  0E00               	movlw	high _surface_six
  2899  002FD6  2187               	addwfc	(F@i+1)& (0+255),w,b
  2900  002FD8  6EDA               	movwf	fsr2h,c
  2901  002FDA  0E4A               	movlw	low _surface_two
  2902  002FDC  2586               	addwf	F@i& (0+255),w,b
  2903  002FDE  6EE1               	movwf	fsr1l,c
  2904  002FE0  0E00               	movlw	high _surface_two
  2905  002FE2  2187               	addwfc	(F@i+1)& (0+255),w,b
  2906  002FE4  6EE2               	movwf	fsr1h,c
  2907  002FE6  CFDF FFE7          	movff	indf2,indf1
  2908                           
  2909                           ;main.c: 157: surface_six[i] = surface_four[i];
  2910  002FEA  0E42               	movlw	low _surface_four
  2911  002FEC  2586               	addwf	F@i& (0+255),w,b
  2912  002FEE  6ED9               	movwf	fsr2l,c
  2913  002FF0  0E00               	movlw	high _surface_four
  2914  002FF2  2187               	addwfc	(F@i+1)& (0+255),w,b
  2915  002FF4  6EDA               	movwf	fsr2h,c
  2916  002FF6  0E3A               	movlw	low _surface_six
  2917  002FF8  2586               	addwf	F@i& (0+255),w,b
  2918  002FFA  6EE1               	movwf	fsr1l,c
  2919  002FFC  0E00               	movlw	high _surface_six
  2920  002FFE  2187               	addwfc	(F@i+1)& (0+255),w,b
  2921  003000  6EE2               	movwf	fsr1h,c
  2922  003002  CFDF FFE7          	movff	indf2,indf1
  2923                           
  2924                           ;main.c: 158: surface_four[i] = temp[i];
  2925  003006  0E36               	movlw	low _temp
  2926  003008  2586               	addwf	F@i& (0+255),w,b
  2927  00300A  6ED9               	movwf	fsr2l,c
  2928  00300C  0E00               	movlw	high _temp
  2929  00300E  2187               	addwfc	(F@i+1)& (0+255),w,b
  2930  003010  6EDA               	movwf	fsr2h,c
  2931  003012  0E42               	movlw	low _surface_four
  2932  003014  2586               	addwf	F@i& (0+255),w,b
  2933  003016  6EE1               	movwf	fsr1l,c
  2934  003018  0E00               	movlw	high _surface_four
  2935  00301A  2187               	addwfc	(F@i+1)& (0+255),w,b
  2936  00301C  6EE2               	movwf	fsr1h,c
  2937  00301E  CFDF FFE7          	movff	indf2,indf1
  2938                           
  2939                           ; BSR set to: 0
  2940  003022  4B86               	infsnz	F@i& (0+255),f,b
  2941  003024  2B87               	incf	(F@i+1)& (0+255),f,b
  2942  003026  D7AF               	goto	l5184
  2943  003028                     u6220:
  2944  003028                     l5194:
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;main.c: 159: }
  2948                           ;main.c: 160: led('F');
  2949  003028  0E46               	movlw	70
  2950  00302A  EC0D  F003         	call	_led
  2951  00302E  0012               	return		;funcret
  2952  003030                     __end_of_F:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           intcon	equ	0xFF2
  2959                           postinc0	equ	0xFEE
  2960                           indf1	equ	0xFE7
  2961                           postdec1	equ	0xFE5
  2962                           fsr1h	equ	0xFE2
  2963                           fsr1l	equ	0xFE1
  2964                           indf2	equ	0xFDF
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _Di *****************
  2970 ;; Defined at:
  2971 ;;		line 86 in file "main.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  i               2    6[BANK0 ] int 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2985 ;;      Params:         0       0       0       0       0       0       0
  2986 ;;      Locals:         0       2       0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0
  2988 ;;      Totals:         0       2       0       0       0       0       0
  2989 ;;Total ram usage:        2 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    8
  2992 ;; This function calls:
  2993 ;;		_led
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text13
  3000  003030                     __ptext13:
  3001                           	opt stack 0
  3002  003030                     _Di:
  3003                           	opt stack 22
  3004                           
  3005                           ;main.c: 87: int i;
  3006                           ;main.c: 88: for(i=2;i<4;i++) {
  3007                           
  3008                           ;incstack = 0
  3009  003030  0E00               	movlw	0
  3010  003032  0100               	movlb	0	; () banked
  3011  003034  6F87               	movwf	(Di@i+1)& (0+255),b
  3012  003036  0E02               	movlw	2
  3013  003038  6F86               	movwf	Di@i& (0+255),b
  3014  00303A                     l5114:
  3015                           
  3016                           ; BSR set to: 0
  3017  00303A  BF87               	btfsc	(Di@i+1)& (0+255),7,b
  3018  00303C  D006               	goto	l92
  3019  00303E  5187               	movf	(Di@i+1)& (0+255),w,b
  3020  003040  E14D               	bnz	l5124
  3021  003042  0E04               	movlw	4
  3022  003044  5D86               	subwf	Di@i& (0+255),w,b
  3023  003046  B0D8               	btfsc	status,0,c
  3024  003048  D049               	goto	u6120
  3025  00304A                     l92:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;main.c: 89: temp[i] = surface_three[i];
  3029                           
  3030                           ; BSR set to: 0
  3031  00304A  0E46               	movlw	low _surface_three
  3032  00304C  2586               	addwf	Di@i& (0+255),w,b
  3033  00304E  6ED9               	movwf	fsr2l,c
  3034  003050  0E00               	movlw	high _surface_three
  3035  003052  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3036  003054  6EDA               	movwf	fsr2h,c
  3037  003056  0E36               	movlw	low _temp
  3038  003058  2586               	addwf	Di@i& (0+255),w,b
  3039  00305A  6EE1               	movwf	fsr1l,c
  3040  00305C  0E00               	movlw	high _temp
  3041  00305E  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3042  003060  6EE2               	movwf	fsr1h,c
  3043  003062  CFDF FFE7          	movff	indf2,indf1
  3044                           
  3045                           ;main.c: 90: surface_three[i] = surface_four[i];
  3046  003066  0E42               	movlw	low _surface_four
  3047  003068  2586               	addwf	Di@i& (0+255),w,b
  3048  00306A  6ED9               	movwf	fsr2l,c
  3049  00306C  0E00               	movlw	high _surface_four
  3050  00306E  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3051  003070  6EDA               	movwf	fsr2h,c
  3052  003072  0E46               	movlw	low _surface_three
  3053  003074  2586               	addwf	Di@i& (0+255),w,b
  3054  003076  6EE1               	movwf	fsr1l,c
  3055  003078  0E00               	movlw	high _surface_three
  3056  00307A  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3057  00307C  6EE2               	movwf	fsr1h,c
  3058  00307E  CFDF FFE7          	movff	indf2,indf1
  3059                           
  3060                           ;main.c: 91: surface_four[i] = surface_five[i];
  3061  003082  0E3E               	movlw	low _surface_five
  3062  003084  2586               	addwf	Di@i& (0+255),w,b
  3063  003086  6ED9               	movwf	fsr2l,c
  3064  003088  0E00               	movlw	high _surface_five
  3065  00308A  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3066  00308C  6EDA               	movwf	fsr2h,c
  3067  00308E  0E42               	movlw	low _surface_four
  3068  003090  2586               	addwf	Di@i& (0+255),w,b
  3069  003092  6EE1               	movwf	fsr1l,c
  3070  003094  0E00               	movlw	high _surface_four
  3071  003096  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3072  003098  6EE2               	movwf	fsr1h,c
  3073  00309A  CFDF FFE7          	movff	indf2,indf1
  3074                           
  3075                           ;main.c: 92: surface_five[i] = surface_two[i];
  3076  00309E  0E4A               	movlw	low _surface_two
  3077  0030A0  2586               	addwf	Di@i& (0+255),w,b
  3078  0030A2  6ED9               	movwf	fsr2l,c
  3079  0030A4  0E00               	movlw	high _surface_two
  3080  0030A6  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3081  0030A8  6EDA               	movwf	fsr2h,c
  3082  0030AA  0E3E               	movlw	low _surface_five
  3083  0030AC  2586               	addwf	Di@i& (0+255),w,b
  3084  0030AE  6EE1               	movwf	fsr1l,c
  3085  0030B0  0E00               	movlw	high _surface_five
  3086  0030B2  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3087  0030B4  6EE2               	movwf	fsr1h,c
  3088  0030B6  CFDF FFE7          	movff	indf2,indf1
  3089                           
  3090                           ;main.c: 93: surface_two[i] = temp[i];
  3091  0030BA  0E36               	movlw	low _temp
  3092  0030BC  2586               	addwf	Di@i& (0+255),w,b
  3093  0030BE  6ED9               	movwf	fsr2l,c
  3094  0030C0  0E00               	movlw	high _temp
  3095  0030C2  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3096  0030C4  6EDA               	movwf	fsr2h,c
  3097  0030C6  0E4A               	movlw	low _surface_two
  3098  0030C8  2586               	addwf	Di@i& (0+255),w,b
  3099  0030CA  6EE1               	movwf	fsr1l,c
  3100  0030CC  0E00               	movlw	high _surface_two
  3101  0030CE  2187               	addwfc	(Di@i+1)& (0+255),w,b
  3102  0030D0  6EE2               	movwf	fsr1h,c
  3103  0030D2  CFDF FFE7          	movff	indf2,indf1
  3104                           
  3105                           ; BSR set to: 0
  3106  0030D6  4B86               	infsnz	Di@i& (0+255),f,b
  3107  0030D8  2B87               	incf	(Di@i+1)& (0+255),f,b
  3108  0030DA  D7AF               	goto	l5114
  3109  0030DC                     u6120:
  3110  0030DC                     l5124:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;main.c: 94: }
  3114                           ;main.c: 95: led('D');
  3115  0030DC  0E44               	movlw	68
  3116  0030DE  EC0D  F003         	call	_led
  3117  0030E2  0012               	return		;funcret
  3118  0030E4                     __end_of_Di:
  3119                           	opt stack 0
  3120                           tblptru	equ	0xFF8
  3121                           tblptrh	equ	0xFF7
  3122                           tblptrl	equ	0xFF6
  3123                           tablat	equ	0xFF5
  3124                           intcon	equ	0xFF2
  3125                           postinc0	equ	0xFEE
  3126                           indf1	equ	0xFE7
  3127                           postdec1	equ	0xFE5
  3128                           fsr1h	equ	0xFE2
  3129                           fsr1l	equ	0xFE1
  3130                           indf2	equ	0xFDF
  3131                           fsr2h	equ	0xFDA
  3132                           fsr2l	equ	0xFD9
  3133                           status	equ	0xFD8
  3134                           
  3135 ;; *************** function _D *****************
  3136 ;; Defined at:
  3137 ;;		line 73 in file "main.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  i               2    6[BANK0 ] int 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3151 ;;      Params:         0       0       0       0       0       0       0
  3152 ;;      Locals:         0       2       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0
  3154 ;;      Totals:         0       2       0       0       0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    8
  3158 ;; This function calls:
  3159 ;;		_led
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text14
  3166  0030E4                     __ptext14:
  3167                           	opt stack 0
  3168  0030E4                     _D:
  3169                           	opt stack 22
  3170                           
  3171                           ;main.c: 74: int i;
  3172                           ;main.c: 75: for(i=2;i<4;i++) {
  3173                           
  3174                           ;incstack = 0
  3175  0030E4  0E00               	movlw	0
  3176  0030E6  0100               	movlb	0	; () banked
  3177  0030E8  6F87               	movwf	(D@i+1)& (0+255),b
  3178  0030EA  0E02               	movlw	2
  3179  0030EC  6F86               	movwf	D@i& (0+255),b
  3180  0030EE                     l5100:
  3181                           
  3182                           ; BSR set to: 0
  3183  0030EE  BF87               	btfsc	(D@i+1)& (0+255),7,b
  3184  0030F0  D006               	goto	l87
  3185  0030F2  5187               	movf	(D@i+1)& (0+255),w,b
  3186  0030F4  E14D               	bnz	l5110
  3187  0030F6  0E04               	movlw	4
  3188  0030F8  5D86               	subwf	D@i& (0+255),w,b
  3189  0030FA  B0D8               	btfsc	status,0,c
  3190  0030FC  D049               	goto	u6100
  3191  0030FE                     l87:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;main.c: 76: temp[i] = surface_three[i];
  3195                           
  3196                           ; BSR set to: 0
  3197  0030FE  0E46               	movlw	low _surface_three
  3198  003100  2586               	addwf	D@i& (0+255),w,b
  3199  003102  6ED9               	movwf	fsr2l,c
  3200  003104  0E00               	movlw	high _surface_three
  3201  003106  2187               	addwfc	(D@i+1)& (0+255),w,b
  3202  003108  6EDA               	movwf	fsr2h,c
  3203  00310A  0E36               	movlw	low _temp
  3204  00310C  2586               	addwf	D@i& (0+255),w,b
  3205  00310E  6EE1               	movwf	fsr1l,c
  3206  003110  0E00               	movlw	high _temp
  3207  003112  2187               	addwfc	(D@i+1)& (0+255),w,b
  3208  003114  6EE2               	movwf	fsr1h,c
  3209  003116  CFDF FFE7          	movff	indf2,indf1
  3210                           
  3211                           ;main.c: 77: surface_three[i] = surface_two[i];
  3212  00311A  0E4A               	movlw	low _surface_two
  3213  00311C  2586               	addwf	D@i& (0+255),w,b
  3214  00311E  6ED9               	movwf	fsr2l,c
  3215  003120  0E00               	movlw	high _surface_two
  3216  003122  2187               	addwfc	(D@i+1)& (0+255),w,b
  3217  003124  6EDA               	movwf	fsr2h,c
  3218  003126  0E46               	movlw	low _surface_three
  3219  003128  2586               	addwf	D@i& (0+255),w,b
  3220  00312A  6EE1               	movwf	fsr1l,c
  3221  00312C  0E00               	movlw	high _surface_three
  3222  00312E  2187               	addwfc	(D@i+1)& (0+255),w,b
  3223  003130  6EE2               	movwf	fsr1h,c
  3224  003132  CFDF FFE7          	movff	indf2,indf1
  3225                           
  3226                           ;main.c: 78: surface_two[i] = surface_five[i];
  3227  003136  0E3E               	movlw	low _surface_five
  3228  003138  2586               	addwf	D@i& (0+255),w,b
  3229  00313A  6ED9               	movwf	fsr2l,c
  3230  00313C  0E00               	movlw	high _surface_five
  3231  00313E  2187               	addwfc	(D@i+1)& (0+255),w,b
  3232  003140  6EDA               	movwf	fsr2h,c
  3233  003142  0E4A               	movlw	low _surface_two
  3234  003144  2586               	addwf	D@i& (0+255),w,b
  3235  003146  6EE1               	movwf	fsr1l,c
  3236  003148  0E00               	movlw	high _surface_two
  3237  00314A  2187               	addwfc	(D@i+1)& (0+255),w,b
  3238  00314C  6EE2               	movwf	fsr1h,c
  3239  00314E  CFDF FFE7          	movff	indf2,indf1
  3240                           
  3241                           ;main.c: 79: surface_five[i] = surface_four[i];
  3242  003152  0E42               	movlw	low _surface_four
  3243  003154  2586               	addwf	D@i& (0+255),w,b
  3244  003156  6ED9               	movwf	fsr2l,c
  3245  003158  0E00               	movlw	high _surface_four
  3246  00315A  2187               	addwfc	(D@i+1)& (0+255),w,b
  3247  00315C  6EDA               	movwf	fsr2h,c
  3248  00315E  0E3E               	movlw	low _surface_five
  3249  003160  2586               	addwf	D@i& (0+255),w,b
  3250  003162  6EE1               	movwf	fsr1l,c
  3251  003164  0E00               	movlw	high _surface_five
  3252  003166  2187               	addwfc	(D@i+1)& (0+255),w,b
  3253  003168  6EE2               	movwf	fsr1h,c
  3254  00316A  CFDF FFE7          	movff	indf2,indf1
  3255                           
  3256                           ;main.c: 80: surface_four[i] = temp[i];
  3257  00316E  0E36               	movlw	low _temp
  3258  003170  2586               	addwf	D@i& (0+255),w,b
  3259  003172  6ED9               	movwf	fsr2l,c
  3260  003174  0E00               	movlw	high _temp
  3261  003176  2187               	addwfc	(D@i+1)& (0+255),w,b
  3262  003178  6EDA               	movwf	fsr2h,c
  3263  00317A  0E42               	movlw	low _surface_four
  3264  00317C  2586               	addwf	D@i& (0+255),w,b
  3265  00317E  6EE1               	movwf	fsr1l,c
  3266  003180  0E00               	movlw	high _surface_four
  3267  003182  2187               	addwfc	(D@i+1)& (0+255),w,b
  3268  003184  6EE2               	movwf	fsr1h,c
  3269  003186  CFDF FFE7          	movff	indf2,indf1
  3270                           
  3271                           ; BSR set to: 0
  3272  00318A  4B86               	infsnz	D@i& (0+255),f,b
  3273  00318C  2B87               	incf	(D@i+1)& (0+255),f,b
  3274  00318E  D7AF               	goto	l5100
  3275  003190                     u6100:
  3276  003190                     l5110:
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;main.c: 81: }
  3280                           ;main.c: 82: led('D');
  3281  003190  0E44               	movlw	68
  3282  003192  EC0D  F003         	call	_led
  3283  003196  0012               	return		;funcret
  3284  003198                     __end_of_D:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           intcon	equ	0xFF2
  3291                           postinc0	equ	0xFEE
  3292                           indf1	equ	0xFE7
  3293                           postdec1	equ	0xFE5
  3294                           fsr1h	equ	0xFE2
  3295                           fsr1l	equ	0xFE1
  3296                           indf2	equ	0xFDF
  3297                           fsr2h	equ	0xFDA
  3298                           fsr2l	equ	0xFD9
  3299                           status	equ	0xFD8
  3300                           
  3301 ;; *************** function _Bi *****************
  3302 ;; Defined at:
  3303 ;;		line 190 in file "main.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  i               2    6[BANK0 ] int 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3317 ;;      Params:         0       0       0       0       0       0       0
  3318 ;;      Locals:         0       2       0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0
  3320 ;;      Totals:         0       2       0       0       0       0       0
  3321 ;;Total ram usage:        2 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    8
  3324 ;; This function calls:
  3325 ;;		_led
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text15
  3332  003198                     __ptext15:
  3333                           	opt stack 0
  3334  003198                     _Bi:
  3335                           	opt stack 22
  3336                           
  3337                           ;main.c: 191: int i;
  3338                           ;main.c: 192: for(i=0;i<=1;i++) {
  3339                           
  3340                           ;incstack = 0
  3341  003198  0E00               	movlw	0
  3342  00319A  0100               	movlb	0	; () banked
  3343  00319C  6F87               	movwf	(Bi@i+1)& (0+255),b
  3344  00319E  0E00               	movlw	0
  3345  0031A0  6F86               	movwf	Bi@i& (0+255),b
  3346  0031A2                     l5226:
  3347                           
  3348                           ; BSR set to: 0
  3349  0031A2  BF87               	btfsc	(Bi@i+1)& (0+255),7,b
  3350  0031A4  D006               	goto	l132
  3351  0031A6  5187               	movf	(Bi@i+1)& (0+255),w,b
  3352  0031A8  E14D               	bnz	l5236
  3353  0031AA  0E02               	movlw	2
  3354  0031AC  5D86               	subwf	Bi@i& (0+255),w,b
  3355  0031AE  B0D8               	btfsc	status,0,c
  3356  0031B0  D049               	goto	u6280
  3357  0031B2                     l132:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;main.c: 193: temp[i] = surface_one[i];
  3361                           
  3362                           ; BSR set to: 0
  3363  0031B2  0E4E               	movlw	low _surface_one
  3364  0031B4  2586               	addwf	Bi@i& (0+255),w,b
  3365  0031B6  6ED9               	movwf	fsr2l,c
  3366  0031B8  0E00               	movlw	high _surface_one
  3367  0031BA  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3368  0031BC  6EDA               	movwf	fsr2h,c
  3369  0031BE  0E36               	movlw	low _temp
  3370  0031C0  2586               	addwf	Bi@i& (0+255),w,b
  3371  0031C2  6EE1               	movwf	fsr1l,c
  3372  0031C4  0E00               	movlw	high _temp
  3373  0031C6  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3374  0031C8  6EE2               	movwf	fsr1h,c
  3375  0031CA  CFDF FFE7          	movff	indf2,indf1
  3376                           
  3377                           ;main.c: 194: surface_one[i] = surface_two[i];
  3378  0031CE  0E4A               	movlw	low _surface_two
  3379  0031D0  2586               	addwf	Bi@i& (0+255),w,b
  3380  0031D2  6ED9               	movwf	fsr2l,c
  3381  0031D4  0E00               	movlw	high _surface_two
  3382  0031D6  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3383  0031D8  6EDA               	movwf	fsr2h,c
  3384  0031DA  0E4E               	movlw	low _surface_one
  3385  0031DC  2586               	addwf	Bi@i& (0+255),w,b
  3386  0031DE  6EE1               	movwf	fsr1l,c
  3387  0031E0  0E00               	movlw	high _surface_one
  3388  0031E2  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3389  0031E4  6EE2               	movwf	fsr1h,c
  3390  0031E6  CFDF FFE7          	movff	indf2,indf1
  3391                           
  3392                           ;main.c: 195: surface_two[i] = surface_six[i];
  3393  0031EA  0E3A               	movlw	low _surface_six
  3394  0031EC  2586               	addwf	Bi@i& (0+255),w,b
  3395  0031EE  6ED9               	movwf	fsr2l,c
  3396  0031F0  0E00               	movlw	high _surface_six
  3397  0031F2  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3398  0031F4  6EDA               	movwf	fsr2h,c
  3399  0031F6  0E4A               	movlw	low _surface_two
  3400  0031F8  2586               	addwf	Bi@i& (0+255),w,b
  3401  0031FA  6EE1               	movwf	fsr1l,c
  3402  0031FC  0E00               	movlw	high _surface_two
  3403  0031FE  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3404  003200  6EE2               	movwf	fsr1h,c
  3405  003202  CFDF FFE7          	movff	indf2,indf1
  3406                           
  3407                           ;main.c: 196: surface_six[i] = surface_four[i];
  3408  003206  0E42               	movlw	low _surface_four
  3409  003208  2586               	addwf	Bi@i& (0+255),w,b
  3410  00320A  6ED9               	movwf	fsr2l,c
  3411  00320C  0E00               	movlw	high _surface_four
  3412  00320E  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3413  003210  6EDA               	movwf	fsr2h,c
  3414  003212  0E3A               	movlw	low _surface_six
  3415  003214  2586               	addwf	Bi@i& (0+255),w,b
  3416  003216  6EE1               	movwf	fsr1l,c
  3417  003218  0E00               	movlw	high _surface_six
  3418  00321A  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3419  00321C  6EE2               	movwf	fsr1h,c
  3420  00321E  CFDF FFE7          	movff	indf2,indf1
  3421                           
  3422                           ;main.c: 197: surface_four[i] = temp[i];
  3423  003222  0E36               	movlw	low _temp
  3424  003224  2586               	addwf	Bi@i& (0+255),w,b
  3425  003226  6ED9               	movwf	fsr2l,c
  3426  003228  0E00               	movlw	high _temp
  3427  00322A  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3428  00322C  6EDA               	movwf	fsr2h,c
  3429  00322E  0E42               	movlw	low _surface_four
  3430  003230  2586               	addwf	Bi@i& (0+255),w,b
  3431  003232  6EE1               	movwf	fsr1l,c
  3432  003234  0E00               	movlw	high _surface_four
  3433  003236  2187               	addwfc	(Bi@i+1)& (0+255),w,b
  3434  003238  6EE2               	movwf	fsr1h,c
  3435  00323A  CFDF FFE7          	movff	indf2,indf1
  3436                           
  3437                           ; BSR set to: 0
  3438  00323E  4B86               	infsnz	Bi@i& (0+255),f,b
  3439  003240  2B87               	incf	(Bi@i+1)& (0+255),f,b
  3440  003242  D7AF               	goto	l5226
  3441  003244                     u6280:
  3442  003244                     l5236:
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;main.c: 198: }
  3446                           ;main.c: 199: led('B');
  3447  003244  0E42               	movlw	66
  3448  003246  EC0D  F003         	call	_led
  3449  00324A  0012               	return		;funcret
  3450  00324C                     __end_of_Bi:
  3451                           	opt stack 0
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           intcon	equ	0xFF2
  3457                           postinc0	equ	0xFEE
  3458                           indf1	equ	0xFE7
  3459                           postdec1	equ	0xFE5
  3460                           fsr1h	equ	0xFE2
  3461                           fsr1l	equ	0xFE1
  3462                           indf2	equ	0xFDF
  3463                           fsr2h	equ	0xFDA
  3464                           fsr2l	equ	0xFD9
  3465                           status	equ	0xFD8
  3466                           
  3467 ;; *************** function _B *****************
  3468 ;; Defined at:
  3469 ;;		line 177 in file "main.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  i               2    6[BANK0 ] int 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3483 ;;      Params:         0       0       0       0       0       0       0
  3484 ;;      Locals:         0       2       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0
  3486 ;;      Totals:         0       2       0       0       0       0       0
  3487 ;;Total ram usage:        2 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    8
  3490 ;; This function calls:
  3491 ;;		_led
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text16
  3498  00324C                     __ptext16:
  3499                           	opt stack 0
  3500  00324C                     _B:
  3501                           	opt stack 22
  3502                           
  3503                           ;main.c: 178: int i;
  3504                           ;main.c: 179: for(i=0;i<=1;i++) {
  3505                           
  3506                           ;incstack = 0
  3507  00324C  0E00               	movlw	0
  3508  00324E  0100               	movlb	0	; () banked
  3509  003250  6F87               	movwf	(B@i+1)& (0+255),b
  3510  003252  0E00               	movlw	0
  3511  003254  6F86               	movwf	B@i& (0+255),b
  3512  003256                     l5212:
  3513                           
  3514                           ; BSR set to: 0
  3515  003256  BF87               	btfsc	(B@i+1)& (0+255),7,b
  3516  003258  D006               	goto	l127
  3517  00325A  5187               	movf	(B@i+1)& (0+255),w,b
  3518  00325C  E14D               	bnz	l5222
  3519  00325E  0E02               	movlw	2
  3520  003260  5D86               	subwf	B@i& (0+255),w,b
  3521  003262  B0D8               	btfsc	status,0,c
  3522  003264  D049               	goto	u6260
  3523  003266                     l127:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;main.c: 180: temp[i] = surface_one[i];
  3527                           
  3528                           ; BSR set to: 0
  3529  003266  0E4E               	movlw	low _surface_one
  3530  003268  2586               	addwf	B@i& (0+255),w,b
  3531  00326A  6ED9               	movwf	fsr2l,c
  3532  00326C  0E00               	movlw	high _surface_one
  3533  00326E  2187               	addwfc	(B@i+1)& (0+255),w,b
  3534  003270  6EDA               	movwf	fsr2h,c
  3535  003272  0E36               	movlw	low _temp
  3536  003274  2586               	addwf	B@i& (0+255),w,b
  3537  003276  6EE1               	movwf	fsr1l,c
  3538  003278  0E00               	movlw	high _temp
  3539  00327A  2187               	addwfc	(B@i+1)& (0+255),w,b
  3540  00327C  6EE2               	movwf	fsr1h,c
  3541  00327E  CFDF FFE7          	movff	indf2,indf1
  3542                           
  3543                           ;main.c: 181: surface_one[i] = surface_four[i];
  3544  003282  0E42               	movlw	low _surface_four
  3545  003284  2586               	addwf	B@i& (0+255),w,b
  3546  003286  6ED9               	movwf	fsr2l,c
  3547  003288  0E00               	movlw	high _surface_four
  3548  00328A  2187               	addwfc	(B@i+1)& (0+255),w,b
  3549  00328C  6EDA               	movwf	fsr2h,c
  3550  00328E  0E4E               	movlw	low _surface_one
  3551  003290  2586               	addwf	B@i& (0+255),w,b
  3552  003292  6EE1               	movwf	fsr1l,c
  3553  003294  0E00               	movlw	high _surface_one
  3554  003296  2187               	addwfc	(B@i+1)& (0+255),w,b
  3555  003298  6EE2               	movwf	fsr1h,c
  3556  00329A  CFDF FFE7          	movff	indf2,indf1
  3557                           
  3558                           ;main.c: 182: surface_four[i] = surface_six[i];
  3559  00329E  0E3A               	movlw	low _surface_six
  3560  0032A0  2586               	addwf	B@i& (0+255),w,b
  3561  0032A2  6ED9               	movwf	fsr2l,c
  3562  0032A4  0E00               	movlw	high _surface_six
  3563  0032A6  2187               	addwfc	(B@i+1)& (0+255),w,b
  3564  0032A8  6EDA               	movwf	fsr2h,c
  3565  0032AA  0E42               	movlw	low _surface_four
  3566  0032AC  2586               	addwf	B@i& (0+255),w,b
  3567  0032AE  6EE1               	movwf	fsr1l,c
  3568  0032B0  0E00               	movlw	high _surface_four
  3569  0032B2  2187               	addwfc	(B@i+1)& (0+255),w,b
  3570  0032B4  6EE2               	movwf	fsr1h,c
  3571  0032B6  CFDF FFE7          	movff	indf2,indf1
  3572                           
  3573                           ;main.c: 183: surface_six[i] = surface_two[i];
  3574  0032BA  0E4A               	movlw	low _surface_two
  3575  0032BC  2586               	addwf	B@i& (0+255),w,b
  3576  0032BE  6ED9               	movwf	fsr2l,c
  3577  0032C0  0E00               	movlw	high _surface_two
  3578  0032C2  2187               	addwfc	(B@i+1)& (0+255),w,b
  3579  0032C4  6EDA               	movwf	fsr2h,c
  3580  0032C6  0E3A               	movlw	low _surface_six
  3581  0032C8  2586               	addwf	B@i& (0+255),w,b
  3582  0032CA  6EE1               	movwf	fsr1l,c
  3583  0032CC  0E00               	movlw	high _surface_six
  3584  0032CE  2187               	addwfc	(B@i+1)& (0+255),w,b
  3585  0032D0  6EE2               	movwf	fsr1h,c
  3586  0032D2  CFDF FFE7          	movff	indf2,indf1
  3587                           
  3588                           ;main.c: 184: surface_two[i] = temp[i];
  3589  0032D6  0E36               	movlw	low _temp
  3590  0032D8  2586               	addwf	B@i& (0+255),w,b
  3591  0032DA  6ED9               	movwf	fsr2l,c
  3592  0032DC  0E00               	movlw	high _temp
  3593  0032DE  2187               	addwfc	(B@i+1)& (0+255),w,b
  3594  0032E0  6EDA               	movwf	fsr2h,c
  3595  0032E2  0E4A               	movlw	low _surface_two
  3596  0032E4  2586               	addwf	B@i& (0+255),w,b
  3597  0032E6  6EE1               	movwf	fsr1l,c
  3598  0032E8  0E00               	movlw	high _surface_two
  3599  0032EA  2187               	addwfc	(B@i+1)& (0+255),w,b
  3600  0032EC  6EE2               	movwf	fsr1h,c
  3601  0032EE  CFDF FFE7          	movff	indf2,indf1
  3602                           
  3603                           ; BSR set to: 0
  3604  0032F2  4B86               	infsnz	B@i& (0+255),f,b
  3605  0032F4  2B87               	incf	(B@i+1)& (0+255),f,b
  3606  0032F6  D7AF               	goto	l5212
  3607  0032F8                     u6260:
  3608  0032F8                     l5222:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;main.c: 185: }
  3612                           ;main.c: 186: led('B');
  3613  0032F8  0E42               	movlw	66
  3614  0032FA  EC0D  F003         	call	_led
  3615  0032FE  0012               	return		;funcret
  3616  003300                     __end_of_B:
  3617                           	opt stack 0
  3618                           tblptru	equ	0xFF8
  3619                           tblptrh	equ	0xFF7
  3620                           tblptrl	equ	0xFF6
  3621                           tablat	equ	0xFF5
  3622                           intcon	equ	0xFF2
  3623                           postinc0	equ	0xFEE
  3624                           indf1	equ	0xFE7
  3625                           postdec1	equ	0xFE5
  3626                           fsr1h	equ	0xFE2
  3627                           fsr1l	equ	0xFE1
  3628                           indf2	equ	0xFDF
  3629                           fsr2h	equ	0xFDA
  3630                           fsr2l	equ	0xFD9
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _led *****************
  3634 ;; Defined at:
  3635 ;;		line 202 in file "main.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  rotate          1    wreg     unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  rotate          1    0[BANK0 ] unsigned char 
  3640 ;;  count           2    4[BANK0 ] int 
  3641 ;;  i               2    2[BANK0 ] int 
  3642 ;;  num             1    1[BANK0 ] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3652 ;;      Params:         0       0       0       0       0       0       0
  3653 ;;      Locals:         0       6       0       0       0       0       0
  3654 ;;      Temps:          4       0       0       0       0       0       0
  3655 ;;      Totals:         4       6       0       0       0       0       0
  3656 ;;Total ram usage:       10 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    7
  3659 ;; This function calls:
  3660 ;;		_spiRead
  3661 ;;		_spiWrite
  3662 ;; This function is called by:
  3663 ;;		_U
  3664 ;;		_Ui
  3665 ;;		_D
  3666 ;;		_Di
  3667 ;;		_L
  3668 ;;		_Li
  3669 ;;		_R
  3670 ;;		_Ri
  3671 ;;		_F
  3672 ;;		_Fi
  3673 ;;		_B
  3674 ;;		_Bi
  3675 ;;		_restore
  3676 ;;		_fixed
  3677 ;;		_main
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text17
  3682  00061A                     __ptext17:
  3683                           	opt stack 0
  3684  00061A                     _led:
  3685                           	opt stack 22
  3686                           
  3687                           ;incstack = 0
  3688                           ;led@rotate stored from wreg
  3689  00061A  0100               	movlb	0	; () banked
  3690  00061C  6F80               	movwf	led@rotate& (0+255),b
  3691                           
  3692                           ;main.c: 203: int i;
  3693                           ;main.c: 204: char num = '1';
  3694  00061E  0E31               	movlw	49
  3695  000620  0100               	movlb	0	; () banked
  3696  000622  6F81               	movwf	led@num& (0+255),b
  3697                           
  3698                           ;main.c: 205: int count = 0;
  3699  000624  0E00               	movlw	0
  3700  000626  6F85               	movwf	(led@count+1)& (0+255),b
  3701  000628  0E00               	movlw	0
  3702  00062A  6F84               	movwf	led@count& (0+255),b
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;main.c: 206: TRISAbits.RA0 = 0;
  3706  00062C  9092               	bcf	3986,0,c	;volatile
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;main.c: 207: TRISAbits.RA1 = 0;
  3710  00062E  9292               	bcf	3986,1,c	;volatile
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;main.c: 208: TRISAbits.RA2 = 0;
  3714  000630  9492               	bcf	3986,2,c	;volatile
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;main.c: 209: TRISAbits.RA3 = 0;
  3718  000632  9692               	bcf	3986,3,c	;volatile
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;main.c: 210: TRISAbits.RA4 = 0;
  3722  000634  9892               	bcf	3986,4,c	;volatile
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;main.c: 211: TRISAbits.RA5 = 0;
  3726  000636  9A92               	bcf	3986,5,c	;volatile
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;main.c: 212: RA0 = 1;
  3730  000638  8080               	bsf	3968,0,c	;volatile
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;main.c: 213: RA1 = 1;
  3734  00063A  8280               	bsf	3968,1,c	;volatile
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;main.c: 214: RA2 = 1;
  3738  00063C  8480               	bsf	3968,2,c	;volatile
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;main.c: 215: RA3 = 1;
  3742  00063E  8680               	bsf	3968,3,c	;volatile
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;main.c: 216: RA4 = 1;
  3746  000640  8880               	bsf	3968,4,c	;volatile
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;main.c: 217: RA5 = 1;
  3750  000642  8A80               	bsf	3968,5,c	;volatile
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;main.c: 218: if(rotate == 'U') {
  3754  000644  0E55               	movlw	85
  3755  000646  1980               	xorwf	led@rotate& (0+255),w,b
  3756  000648  A4D8               	btfss	status,2,c
  3757  00064A  D0E0               	goto	l137
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;main.c: 219: for(i=0;i<2;i++) {
  3761  00064C  0E00               	movlw	0
  3762  00064E  6F83               	movwf	(led@i+1)& (0+255),b
  3763  000650  0E00               	movlw	0
  3764  000652  6F82               	movwf	led@i& (0+255),b
  3765                           
  3766                           ; BSR set to: 0
  3767  000654  BF83               	btfsc	(led@i+1)& (0+255),7,b
  3768  000656  D008               	goto	l138
  3769  000658  5183               	movf	(led@i+1)& (0+255),w,b
  3770  00065A  E105               	bnz	u4930
  3771  00065C  0E02               	movlw	2
  3772  00065E  5D82               	subwf	led@i& (0+255),w,b
  3773  000660  B0D8               	btfsc	status,0,c
  3774  000662  0012               	return	
  3775  000664  D001               	goto	l138
  3776  000666                     u4930:
  3777                           
  3778                           ; BSR set to: 0
  3779  000666  0012               	return	
  3780  000668                     l138:
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;main.c: 220: for(count=0;count<6;count++) {
  3784                           
  3785                           ; BSR set to: 0
  3786  000668  0E00               	movlw	0
  3787  00066A  6F85               	movwf	(led@count+1)& (0+255),b
  3788  00066C  0E00               	movlw	0
  3789  00066E  6F84               	movwf	led@count& (0+255),b
  3790                           
  3791                           ; BSR set to: 0
  3792  000670  BF85               	btfsc	(led@count+1)& (0+255),7,b
  3793  000672  D008               	goto	l140
  3794  000674  5185               	movf	(led@count+1)& (0+255),w,b
  3795  000676  E105               	bnz	u4940
  3796  000678  0E06               	movlw	6
  3797  00067A  5D84               	subwf	led@count& (0+255),w,b
  3798  00067C  B0D8               	btfsc	status,0,c
  3799  00067E  D0B9               	goto	u5030
  3800  000680  D001               	goto	l140
  3801  000682                     u4940:
  3802                           
  3803                           ; BSR set to: 0
  3804  000682  D0B7               	goto	u5030
  3805  000684                     l140:
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;main.c: 221: if(surface_two[i] == num+count) {
  3809                           
  3810                           ; BSR set to: 0
  3811  000684  0E4A               	movlw	low _surface_two
  3812  000686  2582               	addwf	led@i& (0+255),w,b
  3813  000688  6ED9               	movwf	fsr2l,c
  3814  00068A  0E00               	movlw	high _surface_two
  3815  00068C  2183               	addwfc	(led@i+1)& (0+255),w,b
  3816  00068E  6EDA               	movwf	fsr2h,c
  3817  000690  50DF               	movf	indf2,w,c
  3818  000692  6E2E               	movwf	??_led& (0+255),c
  3819  000694  6A2F               	clrf	(??_led+1)& (0+255),c
  3820  000696  5181               	movf	led@num& (0+255),w,b
  3821  000698  2584               	addwf	led@count& (0+255),w,b
  3822  00069A  6E30               	movwf	(??_led+2)& (0+255),c
  3823  00069C  0E00               	movlw	0
  3824  00069E  2185               	addwfc	(led@count+1)& (0+255),w,b
  3825  0006A0  6E31               	movwf	(??_led+3)& (0+255),c
  3826  0006A2  502E               	movf	??_led,w,c
  3827  0006A4  1830               	xorwf	??_led+2,w,c
  3828  0006A6  E119               	bnz	l4378
  3829  0006A8  502F               	movf	??_led+1,w,c
  3830  0006AA  1831               	xorwf	??_led+3,w,c
  3831  0006AC  A4D8               	btfss	status,2,c
  3832  0006AE  D015               	goto	l142
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;main.c: 222: RA1 = 0;
  3836  0006B0  9280               	bcf	3968,1,c	;volatile
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;main.c: 223: if(i == 0) {
  3840  0006B2  5182               	movf	led@i& (0+255),w,b
  3841  0006B4  1183               	iorwf	(led@i+1)& (0+255),w,b
  3842  0006B6  A4D8               	btfss	status,2,c
  3843  0006B8  D007               	goto	l143
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;main.c: 224: spiWrite('a' + count);
  3847  0006BA  5184               	movf	led@count& (0+255),w,b
  3848  0006BC  0F61               	addlw	97
  3849  0006BE  EC57  F01D         	call	_spiWrite
  3850                           
  3851                           ;main.c: 225: re = spiRead();
  3852  0006C2  EC5B  F01D         	call	_spiRead	;wreg free
  3853  0006C6  D007               	goto	L2
  3854  0006C8                     l143:
  3855                           
  3856                           ;main.c: 227: spiWrite('m'+ count);
  3857  0006C8  0100               	movlb	0	; () banked
  3858  0006CA  5184               	movf	led@count& (0+255),w,b
  3859  0006CC  0F6D               	addlw	109
  3860  0006CE  EC57  F01D         	call	_spiWrite
  3861                           
  3862                           ;main.c: 228: re = spiRead();
  3863  0006D2  EC5B  F01D         	call	_spiRead	;wreg free
  3864  0006D6                     L2:
  3865  0006D6  6E52               	movwf	_re,c
  3866                           
  3867                           ;main.c: 229: }
  3868                           ;main.c: 230: RA1 = 1;
  3869  0006D8  8280               	bsf	3968,1,c	;volatile
  3870  0006DA                     l142:
  3871  0006DA                     l4378:
  3872                           
  3873                           ;main.c: 231: }
  3874                           ;main.c: 232: if(surface_three[i] == num+count) {
  3875  0006DA  0E46               	movlw	low _surface_three
  3876  0006DC  0100               	movlb	0	; () banked
  3877  0006DE  2582               	addwf	led@i& (0+255),w,b
  3878  0006E0  6ED9               	movwf	fsr2l,c
  3879  0006E2  0E00               	movlw	high _surface_three
  3880  0006E4  2183               	addwfc	(led@i+1)& (0+255),w,b
  3881  0006E6  6EDA               	movwf	fsr2h,c
  3882  0006E8  50DF               	movf	indf2,w,c
  3883  0006EA  6E2E               	movwf	??_led& (0+255),c
  3884  0006EC  6A2F               	clrf	(??_led+1)& (0+255),c
  3885  0006EE  5181               	movf	led@num& (0+255),w,b
  3886  0006F0  2584               	addwf	led@count& (0+255),w,b
  3887  0006F2  6E30               	movwf	(??_led+2)& (0+255),c
  3888  0006F4  0E00               	movlw	0
  3889  0006F6  2185               	addwfc	(led@count+1)& (0+255),w,b
  3890  0006F8  6E31               	movwf	(??_led+3)& (0+255),c
  3891  0006FA  502E               	movf	??_led,w,c
  3892  0006FC  1830               	xorwf	??_led+2,w,c
  3893  0006FE  E119               	bnz	l4394
  3894  000700  502F               	movf	??_led+1,w,c
  3895  000702  1831               	xorwf	??_led+3,w,c
  3896  000704  A4D8               	btfss	status,2,c
  3897  000706  D015               	goto	l145
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;main.c: 233: RA2 = 0;
  3901  000708  9480               	bcf	3968,2,c	;volatile
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;main.c: 234: if(i == 0) {
  3905  00070A  5182               	movf	led@i& (0+255),w,b
  3906  00070C  1183               	iorwf	(led@i+1)& (0+255),w,b
  3907  00070E  A4D8               	btfss	status,2,c
  3908  000710  D007               	goto	l146
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;main.c: 235: spiWrite('a' + count);
  3912  000712  5184               	movf	led@count& (0+255),w,b
  3913  000714  0F61               	addlw	97
  3914  000716  EC57  F01D         	call	_spiWrite
  3915                           
  3916                           ;main.c: 236: re = spiRead();
  3917  00071A  EC5B  F01D         	call	_spiRead	;wreg free
  3918  00071E  D007               	goto	L3
  3919  000720                     l146:
  3920                           
  3921                           ;main.c: 238: spiWrite('m'+ count);
  3922  000720  0100               	movlb	0	; () banked
  3923  000722  5184               	movf	led@count& (0+255),w,b
  3924  000724  0F6D               	addlw	109
  3925  000726  EC57  F01D         	call	_spiWrite
  3926                           
  3927                           ;main.c: 239: re = spiRead();
  3928  00072A  EC5B  F01D         	call	_spiRead	;wreg free
  3929  00072E                     L3:
  3930  00072E  6E52               	movwf	_re,c
  3931                           
  3932                           ;main.c: 240: }
  3933                           ;main.c: 241: RA2 = 1;
  3934  000730  8480               	bsf	3968,2,c	;volatile
  3935  000732                     l145:
  3936  000732                     l4394:
  3937                           
  3938                           ;main.c: 242: }
  3939                           ;main.c: 243: if(surface_four[i] == num+count) {
  3940  000732  0E42               	movlw	low _surface_four
  3941  000734  0100               	movlb	0	; () banked
  3942  000736  2582               	addwf	led@i& (0+255),w,b
  3943  000738  6ED9               	movwf	fsr2l,c
  3944  00073A  0E00               	movlw	high _surface_four
  3945  00073C  2183               	addwfc	(led@i+1)& (0+255),w,b
  3946  00073E  6EDA               	movwf	fsr2h,c
  3947  000740  50DF               	movf	indf2,w,c
  3948  000742  6E2E               	movwf	??_led& (0+255),c
  3949  000744  6A2F               	clrf	(??_led+1)& (0+255),c
  3950  000746  5181               	movf	led@num& (0+255),w,b
  3951  000748  2584               	addwf	led@count& (0+255),w,b
  3952  00074A  6E30               	movwf	(??_led+2)& (0+255),c
  3953  00074C  0E00               	movlw	0
  3954  00074E  2185               	addwfc	(led@count+1)& (0+255),w,b
  3955  000750  6E31               	movwf	(??_led+3)& (0+255),c
  3956  000752  502E               	movf	??_led,w,c
  3957  000754  1830               	xorwf	??_led+2,w,c
  3958  000756  E119               	bnz	l4410
  3959  000758  502F               	movf	??_led+1,w,c
  3960  00075A  1831               	xorwf	??_led+3,w,c
  3961  00075C  A4D8               	btfss	status,2,c
  3962  00075E  D015               	goto	l148
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;main.c: 244: RA3 = 0;
  3966  000760  9680               	bcf	3968,3,c	;volatile
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;main.c: 245: if(i == 0) {
  3970  000762  5182               	movf	led@i& (0+255),w,b
  3971  000764  1183               	iorwf	(led@i+1)& (0+255),w,b
  3972  000766  A4D8               	btfss	status,2,c
  3973  000768  D007               	goto	l149
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;main.c: 246: spiWrite('a' + count);
  3977  00076A  5184               	movf	led@count& (0+255),w,b
  3978  00076C  0F61               	addlw	97
  3979  00076E  EC57  F01D         	call	_spiWrite
  3980                           
  3981                           ;main.c: 247: re = spiRead();
  3982  000772  EC5B  F01D         	call	_spiRead	;wreg free
  3983  000776  D007               	goto	L4
  3984  000778                     l149:
  3985                           
  3986                           ;main.c: 249: spiWrite('m'+ count);
  3987  000778  0100               	movlb	0	; () banked
  3988  00077A  5184               	movf	led@count& (0+255),w,b
  3989  00077C  0F6D               	addlw	109
  3990  00077E  EC57  F01D         	call	_spiWrite
  3991                           
  3992                           ;main.c: 250: re = spiRead();
  3993  000782  EC5B  F01D         	call	_spiRead	;wreg free
  3994  000786                     L4:
  3995  000786  6E52               	movwf	_re,c
  3996                           
  3997                           ;main.c: 251: }
  3998                           ;main.c: 252: RA3 = 1;
  3999  000788  8680               	bsf	3968,3,c	;volatile
  4000  00078A                     l148:
  4001  00078A                     l4410:
  4002                           
  4003                           ;main.c: 253: }
  4004                           ;main.c: 254: if(surface_five[i] == num+count) {
  4005  00078A  0E3E               	movlw	low _surface_five
  4006  00078C  0100               	movlb	0	; () banked
  4007  00078E  2582               	addwf	led@i& (0+255),w,b
  4008  000790  6ED9               	movwf	fsr2l,c
  4009  000792  0E00               	movlw	high _surface_five
  4010  000794  2183               	addwfc	(led@i+1)& (0+255),w,b
  4011  000796  6EDA               	movwf	fsr2h,c
  4012  000798  50DF               	movf	indf2,w,c
  4013  00079A  6E2E               	movwf	??_led& (0+255),c
  4014  00079C  6A2F               	clrf	(??_led+1)& (0+255),c
  4015  00079E  5181               	movf	led@num& (0+255),w,b
  4016  0007A0  2584               	addwf	led@count& (0+255),w,b
  4017  0007A2  6E30               	movwf	(??_led+2)& (0+255),c
  4018  0007A4  0E00               	movlw	0
  4019  0007A6  2185               	addwfc	(led@count+1)& (0+255),w,b
  4020  0007A8  6E31               	movwf	(??_led+3)& (0+255),c
  4021  0007AA  502E               	movf	??_led,w,c
  4022  0007AC  1830               	xorwf	??_led+2,w,c
  4023  0007AE  E119               	bnz	l4426
  4024  0007B0  502F               	movf	??_led+1,w,c
  4025  0007B2  1831               	xorwf	??_led+3,w,c
  4026  0007B4  A4D8               	btfss	status,2,c
  4027  0007B6  D015               	goto	l151
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;main.c: 255: RA4 = 0;
  4031  0007B8  9880               	bcf	3968,4,c	;volatile
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;main.c: 256: if(i == 0) {
  4035  0007BA  5182               	movf	led@i& (0+255),w,b
  4036  0007BC  1183               	iorwf	(led@i+1)& (0+255),w,b
  4037  0007BE  A4D8               	btfss	status,2,c
  4038  0007C0  D007               	goto	l152
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;main.c: 257: spiWrite('a' + count);
  4042  0007C2  5184               	movf	led@count& (0+255),w,b
  4043  0007C4  0F61               	addlw	97
  4044  0007C6  EC57  F01D         	call	_spiWrite
  4045                           
  4046                           ;main.c: 258: re = spiRead();
  4047  0007CA  EC5B  F01D         	call	_spiRead	;wreg free
  4048  0007CE  D007               	goto	L5
  4049  0007D0                     l152:
  4050                           
  4051                           ;main.c: 260: spiWrite('m'+ count);
  4052  0007D0  0100               	movlb	0	; () banked
  4053  0007D2  5184               	movf	led@count& (0+255),w,b
  4054  0007D4  0F6D               	addlw	109
  4055  0007D6  EC57  F01D         	call	_spiWrite
  4056                           
  4057                           ;main.c: 261: re = spiRead();
  4058  0007DA  EC5B  F01D         	call	_spiRead	;wreg free
  4059  0007DE                     L5:
  4060  0007DE  6E52               	movwf	_re,c
  4061                           
  4062                           ;main.c: 262: }
  4063                           ;main.c: 263: RA4 = 1;
  4064  0007E0  8880               	bsf	3968,4,c	;volatile
  4065  0007E2                     l151:
  4066  0007E2                     l4426:
  4067  0007E2  0100               	movlb	0	; () banked
  4068  0007E4  4B84               	infsnz	led@count& (0+255),f,b
  4069  0007E6  2B85               	incf	(led@count+1)& (0+255),f,b
  4070                           
  4071                           ; BSR set to: 0
  4072  0007E8  BF85               	btfsc	(led@count+1)& (0+255),7,b
  4073  0007EA  D74C               	goto	l140
  4074  0007EC  5185               	movf	(led@count+1)& (0+255),w,b
  4075  0007EE  E101               	bnz	l4430
  4076  0007F0  D743               	goto	L6
  4077  0007F2                     u5030:
  4078  0007F2                     l4430:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;main.c: 264: }
  4082                           ;main.c: 265: }
  4083                           ;main.c: 266: _delay((unsigned long)((5)*(1000000/4000.0)));
  4084  0007F2  0EFA               	movlw	250
  4085  0007F4                     u6597:
  4086  0007F4  D000               	nop2	
  4087  0007F6  2EE8               	decfsz	wreg,f,c
  4088  0007F8  D7FD               	bra	u6597
  4089  0007FA  0100               	movlb	0	; () banked
  4090  0007FC  4B82               	infsnz	led@i& (0+255),f,b
  4091  0007FE  2B83               	incf	(led@i+1)& (0+255),f,b
  4092  000800  BF83               	btfsc	(led@i+1)& (0+255),7,b
  4093  000802  D732               	goto	l138
  4094  000804  5183               	movf	(led@i+1)& (0+255),w,b
  4095  000806  E101               	bnz	u5040
  4096  000808  D729               	goto	L7
  4097  00080A                     u5040:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;main.c: 267: }
  4101                           ;main.c: 268: }
  4102  00080A  0012               	return	
  4103  00080C                     l137:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;main.c: 269: else if(rotate == 'D') {
  4107                           
  4108                           ; BSR set to: 0
  4109  00080C  0E44               	movlw	68
  4110  00080E  1980               	xorwf	led@rotate& (0+255),w,b
  4111  000810  A4D8               	btfss	status,2,c
  4112  000812  D0E0               	goto	l155
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;main.c: 270: for(i=2;i<=3;i++) {
  4116  000814  0E00               	movlw	0
  4117  000816  6F83               	movwf	(led@i+1)& (0+255),b
  4118  000818  0E02               	movlw	2
  4119  00081A  6F82               	movwf	led@i& (0+255),b
  4120                           
  4121                           ; BSR set to: 0
  4122  00081C  BF83               	btfsc	(led@i+1)& (0+255),7,b
  4123  00081E  D008               	goto	l156
  4124  000820  5183               	movf	(led@i+1)& (0+255),w,b
  4125  000822  E105               	bnz	u5060
  4126  000824  0E04               	movlw	4
  4127  000826  5D82               	subwf	led@i& (0+255),w,b
  4128  000828  B0D8               	btfsc	status,0,c
  4129  00082A  0012               	return	
  4130  00082C  D001               	goto	l156
  4131  00082E                     u5060:
  4132                           
  4133                           ; BSR set to: 0
  4134  00082E  0012               	return	
  4135  000830                     l156:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;main.c: 271: for(count=0;count<6;count++) {
  4139                           
  4140                           ; BSR set to: 0
  4141  000830  0E00               	movlw	0
  4142  000832  6F85               	movwf	(led@count+1)& (0+255),b
  4143  000834  0E00               	movlw	0
  4144  000836  6F84               	movwf	led@count& (0+255),b
  4145                           
  4146                           ; BSR set to: 0
  4147  000838  BF85               	btfsc	(led@count+1)& (0+255),7,b
  4148  00083A  D008               	goto	l158
  4149  00083C  5185               	movf	(led@count+1)& (0+255),w,b
  4150  00083E  E105               	bnz	u5070
  4151  000840  0E06               	movlw	6
  4152  000842  5D84               	subwf	led@count& (0+255),w,b
  4153  000844  B0D8               	btfsc	status,0,c
  4154  000846  D0B9               	goto	u5160
  4155  000848  D001               	goto	l158
  4156  00084A                     u5070:
  4157                           
  4158                           ; BSR set to: 0
  4159  00084A  D0B7               	goto	u5160
  4160  00084C                     l158:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 272: if(surface_two[i] == num+count) {
  4164                           
  4165                           ; BSR set to: 0
  4166  00084C  0E4A               	movlw	low _surface_two
  4167  00084E  2582               	addwf	led@i& (0+255),w,b
  4168  000850  6ED9               	movwf	fsr2l,c
  4169  000852  0E00               	movlw	high _surface_two
  4170  000854  2183               	addwfc	(led@i+1)& (0+255),w,b
  4171  000856  6EDA               	movwf	fsr2h,c
  4172  000858  50DF               	movf	indf2,w,c
  4173  00085A  6E2E               	movwf	??_led& (0+255),c
  4174  00085C  6A2F               	clrf	(??_led+1)& (0+255),c
  4175  00085E  5181               	movf	led@num& (0+255),w,b
  4176  000860  2584               	addwf	led@count& (0+255),w,b
  4177  000862  6E30               	movwf	(??_led+2)& (0+255),c
  4178  000864  0E00               	movlw	0
  4179  000866  2185               	addwfc	(led@count+1)& (0+255),w,b
  4180  000868  6E31               	movwf	(??_led+3)& (0+255),c
  4181  00086A  502E               	movf	??_led,w,c
  4182  00086C  1830               	xorwf	??_led+2,w,c
  4183  00086E  E119               	bnz	l4464
  4184  000870  502F               	movf	??_led+1,w,c
  4185  000872  1831               	xorwf	??_led+3,w,c
  4186  000874  A4D8               	btfss	status,2,c
  4187  000876  D015               	goto	l160
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;main.c: 273: RA1 = 0;
  4191  000878  9280               	bcf	3968,1,c	;volatile
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;main.c: 274: if(i == 0) {
  4195  00087A  5182               	movf	led@i& (0+255),w,b
  4196  00087C  1183               	iorwf	(led@i+1)& (0+255),w,b
  4197  00087E  A4D8               	btfss	status,2,c
  4198  000880  D007               	goto	l161
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;main.c: 275: spiWrite('g' + count);
  4202  000882  5184               	movf	led@count& (0+255),w,b
  4203  000884  0F67               	addlw	103
  4204  000886  EC57  F01D         	call	_spiWrite
  4205                           
  4206                           ;main.c: 276: re = spiRead();
  4207  00088A  EC5B  F01D         	call	_spiRead	;wreg free
  4208  00088E  D007               	goto	L8
  4209  000890                     l161:
  4210                           
  4211                           ;main.c: 278: spiWrite('s'+ count);
  4212  000890  0100               	movlb	0	; () banked
  4213  000892  5184               	movf	led@count& (0+255),w,b
  4214  000894  0F73               	addlw	115
  4215  000896  EC57  F01D         	call	_spiWrite
  4216                           
  4217                           ;main.c: 279: re = spiRead();
  4218  00089A  EC5B  F01D         	call	_spiRead	;wreg free
  4219  00089E                     L8:
  4220  00089E  6E52               	movwf	_re,c
  4221                           
  4222                           ;main.c: 280: }
  4223                           ;main.c: 281: RA1 = 1;
  4224  0008A0  8280               	bsf	3968,1,c	;volatile
  4225  0008A2                     l160:
  4226  0008A2                     l4464:
  4227                           
  4228                           ;main.c: 282: }
  4229                           ;main.c: 283: if(surface_three[i] == num+count) {
  4230  0008A2  0E46               	movlw	low _surface_three
  4231  0008A4  0100               	movlb	0	; () banked
  4232  0008A6  2582               	addwf	led@i& (0+255),w,b
  4233  0008A8  6ED9               	movwf	fsr2l,c
  4234  0008AA  0E00               	movlw	high _surface_three
  4235  0008AC  2183               	addwfc	(led@i+1)& (0+255),w,b
  4236  0008AE  6EDA               	movwf	fsr2h,c
  4237  0008B0  50DF               	movf	indf2,w,c
  4238  0008B2  6E2E               	movwf	??_led& (0+255),c
  4239  0008B4  6A2F               	clrf	(??_led+1)& (0+255),c
  4240  0008B6  5181               	movf	led@num& (0+255),w,b
  4241  0008B8  2584               	addwf	led@count& (0+255),w,b
  4242  0008BA  6E30               	movwf	(??_led+2)& (0+255),c
  4243  0008BC  0E00               	movlw	0
  4244  0008BE  2185               	addwfc	(led@count+1)& (0+255),w,b
  4245  0008C0  6E31               	movwf	(??_led+3)& (0+255),c
  4246  0008C2  502E               	movf	??_led,w,c
  4247  0008C4  1830               	xorwf	??_led+2,w,c
  4248  0008C6  E119               	bnz	l4480
  4249  0008C8  502F               	movf	??_led+1,w,c
  4250  0008CA  1831               	xorwf	??_led+3,w,c
  4251  0008CC  A4D8               	btfss	status,2,c
  4252  0008CE  D015               	goto	l163
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;main.c: 284: RA2 = 0;
  4256  0008D0  9480               	bcf	3968,2,c	;volatile
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;main.c: 285: if(i == 0) {
  4260  0008D2  5182               	movf	led@i& (0+255),w,b
  4261  0008D4  1183               	iorwf	(led@i+1)& (0+255),w,b
  4262  0008D6  A4D8               	btfss	status,2,c
  4263  0008D8  D007               	goto	l164
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;main.c: 286: spiWrite('g' + count);
  4267  0008DA  5184               	movf	led@count& (0+255),w,b
  4268  0008DC  0F67               	addlw	103
  4269  0008DE  EC57  F01D         	call	_spiWrite
  4270                           
  4271                           ;main.c: 287: re = spiRead();
  4272  0008E2  EC5B  F01D         	call	_spiRead	;wreg free
  4273  0008E6  D007               	goto	L9
  4274  0008E8                     l164:
  4275                           
  4276                           ;main.c: 289: spiWrite('s'+ count);
  4277  0008E8  0100               	movlb	0	; () banked
  4278  0008EA  5184               	movf	led@count& (0+255),w,b
  4279  0008EC  0F73               	addlw	115
  4280  0008EE  EC57  F01D         	call	_spiWrite
  4281                           
  4282                           ;main.c: 290: re = spiRead();
  4283  0008F2  EC5B  F01D         	call	_spiRead	;wreg free
  4284  0008F6                     L9:
  4285  0008F6  6E52               	movwf	_re,c
  4286                           
  4287                           ;main.c: 291: }
  4288                           ;main.c: 292: RA2 = 1;
  4289  0008F8  8480               	bsf	3968,2,c	;volatile
  4290  0008FA                     l163:
  4291  0008FA                     l4480:
  4292                           
  4293                           ;main.c: 293: }
  4294                           ;main.c: 294: if(surface_four[i] == num+count) {
  4295  0008FA  0E42               	movlw	low _surface_four
  4296  0008FC  0100               	movlb	0	; () banked
  4297  0008FE  2582               	addwf	led@i& (0+255),w,b
  4298  000900  6ED9               	movwf	fsr2l,c
  4299  000902  0E00               	movlw	high _surface_four
  4300  000904  2183               	addwfc	(led@i+1)& (0+255),w,b
  4301  000906  6EDA               	movwf	fsr2h,c
  4302  000908  50DF               	movf	indf2,w,c
  4303  00090A  6E2E               	movwf	??_led& (0+255),c
  4304  00090C  6A2F               	clrf	(??_led+1)& (0+255),c
  4305  00090E  5181               	movf	led@num& (0+255),w,b
  4306  000910  2584               	addwf	led@count& (0+255),w,b
  4307  000912  6E30               	movwf	(??_led+2)& (0+255),c
  4308  000914  0E00               	movlw	0
  4309  000916  2185               	addwfc	(led@count+1)& (0+255),w,b
  4310  000918  6E31               	movwf	(??_led+3)& (0+255),c
  4311  00091A  502E               	movf	??_led,w,c
  4312  00091C  1830               	xorwf	??_led+2,w,c
  4313  00091E  E119               	bnz	l4496
  4314  000920  502F               	movf	??_led+1,w,c
  4315  000922  1831               	xorwf	??_led+3,w,c
  4316  000924  A4D8               	btfss	status,2,c
  4317  000926  D015               	goto	l166
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;main.c: 295: RA3 = 0;
  4321  000928  9680               	bcf	3968,3,c	;volatile
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;main.c: 296: if(i == 0) {
  4325  00092A  5182               	movf	led@i& (0+255),w,b
  4326  00092C  1183               	iorwf	(led@i+1)& (0+255),w,b
  4327  00092E  A4D8               	btfss	status,2,c
  4328  000930  D007               	goto	l167
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;main.c: 297: spiWrite('g' + count);
  4332  000932  5184               	movf	led@count& (0+255),w,b
  4333  000934  0F67               	addlw	103
  4334  000936  EC57  F01D         	call	_spiWrite
  4335                           
  4336                           ;main.c: 298: re = spiRead();
  4337  00093A  EC5B  F01D         	call	_spiRead	;wreg free
  4338  00093E  D007               	goto	L10
  4339  000940                     l167:
  4340                           
  4341                           ;main.c: 300: spiWrite('s'+ count);
  4342  000940  0100               	movlb	0	; () banked
  4343  000942  5184               	movf	led@count& (0+255),w,b
  4344  000944  0F73               	addlw	115
  4345  000946  EC57  F01D         	call	_spiWrite
  4346                           
  4347                           ;main.c: 301: re = spiRead();
  4348  00094A  EC5B  F01D         	call	_spiRead	;wreg free
  4349  00094E                     L10:
  4350  00094E  6E52               	movwf	_re,c
  4351                           
  4352                           ;main.c: 302: }
  4353                           ;main.c: 303: RA3 = 1;
  4354  000950  8680               	bsf	3968,3,c	;volatile
  4355  000952                     l166:
  4356  000952                     l4496:
  4357                           
  4358                           ;main.c: 304: }
  4359                           ;main.c: 305: if(surface_five[i] == num+count) {
  4360  000952  0E3E               	movlw	low _surface_five
  4361  000954  0100               	movlb	0	; () banked
  4362  000956  2582               	addwf	led@i& (0+255),w,b
  4363  000958  6ED9               	movwf	fsr2l,c
  4364  00095A  0E00               	movlw	high _surface_five
  4365  00095C  2183               	addwfc	(led@i+1)& (0+255),w,b
  4366  00095E  6EDA               	movwf	fsr2h,c
  4367  000960  50DF               	movf	indf2,w,c
  4368  000962  6E2E               	movwf	??_led& (0+255),c
  4369  000964  6A2F               	clrf	(??_led+1)& (0+255),c
  4370  000966  5181               	movf	led@num& (0+255),w,b
  4371  000968  2584               	addwf	led@count& (0+255),w,b
  4372  00096A  6E30               	movwf	(??_led+2)& (0+255),c
  4373  00096C  0E00               	movlw	0
  4374  00096E  2185               	addwfc	(led@count+1)& (0+255),w,b
  4375  000970  6E31               	movwf	(??_led+3)& (0+255),c
  4376  000972  502E               	movf	??_led,w,c
  4377  000974  1830               	xorwf	??_led+2,w,c
  4378  000976  E119               	bnz	l4512
  4379  000978  502F               	movf	??_led+1,w,c
  4380  00097A  1831               	xorwf	??_led+3,w,c
  4381  00097C  A4D8               	btfss	status,2,c
  4382  00097E  D015               	goto	l169
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;main.c: 306: RA4 = 0;
  4386  000980  9880               	bcf	3968,4,c	;volatile
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;main.c: 307: if(i == 0) {
  4390  000982  5182               	movf	led@i& (0+255),w,b
  4391  000984  1183               	iorwf	(led@i+1)& (0+255),w,b
  4392  000986  A4D8               	btfss	status,2,c
  4393  000988  D007               	goto	l170
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;main.c: 308: spiWrite('g' + count);
  4397  00098A  5184               	movf	led@count& (0+255),w,b
  4398  00098C  0F67               	addlw	103
  4399  00098E  EC57  F01D         	call	_spiWrite
  4400                           
  4401                           ;main.c: 309: re = spiRead();
  4402  000992  EC5B  F01D         	call	_spiRead	;wreg free
  4403  000996  D007               	goto	L11
  4404  000998                     l170:
  4405                           
  4406                           ;main.c: 311: spiWrite('s'+ count);
  4407  000998  0100               	movlb	0	; () banked
  4408  00099A  5184               	movf	led@count& (0+255),w,b
  4409  00099C  0F73               	addlw	115
  4410  00099E  EC57  F01D         	call	_spiWrite
  4411                           
  4412                           ;main.c: 312: re = spiRead();
  4413  0009A2  EC5B  F01D         	call	_spiRead	;wreg free
  4414  0009A6                     L11:
  4415  0009A6  6E52               	movwf	_re,c
  4416                           
  4417                           ;main.c: 313: }
  4418                           ;main.c: 314: RA4 = 1;
  4419  0009A8  8880               	bsf	3968,4,c	;volatile
  4420  0009AA                     l169:
  4421  0009AA                     l4512:
  4422  0009AA  0100               	movlb	0	; () banked
  4423  0009AC  4B84               	infsnz	led@count& (0+255),f,b
  4424  0009AE  2B85               	incf	(led@count+1)& (0+255),f,b
  4425                           
  4426                           ; BSR set to: 0
  4427  0009B0  BF85               	btfsc	(led@count+1)& (0+255),7,b
  4428  0009B2  D74C               	goto	l158
  4429  0009B4  5185               	movf	(led@count+1)& (0+255),w,b
  4430  0009B6  E101               	bnz	l4516
  4431  0009B8  D743               	goto	L12
  4432  0009BA                     u5160:
  4433  0009BA                     l4516:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;main.c: 315: }
  4437                           ;main.c: 316: }
  4438                           ;main.c: 317: _delay((unsigned long)((5)*(1000000/4000.0)));
  4439  0009BA  0EFA               	movlw	250
  4440  0009BC                     u6607:
  4441  0009BC  D000               	nop2	
  4442  0009BE  2EE8               	decfsz	wreg,f,c
  4443  0009C0  D7FD               	bra	u6607
  4444  0009C2  0100               	movlb	0	; () banked
  4445  0009C4  4B82               	infsnz	led@i& (0+255),f,b
  4446  0009C6  2B83               	incf	(led@i+1)& (0+255),f,b
  4447  0009C8  BF83               	btfsc	(led@i+1)& (0+255),7,b
  4448  0009CA  D732               	goto	l156
  4449  0009CC  5183               	movf	(led@i+1)& (0+255),w,b
  4450  0009CE  E101               	bnz	u5170
  4451  0009D0  D729               	goto	L13
  4452  0009D2                     u5170:
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;main.c: 318: }
  4456                           ;main.c: 319: }
  4457  0009D2  0012               	return	
  4458  0009D4                     l155:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;main.c: 320: else if(rotate == 'L') {
  4462                           
  4463                           ; BSR set to: 0
  4464  0009D4  0E4C               	movlw	76
  4465  0009D6  1980               	xorwf	led@rotate& (0+255),w,b
  4466  0009D8  A4D8               	btfss	status,2,c
  4467  0009DA  D0E2               	goto	l173
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;main.c: 321: for(i=0;i<=3;i+=2) {
  4471  0009DC  0E00               	movlw	0
  4472  0009DE  6F83               	movwf	(led@i+1)& (0+255),b
  4473  0009E0  0E00               	movlw	0
  4474  0009E2  6F82               	movwf	led@i& (0+255),b
  4475                           
  4476                           ; BSR set to: 0
  4477  0009E4  BF83               	btfsc	(led@i+1)& (0+255),7,b
  4478  0009E6  D008               	goto	l174
  4479  0009E8  5183               	movf	(led@i+1)& (0+255),w,b
  4480  0009EA  E105               	bnz	u5190
  4481  0009EC  0E04               	movlw	4
  4482  0009EE  5D82               	subwf	led@i& (0+255),w,b
  4483  0009F0  B0D8               	btfsc	status,0,c
  4484  0009F2  0012               	return	
  4485  0009F4  D001               	goto	l174
  4486  0009F6                     u5190:
  4487                           
  4488                           ; BSR set to: 0
  4489  0009F6  0012               	return	
  4490  0009F8                     l174:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;main.c: 322: for(count=0;count<6;count++) {
  4494                           
  4495                           ; BSR set to: 0
  4496  0009F8  0E00               	movlw	0
  4497  0009FA  6F85               	movwf	(led@count+1)& (0+255),b
  4498  0009FC  0E00               	movlw	0
  4499  0009FE  6F84               	movwf	led@count& (0+255),b
  4500                           
  4501                           ; BSR set to: 0
  4502  000A00  BF85               	btfsc	(led@count+1)& (0+255),7,b
  4503  000A02  D008               	goto	l176
  4504  000A04  5185               	movf	(led@count+1)& (0+255),w,b
  4505  000A06  E105               	bnz	u5200
  4506  000A08  0E06               	movlw	6
  4507  000A0A  5D84               	subwf	led@count& (0+255),w,b
  4508  000A0C  B0D8               	btfsc	status,0,c
  4509  000A0E  D0B9               	goto	u5290
  4510  000A10  D001               	goto	l176
  4511  000A12                     u5200:
  4512                           
  4513                           ; BSR set to: 0
  4514  000A12  D0B7               	goto	u5290
  4515  000A14                     l176:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;main.c: 323: if(surface_one[i] == num+count) {
  4519                           
  4520                           ; BSR set to: 0
  4521  000A14  0E4E               	movlw	low _surface_one
  4522  000A16  2582               	addwf	led@i& (0+255),w,b
  4523  000A18  6ED9               	movwf	fsr2l,c
  4524  000A1A  0E00               	movlw	high _surface_one
  4525  000A1C  2183               	addwfc	(led@i+1)& (0+255),w,b
  4526  000A1E  6EDA               	movwf	fsr2h,c
  4527  000A20  50DF               	movf	indf2,w,c
  4528  000A22  6E2E               	movwf	??_led& (0+255),c
  4529  000A24  6A2F               	clrf	(??_led+1)& (0+255),c
  4530  000A26  5181               	movf	led@num& (0+255),w,b
  4531  000A28  2584               	addwf	led@count& (0+255),w,b
  4532  000A2A  6E30               	movwf	(??_led+2)& (0+255),c
  4533  000A2C  0E00               	movlw	0
  4534  000A2E  2185               	addwfc	(led@count+1)& (0+255),w,b
  4535  000A30  6E31               	movwf	(??_led+3)& (0+255),c
  4536  000A32  502E               	movf	??_led,w,c
  4537  000A34  1830               	xorwf	??_led+2,w,c
  4538  000A36  E119               	bnz	l4550
  4539  000A38  502F               	movf	??_led+1,w,c
  4540  000A3A  1831               	xorwf	??_led+3,w,c
  4541  000A3C  A4D8               	btfss	status,2,c
  4542  000A3E  D015               	goto	l178
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;main.c: 324: RA0 = 0;
  4546  000A40  9080               	bcf	3968,0,c	;volatile
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;main.c: 325: if(i == 0) {
  4550  000A42  5182               	movf	led@i& (0+255),w,b
  4551  000A44  1183               	iorwf	(led@i+1)& (0+255),w,b
  4552  000A46  A4D8               	btfss	status,2,c
  4553  000A48  D007               	goto	l179
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;main.c: 326: spiWrite('a' + count);
  4557  000A4A  5184               	movf	led@count& (0+255),w,b
  4558  000A4C  0F61               	addlw	97
  4559  000A4E  EC57  F01D         	call	_spiWrite
  4560                           
  4561                           ;main.c: 327: re = spiRead();
  4562  000A52  EC5B  F01D         	call	_spiRead	;wreg free
  4563  000A56  D007               	goto	L14
  4564  000A58                     l179:
  4565                           
  4566                           ;main.c: 329: spiWrite('g'+ count);
  4567  000A58  0100               	movlb	0	; () banked
  4568  000A5A  5184               	movf	led@count& (0+255),w,b
  4569  000A5C  0F67               	addlw	103
  4570  000A5E  EC57  F01D         	call	_spiWrite
  4571                           
  4572                           ;main.c: 330: re = spiRead();
  4573  000A62  EC5B  F01D         	call	_spiRead	;wreg free
  4574  000A66                     L14:
  4575  000A66  6E52               	movwf	_re,c
  4576                           
  4577                           ;main.c: 331: }
  4578                           ;main.c: 332: RA0 = 1;
  4579  000A68  8080               	bsf	3968,0,c	;volatile
  4580  000A6A                     l178:
  4581  000A6A                     l4550:
  4582                           
  4583                           ;main.c: 333: }
  4584                           ;main.c: 334: if(surface_two[i] == num+count) {
  4585  000A6A  0E4A               	movlw	low _surface_two
  4586  000A6C  0100               	movlb	0	; () banked
  4587  000A6E  2582               	addwf	led@i& (0+255),w,b
  4588  000A70  6ED9               	movwf	fsr2l,c
  4589  000A72  0E00               	movlw	high _surface_two
  4590  000A74  2183               	addwfc	(led@i+1)& (0+255),w,b
  4591  000A76  6EDA               	movwf	fsr2h,c
  4592  000A78  50DF               	movf	indf2,w,c
  4593  000A7A  6E2E               	movwf	??_led& (0+255),c
  4594  000A7C  6A2F               	clrf	(??_led+1)& (0+255),c
  4595  000A7E  5181               	movf	led@num& (0+255),w,b
  4596  000A80  2584               	addwf	led@count& (0+255),w,b
  4597  000A82  6E30               	movwf	(??_led+2)& (0+255),c
  4598  000A84  0E00               	movlw	0
  4599  000A86  2185               	addwfc	(led@count+1)& (0+255),w,b
  4600  000A88  6E31               	movwf	(??_led+3)& (0+255),c
  4601  000A8A  502E               	movf	??_led,w,c
  4602  000A8C  1830               	xorwf	??_led+2,w,c
  4603  000A8E  E119               	bnz	l4566
  4604  000A90  502F               	movf	??_led+1,w,c
  4605  000A92  1831               	xorwf	??_led+3,w,c
  4606  000A94  A4D8               	btfss	status,2,c
  4607  000A96  D015               	goto	l181
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;main.c: 335: RA1 = 0;
  4611  000A98  9280               	bcf	3968,1,c	;volatile
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;main.c: 336: if(i == 0) {
  4615  000A9A  5182               	movf	led@i& (0+255),w,b
  4616  000A9C  1183               	iorwf	(led@i+1)& (0+255),w,b
  4617  000A9E  A4D8               	btfss	status,2,c
  4618  000AA0  D007               	goto	l182
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;main.c: 337: spiWrite('a' + count);
  4622  000AA2  5184               	movf	led@count& (0+255),w,b
  4623  000AA4  0F61               	addlw	97
  4624  000AA6  EC57  F01D         	call	_spiWrite
  4625                           
  4626                           ;main.c: 338: re = spiRead();
  4627  000AAA  EC5B  F01D         	call	_spiRead	;wreg free
  4628  000AAE  D007               	goto	L15
  4629  000AB0                     l182:
  4630                           
  4631                           ;main.c: 340: spiWrite('g'+ count);
  4632  000AB0  0100               	movlb	0	; () banked
  4633  000AB2  5184               	movf	led@count& (0+255),w,b
  4634  000AB4  0F67               	addlw	103
  4635  000AB6  EC57  F01D         	call	_spiWrite
  4636                           
  4637                           ;main.c: 341: re = spiRead();
  4638  000ABA  EC5B  F01D         	call	_spiRead	;wreg free
  4639  000ABE                     L15:
  4640  000ABE  6E52               	movwf	_re,c
  4641                           
  4642                           ;main.c: 342: }
  4643                           ;main.c: 343: RA1 = 1;
  4644  000AC0  8280               	bsf	3968,1,c	;volatile
  4645  000AC2                     l181:
  4646  000AC2                     l4566:
  4647                           
  4648                           ;main.c: 344: }
  4649                           ;main.c: 345: if(surface_three[i] == num+count) {
  4650  000AC2  0E46               	movlw	low _surface_three
  4651  000AC4  0100               	movlb	0	; () banked
  4652  000AC6  2582               	addwf	led@i& (0+255),w,b
  4653  000AC8  6ED9               	movwf	fsr2l,c
  4654  000ACA  0E00               	movlw	high _surface_three
  4655  000ACC  2183               	addwfc	(led@i+1)& (0+255),w,b
  4656  000ACE  6EDA               	movwf	fsr2h,c
  4657  000AD0  50DF               	movf	indf2,w,c
  4658  000AD2  6E2E               	movwf	??_led& (0+255),c
  4659  000AD4  6A2F               	clrf	(??_led+1)& (0+255),c
  4660  000AD6  5181               	movf	led@num& (0+255),w,b
  4661  000AD8  2584               	addwf	led@count& (0+255),w,b
  4662  000ADA  6E30               	movwf	(??_led+2)& (0+255),c
  4663  000ADC  0E00               	movlw	0
  4664  000ADE  2185               	addwfc	(led@count+1)& (0+255),w,b
  4665  000AE0  6E31               	movwf	(??_led+3)& (0+255),c
  4666  000AE2  502E               	movf	??_led,w,c
  4667  000AE4  1830               	xorwf	??_led+2,w,c
  4668  000AE6  E119               	bnz	l4582
  4669  000AE8  502F               	movf	??_led+1,w,c
  4670  000AEA  1831               	xorwf	??_led+3,w,c
  4671  000AEC  A4D8               	btfss	status,2,c
  4672  000AEE  D015               	goto	l184
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;main.c: 346: RA2 = 0;
  4676  000AF0  9480               	bcf	3968,2,c	;volatile
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;main.c: 347: if(i == 0) {
  4680  000AF2  5182               	movf	led@i& (0+255),w,b
  4681  000AF4  1183               	iorwf	(led@i+1)& (0+255),w,b
  4682  000AF6  A4D8               	btfss	status,2,c
  4683  000AF8  D007               	goto	l185
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;main.c: 348: spiWrite('a' + count);
  4687  000AFA  5184               	movf	led@count& (0+255),w,b
  4688  000AFC  0F61               	addlw	97
  4689  000AFE  EC57  F01D         	call	_spiWrite
  4690                           
  4691                           ;main.c: 349: re = spiRead();
  4692  000B02  EC5B  F01D         	call	_spiRead	;wreg free
  4693  000B06  D007               	goto	L16
  4694  000B08                     l185:
  4695                           
  4696                           ;main.c: 351: spiWrite('g'+ count);
  4697  000B08  0100               	movlb	0	; () banked
  4698  000B0A  5184               	movf	led@count& (0+255),w,b
  4699  000B0C  0F67               	addlw	103
  4700  000B0E  EC57  F01D         	call	_spiWrite
  4701                           
  4702                           ;main.c: 352: re = spiRead();
  4703  000B12  EC5B  F01D         	call	_spiRead	;wreg free
  4704  000B16                     L16:
  4705  000B16  6E52               	movwf	_re,c
  4706                           
  4707                           ;main.c: 353: }
  4708                           ;main.c: 354: RA2 = 1;
  4709  000B18  8480               	bsf	3968,2,c	;volatile
  4710  000B1A                     l184:
  4711  000B1A                     l4582:
  4712                           
  4713                           ;main.c: 355: }
  4714                           ;main.c: 356: if(surface_six[i] == num+count) {
  4715  000B1A  0E3A               	movlw	low _surface_six
  4716  000B1C  0100               	movlb	0	; () banked
  4717  000B1E  2582               	addwf	led@i& (0+255),w,b
  4718  000B20  6ED9               	movwf	fsr2l,c
  4719  000B22  0E00               	movlw	high _surface_six
  4720  000B24  2183               	addwfc	(led@i+1)& (0+255),w,b
  4721  000B26  6EDA               	movwf	fsr2h,c
  4722  000B28  50DF               	movf	indf2,w,c
  4723  000B2A  6E2E               	movwf	??_led& (0+255),c
  4724  000B2C  6A2F               	clrf	(??_led+1)& (0+255),c
  4725  000B2E  5181               	movf	led@num& (0+255),w,b
  4726  000B30  2584               	addwf	led@count& (0+255),w,b
  4727  000B32  6E30               	movwf	(??_led+2)& (0+255),c
  4728  000B34  0E00               	movlw	0
  4729  000B36  2185               	addwfc	(led@count+1)& (0+255),w,b
  4730  000B38  6E31               	movwf	(??_led+3)& (0+255),c
  4731  000B3A  502E               	movf	??_led,w,c
  4732  000B3C  1830               	xorwf	??_led+2,w,c
  4733  000B3E  E119               	bnz	l4598
  4734  000B40  502F               	movf	??_led+1,w,c
  4735  000B42  1831               	xorwf	??_led+3,w,c
  4736  000B44  A4D8               	btfss	status,2,c
  4737  000B46  D015               	goto	l187
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;main.c: 357: RA5 = 0;
  4741  000B48  9A80               	bcf	3968,5,c	;volatile
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;main.c: 358: if(i == 0) {
  4745  000B4A  5182               	movf	led@i& (0+255),w,b
  4746  000B4C  1183               	iorwf	(led@i+1)& (0+255),w,b
  4747  000B4E  A4D8               	btfss	status,2,c
  4748  000B50  D007               	goto	l188
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;main.c: 359: spiWrite('a' + count);
  4752  000B52  5184               	movf	led@count& (0+255),w,b
  4753  000B54  0F61               	addlw	97
  4754  000B56  EC57  F01D         	call	_spiWrite
  4755                           
  4756                           ;main.c: 360: re = spiRead();
  4757  000B5A  EC5B  F01D         	call	_spiRead	;wreg free
  4758  000B5E  D007               	goto	L17
  4759  000B60                     l188:
  4760                           
  4761                           ;main.c: 362: spiWrite('g'+ count);
  4762  000B60  0100               	movlb	0	; () banked
  4763  000B62  5184               	movf	led@count& (0+255),w,b
  4764  000B64  0F67               	addlw	103
  4765  000B66  EC57  F01D         	call	_spiWrite
  4766                           
  4767                           ;main.c: 363: re = spiRead();
  4768  000B6A  EC5B  F01D         	call	_spiRead	;wreg free
  4769  000B6E                     L17:
  4770  000B6E  6E52               	movwf	_re,c
  4771                           
  4772                           ;main.c: 364: }
  4773                           ;main.c: 365: RA5 = 1;
  4774  000B70  8A80               	bsf	3968,5,c	;volatile
  4775  000B72                     l187:
  4776  000B72                     l4598:
  4777  000B72  0100               	movlb	0	; () banked
  4778  000B74  4B84               	infsnz	led@count& (0+255),f,b
  4779  000B76  2B85               	incf	(led@count+1)& (0+255),f,b
  4780                           
  4781                           ; BSR set to: 0
  4782  000B78  BF85               	btfsc	(led@count+1)& (0+255),7,b
  4783  000B7A  D74C               	goto	l176
  4784  000B7C  5185               	movf	(led@count+1)& (0+255),w,b
  4785  000B7E  E101               	bnz	l4602
  4786  000B80  D743               	goto	L18
  4787  000B82                     u5290:
  4788  000B82                     l4602:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;main.c: 366: }
  4792                           ;main.c: 367: }
  4793                           ;main.c: 368: _delay((unsigned long)((5)*(1000000/4000.0)));
  4794  000B82  0EFA               	movlw	250
  4795  000B84                     u6617:
  4796  000B84  D000               	nop2	
  4797  000B86  2EE8               	decfsz	wreg,f,c
  4798  000B88  D7FD               	bra	u6617
  4799  000B8A  0E02               	movlw	2
  4800  000B8C  0100               	movlb	0	; () banked
  4801  000B8E  2782               	addwf	led@i& (0+255),f,b
  4802  000B90  0E00               	movlw	0
  4803  000B92  2383               	addwfc	(led@i+1)& (0+255),f,b
  4804                           
  4805                           ; BSR set to: 0
  4806  000B94  BF83               	btfsc	(led@i+1)& (0+255),7,b
  4807  000B96  D730               	goto	l174
  4808  000B98  5183               	movf	(led@i+1)& (0+255),w,b
  4809  000B9A  E101               	bnz	u5300
  4810  000B9C  D727               	goto	L19
  4811  000B9E                     u5300:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;main.c: 369: }
  4815                           ;main.c: 370: }
  4816  000B9E  0012               	return	
  4817  000BA0                     l173:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;main.c: 371: else if(rotate == 'R') {
  4821                           
  4822                           ; BSR set to: 0
  4823  000BA0  0E52               	movlw	82
  4824  000BA2  1980               	xorwf	led@rotate& (0+255),w,b
  4825  000BA4  A4D8               	btfss	status,2,c
  4826  000BA6  D0E2               	goto	l191
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;main.c: 372: for(i=1;i<=3;i+=2) {
  4830  000BA8  0E00               	movlw	0
  4831  000BAA  6F83               	movwf	(led@i+1)& (0+255),b
  4832  000BAC  0E01               	movlw	1
  4833  000BAE  6F82               	movwf	led@i& (0+255),b
  4834                           
  4835                           ; BSR set to: 0
  4836  000BB0  BF83               	btfsc	(led@i+1)& (0+255),7,b
  4837  000BB2  D008               	goto	l192
  4838  000BB4  5183               	movf	(led@i+1)& (0+255),w,b
  4839  000BB6  E105               	bnz	u5320
  4840  000BB8  0E04               	movlw	4
  4841  000BBA  5D82               	subwf	led@i& (0+255),w,b
  4842  000BBC  B0D8               	btfsc	status,0,c
  4843  000BBE  0012               	return	
  4844  000BC0  D001               	goto	l192
  4845  000BC2                     u5320:
  4846                           
  4847                           ; BSR set to: 0
  4848  000BC2  0012               	return	
  4849  000BC4                     l192:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;main.c: 373: for(count=0;count<6;count++) {
  4853                           
  4854                           ; BSR set to: 0
  4855  000BC4  0E00               	movlw	0
  4856  000BC6  6F85               	movwf	(led@count+1)& (0+255),b
  4857  000BC8  0E00               	movlw	0
  4858  000BCA  6F84               	movwf	led@count& (0+255),b
  4859                           
  4860                           ; BSR set to: 0
  4861  000BCC  BF85               	btfsc	(led@count+1)& (0+255),7,b
  4862  000BCE  D008               	goto	l194
  4863  000BD0  5185               	movf	(led@count+1)& (0+255),w,b
  4864  000BD2  E105               	bnz	u5330
  4865  000BD4  0E06               	movlw	6
  4866  000BD6  5D84               	subwf	led@count& (0+255),w,b
  4867  000BD8  B0D8               	btfsc	status,0,c
  4868  000BDA  D0B9               	goto	u5420
  4869  000BDC  D001               	goto	l194
  4870  000BDE                     u5330:
  4871                           
  4872                           ; BSR set to: 0
  4873  000BDE  D0B7               	goto	u5420
  4874  000BE0                     l194:
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;main.c: 374: if(surface_one[i] == num+count) {
  4878                           
  4879                           ; BSR set to: 0
  4880  000BE0  0E4E               	movlw	low _surface_one
  4881  000BE2  2582               	addwf	led@i& (0+255),w,b
  4882  000BE4  6ED9               	movwf	fsr2l,c
  4883  000BE6  0E00               	movlw	high _surface_one
  4884  000BE8  2183               	addwfc	(led@i+1)& (0+255),w,b
  4885  000BEA  6EDA               	movwf	fsr2h,c
  4886  000BEC  50DF               	movf	indf2,w,c
  4887  000BEE  6E2E               	movwf	??_led& (0+255),c
  4888  000BF0  6A2F               	clrf	(??_led+1)& (0+255),c
  4889  000BF2  5181               	movf	led@num& (0+255),w,b
  4890  000BF4  2584               	addwf	led@count& (0+255),w,b
  4891  000BF6  6E30               	movwf	(??_led+2)& (0+255),c
  4892  000BF8  0E00               	movlw	0
  4893  000BFA  2185               	addwfc	(led@count+1)& (0+255),w,b
  4894  000BFC  6E31               	movwf	(??_led+3)& (0+255),c
  4895  000BFE  502E               	movf	??_led,w,c
  4896  000C00  1830               	xorwf	??_led+2,w,c
  4897  000C02  E119               	bnz	l4638
  4898  000C04  502F               	movf	??_led+1,w,c
  4899  000C06  1831               	xorwf	??_led+3,w,c
  4900  000C08  A4D8               	btfss	status,2,c
  4901  000C0A  D015               	goto	l196
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;main.c: 375: RA0 = 0;
  4905  000C0C  9080               	bcf	3968,0,c	;volatile
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;main.c: 376: if(i == 0) {
  4909  000C0E  5182               	movf	led@i& (0+255),w,b
  4910  000C10  1183               	iorwf	(led@i+1)& (0+255),w,b
  4911  000C12  A4D8               	btfss	status,2,c
  4912  000C14  D007               	goto	l197
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;main.c: 377: spiWrite('m' + count);
  4916  000C16  5184               	movf	led@count& (0+255),w,b
  4917  000C18  0F6D               	addlw	109
  4918  000C1A  EC57  F01D         	call	_spiWrite
  4919                           
  4920                           ;main.c: 378: re = spiRead();
  4921  000C1E  EC5B  F01D         	call	_spiRead	;wreg free
  4922  000C22  D007               	goto	L20
  4923  000C24                     l197:
  4924                           
  4925                           ;main.c: 380: spiWrite('s'+ count);
  4926  000C24  0100               	movlb	0	; () banked
  4927  000C26  5184               	movf	led@count& (0+255),w,b
  4928  000C28  0F73               	addlw	115
  4929  000C2A  EC57  F01D         	call	_spiWrite
  4930                           
  4931                           ;main.c: 381: re = spiRead();
  4932  000C2E  EC5B  F01D         	call	_spiRead	;wreg free
  4933  000C32                     L20:
  4934  000C32  6E52               	movwf	_re,c
  4935                           
  4936                           ;main.c: 382: }
  4937                           ;main.c: 383: RA0 = 1;
  4938  000C34  8080               	bsf	3968,0,c	;volatile
  4939  000C36                     l196:
  4940  000C36                     l4638:
  4941                           
  4942                           ;main.c: 384: }
  4943                           ;main.c: 385: if(surface_two[i] == num+count) {
  4944  000C36  0E4A               	movlw	low _surface_two
  4945  000C38  0100               	movlb	0	; () banked
  4946  000C3A  2582               	addwf	led@i& (0+255),w,b
  4947  000C3C  6ED9               	movwf	fsr2l,c
  4948  000C3E  0E00               	movlw	high _surface_two
  4949  000C40  2183               	addwfc	(led@i+1)& (0+255),w,b
  4950  000C42  6EDA               	movwf	fsr2h,c
  4951  000C44  50DF               	movf	indf2,w,c
  4952  000C46  6E2E               	movwf	??_led& (0+255),c
  4953  000C48  6A2F               	clrf	(??_led+1)& (0+255),c
  4954  000C4A  5181               	movf	led@num& (0+255),w,b
  4955  000C4C  2584               	addwf	led@count& (0+255),w,b
  4956  000C4E  6E30               	movwf	(??_led+2)& (0+255),c
  4957  000C50  0E00               	movlw	0
  4958  000C52  2185               	addwfc	(led@count+1)& (0+255),w,b
  4959  000C54  6E31               	movwf	(??_led+3)& (0+255),c
  4960  000C56  502E               	movf	??_led,w,c
  4961  000C58  1830               	xorwf	??_led+2,w,c
  4962  000C5A  E119               	bnz	l4654
  4963  000C5C  502F               	movf	??_led+1,w,c
  4964  000C5E  1831               	xorwf	??_led+3,w,c
  4965  000C60  A4D8               	btfss	status,2,c
  4966  000C62  D015               	goto	l199
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;main.c: 386: RA1 = 0;
  4970  000C64  9280               	bcf	3968,1,c	;volatile
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;main.c: 387: if(i == 0) {
  4974  000C66  5182               	movf	led@i& (0+255),w,b
  4975  000C68  1183               	iorwf	(led@i+1)& (0+255),w,b
  4976  000C6A  A4D8               	btfss	status,2,c
  4977  000C6C  D007               	goto	l200
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;main.c: 388: spiWrite('m' + count);
  4981  000C6E  5184               	movf	led@count& (0+255),w,b
  4982  000C70  0F6D               	addlw	109
  4983  000C72  EC57  F01D         	call	_spiWrite
  4984                           
  4985                           ;main.c: 389: re = spiRead();
  4986  000C76  EC5B  F01D         	call	_spiRead	;wreg free
  4987  000C7A  D007               	goto	L21
  4988  000C7C                     l200:
  4989                           
  4990                           ;main.c: 391: spiWrite('s'+ count);
  4991  000C7C  0100               	movlb	0	; () banked
  4992  000C7E  5184               	movf	led@count& (0+255),w,b
  4993  000C80  0F73               	addlw	115
  4994  000C82  EC57  F01D         	call	_spiWrite
  4995                           
  4996                           ;main.c: 392: re = spiRead();
  4997  000C86  EC5B  F01D         	call	_spiRead	;wreg free
  4998  000C8A                     L21:
  4999  000C8A  6E52               	movwf	_re,c
  5000                           
  5001                           ;main.c: 393: }
  5002                           ;main.c: 394: RA1 = 1;
  5003  000C8C  8280               	bsf	3968,1,c	;volatile
  5004  000C8E                     l199:
  5005  000C8E                     l4654:
  5006                           
  5007                           ;main.c: 395: }
  5008                           ;main.c: 396: if(surface_three[i] == num+count) {
  5009  000C8E  0E46               	movlw	low _surface_three
  5010  000C90  0100               	movlb	0	; () banked
  5011  000C92  2582               	addwf	led@i& (0+255),w,b
  5012  000C94  6ED9               	movwf	fsr2l,c
  5013  000C96  0E00               	movlw	high _surface_three
  5014  000C98  2183               	addwfc	(led@i+1)& (0+255),w,b
  5015  000C9A  6EDA               	movwf	fsr2h,c
  5016  000C9C  50DF               	movf	indf2,w,c
  5017  000C9E  6E2E               	movwf	??_led& (0+255),c
  5018  000CA0  6A2F               	clrf	(??_led+1)& (0+255),c
  5019  000CA2  5181               	movf	led@num& (0+255),w,b
  5020  000CA4  2584               	addwf	led@count& (0+255),w,b
  5021  000CA6  6E30               	movwf	(??_led+2)& (0+255),c
  5022  000CA8  0E00               	movlw	0
  5023  000CAA  2185               	addwfc	(led@count+1)& (0+255),w,b
  5024  000CAC  6E31               	movwf	(??_led+3)& (0+255),c
  5025  000CAE  502E               	movf	??_led,w,c
  5026  000CB0  1830               	xorwf	??_led+2,w,c
  5027  000CB2  E119               	bnz	l4670
  5028  000CB4  502F               	movf	??_led+1,w,c
  5029  000CB6  1831               	xorwf	??_led+3,w,c
  5030  000CB8  A4D8               	btfss	status,2,c
  5031  000CBA  D015               	goto	l202
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;main.c: 397: RA2 = 0;
  5035  000CBC  9480               	bcf	3968,2,c	;volatile
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;main.c: 398: if(i == 0) {
  5039  000CBE  5182               	movf	led@i& (0+255),w,b
  5040  000CC0  1183               	iorwf	(led@i+1)& (0+255),w,b
  5041  000CC2  A4D8               	btfss	status,2,c
  5042  000CC4  D007               	goto	l203
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;main.c: 399: spiWrite('m' + count);
  5046  000CC6  5184               	movf	led@count& (0+255),w,b
  5047  000CC8  0F6D               	addlw	109
  5048  000CCA  EC57  F01D         	call	_spiWrite
  5049                           
  5050                           ;main.c: 400: re = spiRead();
  5051  000CCE  EC5B  F01D         	call	_spiRead	;wreg free
  5052  000CD2  D007               	goto	L22
  5053  000CD4                     l203:
  5054                           
  5055                           ;main.c: 402: spiWrite('s'+ count);
  5056  000CD4  0100               	movlb	0	; () banked
  5057  000CD6  5184               	movf	led@count& (0+255),w,b
  5058  000CD8  0F73               	addlw	115
  5059  000CDA  EC57  F01D         	call	_spiWrite
  5060                           
  5061                           ;main.c: 403: re = spiRead();
  5062  000CDE  EC5B  F01D         	call	_spiRead	;wreg free
  5063  000CE2                     L22:
  5064  000CE2  6E52               	movwf	_re,c
  5065                           
  5066                           ;main.c: 404: }
  5067                           ;main.c: 405: RA2 = 1;
  5068  000CE4  8480               	bsf	3968,2,c	;volatile
  5069  000CE6                     l202:
  5070  000CE6                     l4670:
  5071                           
  5072                           ;main.c: 406: }
  5073                           ;main.c: 407: if(surface_six[i] == num+count) {
  5074  000CE6  0E3A               	movlw	low _surface_six
  5075  000CE8  0100               	movlb	0	; () banked
  5076  000CEA  2582               	addwf	led@i& (0+255),w,b
  5077  000CEC  6ED9               	movwf	fsr2l,c
  5078  000CEE  0E00               	movlw	high _surface_six
  5079  000CF0  2183               	addwfc	(led@i+1)& (0+255),w,b
  5080  000CF2  6EDA               	movwf	fsr2h,c
  5081  000CF4  50DF               	movf	indf2,w,c
  5082  000CF6  6E2E               	movwf	??_led& (0+255),c
  5083  000CF8  6A2F               	clrf	(??_led+1)& (0+255),c
  5084  000CFA  5181               	movf	led@num& (0+255),w,b
  5085  000CFC  2584               	addwf	led@count& (0+255),w,b
  5086  000CFE  6E30               	movwf	(??_led+2)& (0+255),c
  5087  000D00  0E00               	movlw	0
  5088  000D02  2185               	addwfc	(led@count+1)& (0+255),w,b
  5089  000D04  6E31               	movwf	(??_led+3)& (0+255),c
  5090  000D06  502E               	movf	??_led,w,c
  5091  000D08  1830               	xorwf	??_led+2,w,c
  5092  000D0A  E119               	bnz	l4686
  5093  000D0C  502F               	movf	??_led+1,w,c
  5094  000D0E  1831               	xorwf	??_led+3,w,c
  5095  000D10  A4D8               	btfss	status,2,c
  5096  000D12  D015               	goto	l205
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;main.c: 408: RA5 = 0;
  5100  000D14  9A80               	bcf	3968,5,c	;volatile
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;main.c: 409: if(i == 0) {
  5104  000D16  5182               	movf	led@i& (0+255),w,b
  5105  000D18  1183               	iorwf	(led@i+1)& (0+255),w,b
  5106  000D1A  A4D8               	btfss	status,2,c
  5107  000D1C  D007               	goto	l206
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;main.c: 410: spiWrite('m' + count);
  5111  000D1E  5184               	movf	led@count& (0+255),w,b
  5112  000D20  0F6D               	addlw	109
  5113  000D22  EC57  F01D         	call	_spiWrite
  5114                           
  5115                           ;main.c: 411: re = spiRead();
  5116  000D26  EC5B  F01D         	call	_spiRead	;wreg free
  5117  000D2A  D007               	goto	L23
  5118  000D2C                     l206:
  5119                           
  5120                           ;main.c: 413: spiWrite('s'+ count);
  5121  000D2C  0100               	movlb	0	; () banked
  5122  000D2E  5184               	movf	led@count& (0+255),w,b
  5123  000D30  0F73               	addlw	115
  5124  000D32  EC57  F01D         	call	_spiWrite
  5125                           
  5126                           ;main.c: 414: re = spiRead();
  5127  000D36  EC5B  F01D         	call	_spiRead	;wreg free
  5128  000D3A                     L23:
  5129  000D3A  6E52               	movwf	_re,c
  5130                           
  5131                           ;main.c: 415: }
  5132                           ;main.c: 416: RA5 = 1;
  5133  000D3C  8A80               	bsf	3968,5,c	;volatile
  5134  000D3E                     l205:
  5135  000D3E                     l4686:
  5136  000D3E  0100               	movlb	0	; () banked
  5137  000D40  4B84               	infsnz	led@count& (0+255),f,b
  5138  000D42  2B85               	incf	(led@count+1)& (0+255),f,b
  5139                           
  5140                           ; BSR set to: 0
  5141  000D44  BF85               	btfsc	(led@count+1)& (0+255),7,b
  5142  000D46  D74C               	goto	l194
  5143  000D48  5185               	movf	(led@count+1)& (0+255),w,b
  5144  000D4A  E101               	bnz	l4690
  5145  000D4C  D743               	goto	L24
  5146  000D4E                     u5420:
  5147  000D4E                     l4690:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;main.c: 417: }
  5151                           ;main.c: 418: }
  5152                           ;main.c: 419: _delay((unsigned long)((5)*(1000000/4000.0)));
  5153  000D4E  0EFA               	movlw	250
  5154  000D50                     u6627:
  5155  000D50  D000               	nop2	
  5156  000D52  2EE8               	decfsz	wreg,f,c
  5157  000D54  D7FD               	bra	u6627
  5158  000D56  0E02               	movlw	2
  5159  000D58  0100               	movlb	0	; () banked
  5160  000D5A  2782               	addwf	led@i& (0+255),f,b
  5161  000D5C  0E00               	movlw	0
  5162  000D5E  2383               	addwfc	(led@i+1)& (0+255),f,b
  5163                           
  5164                           ; BSR set to: 0
  5165  000D60  BF83               	btfsc	(led@i+1)& (0+255),7,b
  5166  000D62  D730               	goto	l192
  5167  000D64  5183               	movf	(led@i+1)& (0+255),w,b
  5168  000D66  E101               	bnz	u5430
  5169  000D68  D727               	goto	L25
  5170  000D6A                     u5430:
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;main.c: 420: }
  5174                           ;main.c: 421: }
  5175  000D6A  0012               	return	
  5176  000D6C                     l191:
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;main.c: 422: else if(rotate == 'F') {
  5180                           
  5181                           ; BSR set to: 0
  5182  000D6C  0E46               	movlw	70
  5183  000D6E  1980               	xorwf	led@rotate& (0+255),w,b
  5184  000D70  A4D8               	btfss	status,2,c
  5185  000D72  D0E0               	goto	l209
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;main.c: 423: for(i=2;i<=3;i++) {
  5189  000D74  0E00               	movlw	0
  5190  000D76  6F83               	movwf	(led@i+1)& (0+255),b
  5191  000D78  0E02               	movlw	2
  5192  000D7A  6F82               	movwf	led@i& (0+255),b
  5193                           
  5194                           ; BSR set to: 0
  5195  000D7C  BF83               	btfsc	(led@i+1)& (0+255),7,b
  5196  000D7E  D008               	goto	l210
  5197  000D80  5183               	movf	(led@i+1)& (0+255),w,b
  5198  000D82  E105               	bnz	u5450
  5199  000D84  0E04               	movlw	4
  5200  000D86  5D82               	subwf	led@i& (0+255),w,b
  5201  000D88  B0D8               	btfsc	status,0,c
  5202  000D8A  0012               	return	
  5203  000D8C  D001               	goto	l210
  5204  000D8E                     u5450:
  5205                           
  5206                           ; BSR set to: 0
  5207  000D8E  0012               	return	
  5208  000D90                     l210:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;main.c: 424: for(count=0;count<6;count++) {
  5212                           
  5213                           ; BSR set to: 0
  5214  000D90  0E00               	movlw	0
  5215  000D92  6F85               	movwf	(led@count+1)& (0+255),b
  5216  000D94  0E00               	movlw	0
  5217  000D96  6F84               	movwf	led@count& (0+255),b
  5218                           
  5219                           ; BSR set to: 0
  5220  000D98  BF85               	btfsc	(led@count+1)& (0+255),7,b
  5221  000D9A  D008               	goto	l212
  5222  000D9C  5185               	movf	(led@count+1)& (0+255),w,b
  5223  000D9E  E105               	bnz	u5460
  5224  000DA0  0E06               	movlw	6
  5225  000DA2  5D84               	subwf	led@count& (0+255),w,b
  5226  000DA4  B0D8               	btfsc	status,0,c
  5227  000DA6  D0B9               	goto	u5550
  5228  000DA8  D001               	goto	l212
  5229  000DAA                     u5460:
  5230                           
  5231                           ; BSR set to: 0
  5232  000DAA  D0B7               	goto	u5550
  5233  000DAC                     l212:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;main.c: 425: if(surface_one[i] == num+count) {
  5237                           
  5238                           ; BSR set to: 0
  5239  000DAC  0E4E               	movlw	low _surface_one
  5240  000DAE  2582               	addwf	led@i& (0+255),w,b
  5241  000DB0  6ED9               	movwf	fsr2l,c
  5242  000DB2  0E00               	movlw	high _surface_one
  5243  000DB4  2183               	addwfc	(led@i+1)& (0+255),w,b
  5244  000DB6  6EDA               	movwf	fsr2h,c
  5245  000DB8  50DF               	movf	indf2,w,c
  5246  000DBA  6E2E               	movwf	??_led& (0+255),c
  5247  000DBC  6A2F               	clrf	(??_led+1)& (0+255),c
  5248  000DBE  5181               	movf	led@num& (0+255),w,b
  5249  000DC0  2584               	addwf	led@count& (0+255),w,b
  5250  000DC2  6E30               	movwf	(??_led+2)& (0+255),c
  5251  000DC4  0E00               	movlw	0
  5252  000DC6  2185               	addwfc	(led@count+1)& (0+255),w,b
  5253  000DC8  6E31               	movwf	(??_led+3)& (0+255),c
  5254  000DCA  502E               	movf	??_led,w,c
  5255  000DCC  1830               	xorwf	??_led+2,w,c
  5256  000DCE  E119               	bnz	l4726
  5257  000DD0  502F               	movf	??_led+1,w,c
  5258  000DD2  1831               	xorwf	??_led+3,w,c
  5259  000DD4  A4D8               	btfss	status,2,c
  5260  000DD6  D015               	goto	l214
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;main.c: 426: RA0 = 0;
  5264  000DD8  9080               	bcf	3968,0,c	;volatile
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;main.c: 427: if(i == 0) {
  5268  000DDA  5182               	movf	led@i& (0+255),w,b
  5269  000DDC  1183               	iorwf	(led@i+1)& (0+255),w,b
  5270  000DDE  A4D8               	btfss	status,2,c
  5271  000DE0  D007               	goto	l215
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;main.c: 428: spiWrite('g' + count);
  5275  000DE2  5184               	movf	led@count& (0+255),w,b
  5276  000DE4  0F67               	addlw	103
  5277  000DE6  EC57  F01D         	call	_spiWrite
  5278                           
  5279                           ;main.c: 429: re = spiRead();
  5280  000DEA  EC5B  F01D         	call	_spiRead	;wreg free
  5281  000DEE  D007               	goto	L26
  5282  000DF0                     l215:
  5283                           
  5284                           ;main.c: 431: spiWrite('s'+ count);
  5285  000DF0  0100               	movlb	0	; () banked
  5286  000DF2  5184               	movf	led@count& (0+255),w,b
  5287  000DF4  0F73               	addlw	115
  5288  000DF6  EC57  F01D         	call	_spiWrite
  5289                           
  5290                           ;main.c: 432: re = spiRead();
  5291  000DFA  EC5B  F01D         	call	_spiRead	;wreg free
  5292  000DFE                     L26:
  5293  000DFE  6E52               	movwf	_re,c
  5294                           
  5295                           ;main.c: 433: }
  5296                           ;main.c: 434: RA0 = 1;
  5297  000E00  8080               	bsf	3968,0,c	;volatile
  5298  000E02                     l214:
  5299  000E02                     l4726:
  5300                           
  5301                           ;main.c: 435: }
  5302                           ;main.c: 436: if(surface_two[i] == num+count) {
  5303  000E02  0E4A               	movlw	low _surface_two
  5304  000E04  0100               	movlb	0	; () banked
  5305  000E06  2582               	addwf	led@i& (0+255),w,b
  5306  000E08  6ED9               	movwf	fsr2l,c
  5307  000E0A  0E00               	movlw	high _surface_two
  5308  000E0C  2183               	addwfc	(led@i+1)& (0+255),w,b
  5309  000E0E  6EDA               	movwf	fsr2h,c
  5310  000E10  50DF               	movf	indf2,w,c
  5311  000E12  6E2E               	movwf	??_led& (0+255),c
  5312  000E14  6A2F               	clrf	(??_led+1)& (0+255),c
  5313  000E16  5181               	movf	led@num& (0+255),w,b
  5314  000E18  2584               	addwf	led@count& (0+255),w,b
  5315  000E1A  6E30               	movwf	(??_led+2)& (0+255),c
  5316  000E1C  0E00               	movlw	0
  5317  000E1E  2185               	addwfc	(led@count+1)& (0+255),w,b
  5318  000E20  6E31               	movwf	(??_led+3)& (0+255),c
  5319  000E22  502E               	movf	??_led,w,c
  5320  000E24  1830               	xorwf	??_led+2,w,c
  5321  000E26  E119               	bnz	l4742
  5322  000E28  502F               	movf	??_led+1,w,c
  5323  000E2A  1831               	xorwf	??_led+3,w,c
  5324  000E2C  A4D8               	btfss	status,2,c
  5325  000E2E  D015               	goto	l217
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;main.c: 437: RA1 = 0;
  5329  000E30  9280               	bcf	3968,1,c	;volatile
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;main.c: 438: if(i == 0) {
  5333  000E32  5182               	movf	led@i& (0+255),w,b
  5334  000E34  1183               	iorwf	(led@i+1)& (0+255),w,b
  5335  000E36  A4D8               	btfss	status,2,c
  5336  000E38  D007               	goto	l218
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;main.c: 439: spiWrite('g' + count);
  5340  000E3A  5184               	movf	led@count& (0+255),w,b
  5341  000E3C  0F67               	addlw	103
  5342  000E3E  EC57  F01D         	call	_spiWrite
  5343                           
  5344                           ;main.c: 440: re = spiRead();
  5345  000E42  EC5B  F01D         	call	_spiRead	;wreg free
  5346  000E46  D007               	goto	L27
  5347  000E48                     l218:
  5348                           
  5349                           ;main.c: 442: spiWrite('s'+ count);
  5350  000E48  0100               	movlb	0	; () banked
  5351  000E4A  5184               	movf	led@count& (0+255),w,b
  5352  000E4C  0F73               	addlw	115
  5353  000E4E  EC57  F01D         	call	_spiWrite
  5354                           
  5355                           ;main.c: 443: re = spiRead();
  5356  000E52  EC5B  F01D         	call	_spiRead	;wreg free
  5357  000E56                     L27:
  5358  000E56  6E52               	movwf	_re,c
  5359                           
  5360                           ;main.c: 444: }
  5361                           ;main.c: 445: RA1 = 1;
  5362  000E58  8280               	bsf	3968,1,c	;volatile
  5363  000E5A                     l217:
  5364  000E5A                     l4742:
  5365                           
  5366                           ;main.c: 446: }
  5367                           ;main.c: 447: if(surface_four[i] == num+count) {
  5368  000E5A  0E42               	movlw	low _surface_four
  5369  000E5C  0100               	movlb	0	; () banked
  5370  000E5E  2582               	addwf	led@i& (0+255),w,b
  5371  000E60  6ED9               	movwf	fsr2l,c
  5372  000E62  0E00               	movlw	high _surface_four
  5373  000E64  2183               	addwfc	(led@i+1)& (0+255),w,b
  5374  000E66  6EDA               	movwf	fsr2h,c
  5375  000E68  50DF               	movf	indf2,w,c
  5376  000E6A  6E2E               	movwf	??_led& (0+255),c
  5377  000E6C  6A2F               	clrf	(??_led+1)& (0+255),c
  5378  000E6E  5181               	movf	led@num& (0+255),w,b
  5379  000E70  2584               	addwf	led@count& (0+255),w,b
  5380  000E72  6E30               	movwf	(??_led+2)& (0+255),c
  5381  000E74  0E00               	movlw	0
  5382  000E76  2185               	addwfc	(led@count+1)& (0+255),w,b
  5383  000E78  6E31               	movwf	(??_led+3)& (0+255),c
  5384  000E7A  502E               	movf	??_led,w,c
  5385  000E7C  1830               	xorwf	??_led+2,w,c
  5386  000E7E  E119               	bnz	l4758
  5387  000E80  502F               	movf	??_led+1,w,c
  5388  000E82  1831               	xorwf	??_led+3,w,c
  5389  000E84  A4D8               	btfss	status,2,c
  5390  000E86  D015               	goto	l220
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;main.c: 448: RA3 = 0;
  5394  000E88  9680               	bcf	3968,3,c	;volatile
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;main.c: 449: if(i == 0) {
  5398  000E8A  5182               	movf	led@i& (0+255),w,b
  5399  000E8C  1183               	iorwf	(led@i+1)& (0+255),w,b
  5400  000E8E  A4D8               	btfss	status,2,c
  5401  000E90  D007               	goto	l221
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;main.c: 450: spiWrite('g' + count);
  5405  000E92  5184               	movf	led@count& (0+255),w,b
  5406  000E94  0F67               	addlw	103
  5407  000E96  EC57  F01D         	call	_spiWrite
  5408                           
  5409                           ;main.c: 451: re = spiRead();
  5410  000E9A  EC5B  F01D         	call	_spiRead	;wreg free
  5411  000E9E  D007               	goto	L28
  5412  000EA0                     l221:
  5413                           
  5414                           ;main.c: 453: spiWrite('s'+ count);
  5415  000EA0  0100               	movlb	0	; () banked
  5416  000EA2  5184               	movf	led@count& (0+255),w,b
  5417  000EA4  0F73               	addlw	115
  5418  000EA6  EC57  F01D         	call	_spiWrite
  5419                           
  5420                           ;main.c: 454: re = spiRead();
  5421  000EAA  EC5B  F01D         	call	_spiRead	;wreg free
  5422  000EAE                     L28:
  5423  000EAE  6E52               	movwf	_re,c
  5424                           
  5425                           ;main.c: 455: }
  5426                           ;main.c: 456: RA3 = 1;
  5427  000EB0  8680               	bsf	3968,3,c	;volatile
  5428  000EB2                     l220:
  5429  000EB2                     l4758:
  5430                           
  5431                           ;main.c: 457: }
  5432                           ;main.c: 458: if(surface_six[i] == num+count) {
  5433  000EB2  0E3A               	movlw	low _surface_six
  5434  000EB4  0100               	movlb	0	; () banked
  5435  000EB6  2582               	addwf	led@i& (0+255),w,b
  5436  000EB8  6ED9               	movwf	fsr2l,c
  5437  000EBA  0E00               	movlw	high _surface_six
  5438  000EBC  2183               	addwfc	(led@i+1)& (0+255),w,b
  5439  000EBE  6EDA               	movwf	fsr2h,c
  5440  000EC0  50DF               	movf	indf2,w,c
  5441  000EC2  6E2E               	movwf	??_led& (0+255),c
  5442  000EC4  6A2F               	clrf	(??_led+1)& (0+255),c
  5443  000EC6  5181               	movf	led@num& (0+255),w,b
  5444  000EC8  2584               	addwf	led@count& (0+255),w,b
  5445  000ECA  6E30               	movwf	(??_led+2)& (0+255),c
  5446  000ECC  0E00               	movlw	0
  5447  000ECE  2185               	addwfc	(led@count+1)& (0+255),w,b
  5448  000ED0  6E31               	movwf	(??_led+3)& (0+255),c
  5449  000ED2  502E               	movf	??_led,w,c
  5450  000ED4  1830               	xorwf	??_led+2,w,c
  5451  000ED6  E119               	bnz	l4774
  5452  000ED8  502F               	movf	??_led+1,w,c
  5453  000EDA  1831               	xorwf	??_led+3,w,c
  5454  000EDC  A4D8               	btfss	status,2,c
  5455  000EDE  D015               	goto	l223
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;main.c: 459: RA5 = 0;
  5459  000EE0  9A80               	bcf	3968,5,c	;volatile
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;main.c: 460: if(i == 0) {
  5463  000EE2  5182               	movf	led@i& (0+255),w,b
  5464  000EE4  1183               	iorwf	(led@i+1)& (0+255),w,b
  5465  000EE6  A4D8               	btfss	status,2,c
  5466  000EE8  D007               	goto	l224
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;main.c: 461: spiWrite('g' + count);
  5470  000EEA  5184               	movf	led@count& (0+255),w,b
  5471  000EEC  0F67               	addlw	103
  5472  000EEE  EC57  F01D         	call	_spiWrite
  5473                           
  5474                           ;main.c: 462: re = spiRead();
  5475  000EF2  EC5B  F01D         	call	_spiRead	;wreg free
  5476  000EF6  D007               	goto	L29
  5477  000EF8                     l224:
  5478                           
  5479                           ;main.c: 464: spiWrite('s'+ count);
  5480  000EF8  0100               	movlb	0	; () banked
  5481  000EFA  5184               	movf	led@count& (0+255),w,b
  5482  000EFC  0F73               	addlw	115
  5483  000EFE  EC57  F01D         	call	_spiWrite
  5484                           
  5485                           ;main.c: 465: re = spiRead();
  5486  000F02  EC5B  F01D         	call	_spiRead	;wreg free
  5487  000F06                     L29:
  5488  000F06  6E52               	movwf	_re,c
  5489                           
  5490                           ;main.c: 466: }
  5491                           ;main.c: 467: RA5 = 1;
  5492  000F08  8A80               	bsf	3968,5,c	;volatile
  5493  000F0A                     l223:
  5494  000F0A                     l4774:
  5495  000F0A  0100               	movlb	0	; () banked
  5496  000F0C  4B84               	infsnz	led@count& (0+255),f,b
  5497  000F0E  2B85               	incf	(led@count+1)& (0+255),f,b
  5498                           
  5499                           ; BSR set to: 0
  5500  000F10  BF85               	btfsc	(led@count+1)& (0+255),7,b
  5501  000F12  D74C               	goto	l212
  5502  000F14  5185               	movf	(led@count+1)& (0+255),w,b
  5503  000F16  E101               	bnz	l4778
  5504  000F18  D743               	goto	L30
  5505  000F1A                     u5550:
  5506  000F1A                     l4778:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;main.c: 468: }
  5510                           ;main.c: 469: }
  5511                           ;main.c: 470: _delay((unsigned long)((5)*(1000000/4000.0)));
  5512  000F1A  0EFA               	movlw	250
  5513  000F1C                     u6637:
  5514  000F1C  D000               	nop2	
  5515  000F1E  2EE8               	decfsz	wreg,f,c
  5516  000F20  D7FD               	bra	u6637
  5517  000F22  0100               	movlb	0	; () banked
  5518  000F24  4B82               	infsnz	led@i& (0+255),f,b
  5519  000F26  2B83               	incf	(led@i+1)& (0+255),f,b
  5520  000F28  BF83               	btfsc	(led@i+1)& (0+255),7,b
  5521  000F2A  D732               	goto	l210
  5522  000F2C  5183               	movf	(led@i+1)& (0+255),w,b
  5523  000F2E  E101               	bnz	u5560
  5524  000F30  D729               	goto	L31
  5525  000F32                     u5560:
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;main.c: 471: }
  5529                           ;main.c: 472: }
  5530  000F32  0012               	return	
  5531  000F34                     l209:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;main.c: 473: else if(rotate == 'B') {
  5535                           
  5536                           ; BSR set to: 0
  5537  000F34  0E42               	movlw	66
  5538  000F36  1980               	xorwf	led@rotate& (0+255),w,b
  5539  000F38  A4D8               	btfss	status,2,c
  5540  000F3A  D0E0               	goto	l227
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;main.c: 474: for(i=0;i<=1;i++) {
  5544  000F3C  0E00               	movlw	0
  5545  000F3E  6F83               	movwf	(led@i+1)& (0+255),b
  5546  000F40  0E00               	movlw	0
  5547  000F42  6F82               	movwf	led@i& (0+255),b
  5548                           
  5549                           ; BSR set to: 0
  5550  000F44  BF83               	btfsc	(led@i+1)& (0+255),7,b
  5551  000F46  D008               	goto	l228
  5552  000F48  5183               	movf	(led@i+1)& (0+255),w,b
  5553  000F4A  E105               	bnz	u5580
  5554  000F4C  0E02               	movlw	2
  5555  000F4E  5D82               	subwf	led@i& (0+255),w,b
  5556  000F50  B0D8               	btfsc	status,0,c
  5557  000F52  0012               	return	
  5558  000F54  D001               	goto	l228
  5559  000F56                     u5580:
  5560                           
  5561                           ; BSR set to: 0
  5562  000F56  0012               	return	
  5563  000F58                     l228:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;main.c: 475: for(count=0;count<6;count++) {
  5567                           
  5568                           ; BSR set to: 0
  5569  000F58  0E00               	movlw	0
  5570  000F5A  6F85               	movwf	(led@count+1)& (0+255),b
  5571  000F5C  0E00               	movlw	0
  5572  000F5E  6F84               	movwf	led@count& (0+255),b
  5573                           
  5574                           ; BSR set to: 0
  5575  000F60  BF85               	btfsc	(led@count+1)& (0+255),7,b
  5576  000F62  D008               	goto	l230
  5577  000F64  5185               	movf	(led@count+1)& (0+255),w,b
  5578  000F66  E105               	bnz	u5590
  5579  000F68  0E06               	movlw	6
  5580  000F6A  5D84               	subwf	led@count& (0+255),w,b
  5581  000F6C  B0D8               	btfsc	status,0,c
  5582  000F6E  D0B9               	goto	u5680
  5583  000F70  D001               	goto	l230
  5584  000F72                     u5590:
  5585                           
  5586                           ; BSR set to: 0
  5587  000F72  D0B7               	goto	u5680
  5588  000F74                     l230:
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;main.c: 476: if(surface_one[i] == num+count) {
  5592                           
  5593                           ; BSR set to: 0
  5594  000F74  0E4E               	movlw	low _surface_one
  5595  000F76  2582               	addwf	led@i& (0+255),w,b
  5596  000F78  6ED9               	movwf	fsr2l,c
  5597  000F7A  0E00               	movlw	high _surface_one
  5598  000F7C  2183               	addwfc	(led@i+1)& (0+255),w,b
  5599  000F7E  6EDA               	movwf	fsr2h,c
  5600  000F80  50DF               	movf	indf2,w,c
  5601  000F82  6E2E               	movwf	??_led& (0+255),c
  5602  000F84  6A2F               	clrf	(??_led+1)& (0+255),c
  5603  000F86  5181               	movf	led@num& (0+255),w,b
  5604  000F88  2584               	addwf	led@count& (0+255),w,b
  5605  000F8A  6E30               	movwf	(??_led+2)& (0+255),c
  5606  000F8C  0E00               	movlw	0
  5607  000F8E  2185               	addwfc	(led@count+1)& (0+255),w,b
  5608  000F90  6E31               	movwf	(??_led+3)& (0+255),c
  5609  000F92  502E               	movf	??_led,w,c
  5610  000F94  1830               	xorwf	??_led+2,w,c
  5611  000F96  E119               	bnz	l4812
  5612  000F98  502F               	movf	??_led+1,w,c
  5613  000F9A  1831               	xorwf	??_led+3,w,c
  5614  000F9C  A4D8               	btfss	status,2,c
  5615  000F9E  D015               	goto	l232
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;main.c: 477: RA0 = 0;
  5619  000FA0  9080               	bcf	3968,0,c	;volatile
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;main.c: 478: if(i == 0) {
  5623  000FA2  5182               	movf	led@i& (0+255),w,b
  5624  000FA4  1183               	iorwf	(led@i+1)& (0+255),w,b
  5625  000FA6  A4D8               	btfss	status,2,c
  5626  000FA8  D007               	goto	l233
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;main.c: 479: spiWrite('a' + count);
  5630  000FAA  5184               	movf	led@count& (0+255),w,b
  5631  000FAC  0F61               	addlw	97
  5632  000FAE  EC57  F01D         	call	_spiWrite
  5633                           
  5634                           ;main.c: 480: re = spiRead();
  5635  000FB2  EC5B  F01D         	call	_spiRead	;wreg free
  5636  000FB6  D007               	goto	L32
  5637  000FB8                     l233:
  5638                           
  5639                           ;main.c: 482: spiWrite('m'+ count);
  5640  000FB8  0100               	movlb	0	; () banked
  5641  000FBA  5184               	movf	led@count& (0+255),w,b
  5642  000FBC  0F6D               	addlw	109
  5643  000FBE  EC57  F01D         	call	_spiWrite
  5644                           
  5645                           ;main.c: 483: re = spiRead();
  5646  000FC2  EC5B  F01D         	call	_spiRead	;wreg free
  5647  000FC6                     L32:
  5648  000FC6  6E52               	movwf	_re,c
  5649                           
  5650                           ;main.c: 484: }
  5651                           ;main.c: 485: RA0 = 1;
  5652  000FC8  8080               	bsf	3968,0,c	;volatile
  5653  000FCA                     l232:
  5654  000FCA                     l4812:
  5655                           
  5656                           ;main.c: 486: }
  5657                           ;main.c: 487: if(surface_two[i] == num+count) {
  5658  000FCA  0E4A               	movlw	low _surface_two
  5659  000FCC  0100               	movlb	0	; () banked
  5660  000FCE  2582               	addwf	led@i& (0+255),w,b
  5661  000FD0  6ED9               	movwf	fsr2l,c
  5662  000FD2  0E00               	movlw	high _surface_two
  5663  000FD4  2183               	addwfc	(led@i+1)& (0+255),w,b
  5664  000FD6  6EDA               	movwf	fsr2h,c
  5665  000FD8  50DF               	movf	indf2,w,c
  5666  000FDA  6E2E               	movwf	??_led& (0+255),c
  5667  000FDC  6A2F               	clrf	(??_led+1)& (0+255),c
  5668  000FDE  5181               	movf	led@num& (0+255),w,b
  5669  000FE0  2584               	addwf	led@count& (0+255),w,b
  5670  000FE2  6E30               	movwf	(??_led+2)& (0+255),c
  5671  000FE4  0E00               	movlw	0
  5672  000FE6  2185               	addwfc	(led@count+1)& (0+255),w,b
  5673  000FE8  6E31               	movwf	(??_led+3)& (0+255),c
  5674  000FEA  502E               	movf	??_led,w,c
  5675  000FEC  1830               	xorwf	??_led+2,w,c
  5676  000FEE  E119               	bnz	l4828
  5677  000FF0  502F               	movf	??_led+1,w,c
  5678  000FF2  1831               	xorwf	??_led+3,w,c
  5679  000FF4  A4D8               	btfss	status,2,c
  5680  000FF6  D015               	goto	l235
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;main.c: 488: RA1 = 0;
  5684  000FF8  9280               	bcf	3968,1,c	;volatile
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;main.c: 489: if(i == 0) {
  5688  000FFA  5182               	movf	led@i& (0+255),w,b
  5689  000FFC  1183               	iorwf	(led@i+1)& (0+255),w,b
  5690  000FFE  A4D8               	btfss	status,2,c
  5691  001000  D007               	goto	l236
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;main.c: 490: spiWrite('a' + count);
  5695  001002  5184               	movf	led@count& (0+255),w,b
  5696  001004  0F61               	addlw	97
  5697  001006  EC57  F01D         	call	_spiWrite
  5698                           
  5699                           ;main.c: 491: re = spiRead();
  5700  00100A  EC5B  F01D         	call	_spiRead	;wreg free
  5701  00100E  D007               	goto	L33
  5702  001010                     l236:
  5703                           
  5704                           ;main.c: 493: spiWrite('m'+ count);
  5705  001010  0100               	movlb	0	; () banked
  5706  001012  5184               	movf	led@count& (0+255),w,b
  5707  001014  0F6D               	addlw	109
  5708  001016  EC57  F01D         	call	_spiWrite
  5709                           
  5710                           ;main.c: 494: re = spiRead();
  5711  00101A  EC5B  F01D         	call	_spiRead	;wreg free
  5712  00101E                     L33:
  5713  00101E  6E52               	movwf	_re,c
  5714                           
  5715                           ;main.c: 495: }
  5716                           ;main.c: 496: RA1 = 1;
  5717  001020  8280               	bsf	3968,1,c	;volatile
  5718  001022                     l235:
  5719  001022                     l4828:
  5720                           
  5721                           ;main.c: 497: }
  5722                           ;main.c: 498: if(surface_four[i] == num+count) {
  5723  001022  0E42               	movlw	low _surface_four
  5724  001024  0100               	movlb	0	; () banked
  5725  001026  2582               	addwf	led@i& (0+255),w,b
  5726  001028  6ED9               	movwf	fsr2l,c
  5727  00102A  0E00               	movlw	high _surface_four
  5728  00102C  2183               	addwfc	(led@i+1)& (0+255),w,b
  5729  00102E  6EDA               	movwf	fsr2h,c
  5730  001030  50DF               	movf	indf2,w,c
  5731  001032  6E2E               	movwf	??_led& (0+255),c
  5732  001034  6A2F               	clrf	(??_led+1)& (0+255),c
  5733  001036  5181               	movf	led@num& (0+255),w,b
  5734  001038  2584               	addwf	led@count& (0+255),w,b
  5735  00103A  6E30               	movwf	(??_led+2)& (0+255),c
  5736  00103C  0E00               	movlw	0
  5737  00103E  2185               	addwfc	(led@count+1)& (0+255),w,b
  5738  001040  6E31               	movwf	(??_led+3)& (0+255),c
  5739  001042  502E               	movf	??_led,w,c
  5740  001044  1830               	xorwf	??_led+2,w,c
  5741  001046  E119               	bnz	l4844
  5742  001048  502F               	movf	??_led+1,w,c
  5743  00104A  1831               	xorwf	??_led+3,w,c
  5744  00104C  A4D8               	btfss	status,2,c
  5745  00104E  D015               	goto	l238
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;main.c: 499: RA3 = 0;
  5749  001050  9680               	bcf	3968,3,c	;volatile
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;main.c: 500: if(i == 0) {
  5753  001052  5182               	movf	led@i& (0+255),w,b
  5754  001054  1183               	iorwf	(led@i+1)& (0+255),w,b
  5755  001056  A4D8               	btfss	status,2,c
  5756  001058  D007               	goto	l239
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;main.c: 501: spiWrite('a' + count);
  5760  00105A  5184               	movf	led@count& (0+255),w,b
  5761  00105C  0F61               	addlw	97
  5762  00105E  EC57  F01D         	call	_spiWrite
  5763                           
  5764                           ;main.c: 502: re = spiRead();
  5765  001062  EC5B  F01D         	call	_spiRead	;wreg free
  5766  001066  D007               	goto	L34
  5767  001068                     l239:
  5768                           
  5769                           ;main.c: 504: spiWrite('m'+ count);
  5770  001068  0100               	movlb	0	; () banked
  5771  00106A  5184               	movf	led@count& (0+255),w,b
  5772  00106C  0F6D               	addlw	109
  5773  00106E  EC57  F01D         	call	_spiWrite
  5774                           
  5775                           ;main.c: 505: re = spiRead();
  5776  001072  EC5B  F01D         	call	_spiRead	;wreg free
  5777  001076                     L34:
  5778  001076  6E52               	movwf	_re,c
  5779                           
  5780                           ;main.c: 506: }
  5781                           ;main.c: 507: RA3 = 1;
  5782  001078  8680               	bsf	3968,3,c	;volatile
  5783  00107A                     l238:
  5784  00107A                     l4844:
  5785                           
  5786                           ;main.c: 508: }
  5787                           ;main.c: 509: if(surface_six[i] == num+count) {
  5788  00107A  0E3A               	movlw	low _surface_six
  5789  00107C  0100               	movlb	0	; () banked
  5790  00107E  2582               	addwf	led@i& (0+255),w,b
  5791  001080  6ED9               	movwf	fsr2l,c
  5792  001082  0E00               	movlw	high _surface_six
  5793  001084  2183               	addwfc	(led@i+1)& (0+255),w,b
  5794  001086  6EDA               	movwf	fsr2h,c
  5795  001088  50DF               	movf	indf2,w,c
  5796  00108A  6E2E               	movwf	??_led& (0+255),c
  5797  00108C  6A2F               	clrf	(??_led+1)& (0+255),c
  5798  00108E  5181               	movf	led@num& (0+255),w,b
  5799  001090  2584               	addwf	led@count& (0+255),w,b
  5800  001092  6E30               	movwf	(??_led+2)& (0+255),c
  5801  001094  0E00               	movlw	0
  5802  001096  2185               	addwfc	(led@count+1)& (0+255),w,b
  5803  001098  6E31               	movwf	(??_led+3)& (0+255),c
  5804  00109A  502E               	movf	??_led,w,c
  5805  00109C  1830               	xorwf	??_led+2,w,c
  5806  00109E  E119               	bnz	l4860
  5807  0010A0  502F               	movf	??_led+1,w,c
  5808  0010A2  1831               	xorwf	??_led+3,w,c
  5809  0010A4  A4D8               	btfss	status,2,c
  5810  0010A6  D015               	goto	l241
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;main.c: 510: RA5 = 0;
  5814  0010A8  9A80               	bcf	3968,5,c	;volatile
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;main.c: 511: if(i == 0) {
  5818  0010AA  5182               	movf	led@i& (0+255),w,b
  5819  0010AC  1183               	iorwf	(led@i+1)& (0+255),w,b
  5820  0010AE  A4D8               	btfss	status,2,c
  5821  0010B0  D007               	goto	l242
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;main.c: 512: spiWrite('a' + count);
  5825  0010B2  5184               	movf	led@count& (0+255),w,b
  5826  0010B4  0F61               	addlw	97
  5827  0010B6  EC57  F01D         	call	_spiWrite
  5828                           
  5829                           ;main.c: 513: re = spiRead();
  5830  0010BA  EC5B  F01D         	call	_spiRead	;wreg free
  5831  0010BE  D007               	goto	L35
  5832  0010C0                     l242:
  5833                           
  5834                           ;main.c: 515: spiWrite('m'+ count);
  5835  0010C0  0100               	movlb	0	; () banked
  5836  0010C2  5184               	movf	led@count& (0+255),w,b
  5837  0010C4  0F6D               	addlw	109
  5838  0010C6  EC57  F01D         	call	_spiWrite
  5839                           
  5840                           ;main.c: 516: re = spiRead();
  5841  0010CA  EC5B  F01D         	call	_spiRead	;wreg free
  5842  0010CE                     L35:
  5843  0010CE  6E52               	movwf	_re,c
  5844                           
  5845                           ;main.c: 517: }
  5846                           ;main.c: 518: RA5 = 1;
  5847  0010D0  8A80               	bsf	3968,5,c	;volatile
  5848  0010D2                     l241:
  5849  0010D2                     l4860:
  5850  0010D2  0100               	movlb	0	; () banked
  5851  0010D4  4B84               	infsnz	led@count& (0+255),f,b
  5852  0010D6  2B85               	incf	(led@count+1)& (0+255),f,b
  5853                           
  5854                           ; BSR set to: 0
  5855  0010D8  BF85               	btfsc	(led@count+1)& (0+255),7,b
  5856  0010DA  D74C               	goto	l230
  5857  0010DC  5185               	movf	(led@count+1)& (0+255),w,b
  5858  0010DE  E101               	bnz	l4864
  5859  0010E0  D743               	goto	L36
  5860  0010E2                     u5680:
  5861  0010E2                     l4864:
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;main.c: 519: }
  5865                           ;main.c: 520: }
  5866                           ;main.c: 521: _delay((unsigned long)((5)*(1000000/4000.0)));
  5867  0010E2  0EFA               	movlw	250
  5868  0010E4                     u6647:
  5869  0010E4  D000               	nop2	
  5870  0010E6  2EE8               	decfsz	wreg,f,c
  5871  0010E8  D7FD               	bra	u6647
  5872  0010EA  0100               	movlb	0	; () banked
  5873  0010EC  4B82               	infsnz	led@i& (0+255),f,b
  5874  0010EE  2B83               	incf	(led@i+1)& (0+255),f,b
  5875  0010F0  BF83               	btfsc	(led@i+1)& (0+255),7,b
  5876  0010F2  D732               	goto	l228
  5877  0010F4  5183               	movf	(led@i+1)& (0+255),w,b
  5878  0010F6  E101               	bnz	u5690
  5879  0010F8  D729               	goto	L37
  5880  0010FA                     u5690:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;main.c: 522: }
  5884                           ;main.c: 523: }
  5885  0010FA  0012               	return	
  5886  0010FC                     l227:
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;main.c: 524: else if(rotate == 'A') {
  5890                           
  5891                           ; BSR set to: 0
  5892  0010FC  0E41               	movlw	65
  5893  0010FE  1980               	xorwf	led@rotate& (0+255),w,b
  5894  001100  A4D8               	btfss	status,2,c
  5895  001102  0012               	return	
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;main.c: 525: for(i=0;i<=3;i++) {
  5899  001104  0E00               	movlw	0
  5900  001106  6F83               	movwf	(led@i+1)& (0+255),b
  5901  001108  0E00               	movlw	0
  5902  00110A  6F82               	movwf	led@i& (0+255),b
  5903                           
  5904                           ; BSR set to: 0
  5905  00110C  BF83               	btfsc	(led@i+1)& (0+255),7,b
  5906  00110E  D008               	goto	l246
  5907  001110  5183               	movf	(led@i+1)& (0+255),w,b
  5908  001112  E105               	bnz	u5710
  5909  001114  0E04               	movlw	4
  5910  001116  5D82               	subwf	led@i& (0+255),w,b
  5911  001118  B0D8               	btfsc	status,0,c
  5912  00111A  0012               	return	
  5913  00111C  D001               	goto	l246
  5914  00111E                     u5710:
  5915                           
  5916                           ; BSR set to: 0
  5917  00111E  0012               	return	
  5918  001120                     l246:
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;main.c: 526: for(count=0;count<6;count++) {
  5922                           
  5923                           ; BSR set to: 0
  5924  001120  0E00               	movlw	0
  5925  001122  6F85               	movwf	(led@count+1)& (0+255),b
  5926  001124  0E00               	movlw	0
  5927  001126  6F84               	movwf	led@count& (0+255),b
  5928                           
  5929                           ; BSR set to: 0
  5930  001128  BF85               	btfsc	(led@count+1)& (0+255),7,b
  5931  00112A  D008               	goto	l248
  5932  00112C  5185               	movf	(led@count+1)& (0+255),w,b
  5933  00112E  E105               	bnz	u5720
  5934  001130  0E06               	movlw	6
  5935  001132  5D84               	subwf	led@count& (0+255),w,b
  5936  001134  B0D8               	btfsc	status,0,c
  5937  001136  D1C5               	goto	u6030
  5938  001138  D001               	goto	l248
  5939  00113A                     u5720:
  5940                           
  5941                           ; BSR set to: 0
  5942  00113A  D1C3               	goto	u6030
  5943  00113C                     l248:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;main.c: 527: if(surface_one[i] == num+count) {
  5947                           
  5948                           ; BSR set to: 0
  5949  00113C  0E4E               	movlw	low _surface_one
  5950  00113E  2582               	addwf	led@i& (0+255),w,b
  5951  001140  6ED9               	movwf	fsr2l,c
  5952  001142  0E00               	movlw	high _surface_one
  5953  001144  2183               	addwfc	(led@i+1)& (0+255),w,b
  5954  001146  6EDA               	movwf	fsr2h,c
  5955  001148  50DF               	movf	indf2,w,c
  5956  00114A  6E2E               	movwf	??_led& (0+255),c
  5957  00114C  6A2F               	clrf	(??_led+1)& (0+255),c
  5958  00114E  5181               	movf	led@num& (0+255),w,b
  5959  001150  2584               	addwf	led@count& (0+255),w,b
  5960  001152  6E30               	movwf	(??_led+2)& (0+255),c
  5961  001154  0E00               	movlw	0
  5962  001156  2185               	addwfc	(led@count+1)& (0+255),w,b
  5963  001158  6E31               	movwf	(??_led+3)& (0+255),c
  5964  00115A  502E               	movf	??_led,w,c
  5965  00115C  1830               	xorwf	??_led+2,w,c
  5966  00115E  E137               	bnz	l4912
  5967  001160  502F               	movf	??_led+1,w,c
  5968  001162  1831               	xorwf	??_led+3,w,c
  5969  001164  A4D8               	btfss	status,2,c
  5970  001166  D033               	goto	l250
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;main.c: 528: RA0 = 0;
  5974  001168  9080               	bcf	3968,0,c	;volatile
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;main.c: 529: if(i == 0) {
  5978  00116A  5182               	movf	led@i& (0+255),w,b
  5979  00116C  1183               	iorwf	(led@i+1)& (0+255),w,b
  5980  00116E  A4D8               	btfss	status,2,c
  5981  001170  D007               	goto	l251
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;main.c: 530: spiWrite('a' + count);
  5985  001172  5184               	movf	led@count& (0+255),w,b
  5986  001174  0F61               	addlw	97
  5987  001176  EC57  F01D         	call	_spiWrite
  5988                           
  5989                           ;main.c: 531: re = spiRead();
  5990  00117A  EC5B  F01D         	call	_spiRead	;wreg free
  5991  00117E  D025               	goto	L40
  5992  001180                     l251:
  5993  001180  0100               	movlb	0	; () banked
  5994  001182  0582               	decf	led@i& (0+255),w,b
  5995  001184  1183               	iorwf	(led@i+1)& (0+255),w,b
  5996  001186  A4D8               	btfss	status,2,c
  5997  001188  D007               	goto	l253
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;main.c: 533: spiWrite('m'+ count);
  6001  00118A  5184               	movf	led@count& (0+255),w,b
  6002  00118C  0F6D               	addlw	109
  6003  00118E  EC57  F01D         	call	_spiWrite
  6004                           
  6005                           ;main.c: 534: re = spiRead();
  6006  001192  EC5B  F01D         	call	_spiRead	;wreg free
  6007  001196  D019               	goto	L40
  6008  001198                     l253:
  6009  001198  0E02               	movlw	2
  6010  00119A  0100               	movlb	0	; () banked
  6011  00119C  1982               	xorwf	led@i& (0+255),w,b
  6012  00119E  1183               	iorwf	(led@i+1)& (0+255),w,b
  6013  0011A0  A4D8               	btfss	status,2,c
  6014  0011A2  D007               	goto	l255
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;main.c: 536: spiWrite('g'+ count);
  6018  0011A4  5184               	movf	led@count& (0+255),w,b
  6019  0011A6  0F67               	addlw	103
  6020  0011A8  EC57  F01D         	call	_spiWrite
  6021                           
  6022                           ;main.c: 537: re = spiRead();
  6023  0011AC  EC5B  F01D         	call	_spiRead	;wreg free
  6024  0011B0  D00C               	goto	L40
  6025  0011B2                     l255:
  6026  0011B2  0E03               	movlw	3
  6027  0011B4  0100               	movlb	0	; () banked
  6028  0011B6  1982               	xorwf	led@i& (0+255),w,b
  6029  0011B8  1183               	iorwf	(led@i+1)& (0+255),w,b
  6030  0011BA  A4D8               	btfss	status,2,c
  6031  0011BC  D007               	goto	l257
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;main.c: 539: spiWrite('s'+ count);
  6035  0011BE  5184               	movf	led@count& (0+255),w,b
  6036  0011C0  0F73               	addlw	115
  6037  0011C2  EC57  F01D         	call	_spiWrite
  6038                           
  6039                           ;main.c: 540: re = spiRead();
  6040  0011C6  EC5B  F01D         	call	_spiRead	;wreg free
  6041  0011CA                     L40:
  6042  0011CA  6E52               	movwf	_re,c
  6043  0011CC                     l257:
  6044                           
  6045                           ;main.c: 541: }
  6046                           ;main.c: 542: RA0 = 1;
  6047  0011CC  8080               	bsf	3968,0,c	;volatile
  6048  0011CE                     l250:
  6049  0011CE                     l4912:
  6050                           
  6051                           ;main.c: 543: }
  6052                           ;main.c: 544: if(surface_two[i] == num+count) {
  6053  0011CE  0E4A               	movlw	low _surface_two
  6054  0011D0  0100               	movlb	0	; () banked
  6055  0011D2  2582               	addwf	led@i& (0+255),w,b
  6056  0011D4  6ED9               	movwf	fsr2l,c
  6057  0011D6  0E00               	movlw	high _surface_two
  6058  0011D8  2183               	addwfc	(led@i+1)& (0+255),w,b
  6059  0011DA  6EDA               	movwf	fsr2h,c
  6060  0011DC  50DF               	movf	indf2,w,c
  6061  0011DE  6E2E               	movwf	??_led& (0+255),c
  6062  0011E0  6A2F               	clrf	(??_led+1)& (0+255),c
  6063  0011E2  5181               	movf	led@num& (0+255),w,b
  6064  0011E4  2584               	addwf	led@count& (0+255),w,b
  6065  0011E6  6E30               	movwf	(??_led+2)& (0+255),c
  6066  0011E8  0E00               	movlw	0
  6067  0011EA  2185               	addwfc	(led@count+1)& (0+255),w,b
  6068  0011EC  6E31               	movwf	(??_led+3)& (0+255),c
  6069  0011EE  502E               	movf	??_led,w,c
  6070  0011F0  1830               	xorwf	??_led+2,w,c
  6071  0011F2  E137               	bnz	l4942
  6072  0011F4  502F               	movf	??_led+1,w,c
  6073  0011F6  1831               	xorwf	??_led+3,w,c
  6074  0011F8  A4D8               	btfss	status,2,c
  6075  0011FA  D033               	goto	l258
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;main.c: 545: RA1 = 0;
  6079  0011FC  9280               	bcf	3968,1,c	;volatile
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;main.c: 546: if(i == 0) {
  6083  0011FE  5182               	movf	led@i& (0+255),w,b
  6084  001200  1183               	iorwf	(led@i+1)& (0+255),w,b
  6085  001202  A4D8               	btfss	status,2,c
  6086  001204  D007               	goto	l259
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;main.c: 547: spiWrite('a' + count);
  6090  001206  5184               	movf	led@count& (0+255),w,b
  6091  001208  0F61               	addlw	97
  6092  00120A  EC57  F01D         	call	_spiWrite
  6093                           
  6094                           ;main.c: 548: re = spiRead();
  6095  00120E  EC5B  F01D         	call	_spiRead	;wreg free
  6096  001212  D025               	goto	L43
  6097  001214                     l259:
  6098  001214  0100               	movlb	0	; () banked
  6099  001216  0582               	decf	led@i& (0+255),w,b
  6100  001218  1183               	iorwf	(led@i+1)& (0+255),w,b
  6101  00121A  A4D8               	btfss	status,2,c
  6102  00121C  D007               	goto	l261
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;main.c: 550: spiWrite('m'+ count);
  6106  00121E  5184               	movf	led@count& (0+255),w,b
  6107  001220  0F6D               	addlw	109
  6108  001222  EC57  F01D         	call	_spiWrite
  6109                           
  6110                           ;main.c: 551: re = spiRead();
  6111  001226  EC5B  F01D         	call	_spiRead	;wreg free
  6112  00122A  D019               	goto	L43
  6113  00122C                     l261:
  6114  00122C  0E02               	movlw	2
  6115  00122E  0100               	movlb	0	; () banked
  6116  001230  1982               	xorwf	led@i& (0+255),w,b
  6117  001232  1183               	iorwf	(led@i+1)& (0+255),w,b
  6118  001234  A4D8               	btfss	status,2,c
  6119  001236  D007               	goto	l263
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;main.c: 553: spiWrite('g'+ count);
  6123  001238  5184               	movf	led@count& (0+255),w,b
  6124  00123A  0F67               	addlw	103
  6125  00123C  EC57  F01D         	call	_spiWrite
  6126                           
  6127                           ;main.c: 554: re = spiRead();
  6128  001240  EC5B  F01D         	call	_spiRead	;wreg free
  6129  001244  D00C               	goto	L43
  6130  001246                     l263:
  6131  001246  0E03               	movlw	3
  6132  001248  0100               	movlb	0	; () banked
  6133  00124A  1982               	xorwf	led@i& (0+255),w,b
  6134  00124C  1183               	iorwf	(led@i+1)& (0+255),w,b
  6135  00124E  A4D8               	btfss	status,2,c
  6136  001250  D007               	goto	l265
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;main.c: 556: spiWrite('s'+ count);
  6140  001252  5184               	movf	led@count& (0+255),w,b
  6141  001254  0F73               	addlw	115
  6142  001256  EC57  F01D         	call	_spiWrite
  6143                           
  6144                           ;main.c: 557: re = spiRead();
  6145  00125A  EC5B  F01D         	call	_spiRead	;wreg free
  6146  00125E                     L43:
  6147  00125E  6E52               	movwf	_re,c
  6148  001260                     l265:
  6149                           
  6150                           ;main.c: 558: }
  6151                           ;main.c: 559: RA1 = 1;
  6152  001260  8280               	bsf	3968,1,c	;volatile
  6153  001262                     l258:
  6154  001262                     l4942:
  6155                           
  6156                           ;main.c: 560: }
  6157                           ;main.c: 561: if(surface_three[i] == num+count) {
  6158  001262  0E46               	movlw	low _surface_three
  6159  001264  0100               	movlb	0	; () banked
  6160  001266  2582               	addwf	led@i& (0+255),w,b
  6161  001268  6ED9               	movwf	fsr2l,c
  6162  00126A  0E00               	movlw	high _surface_three
  6163  00126C  2183               	addwfc	(led@i+1)& (0+255),w,b
  6164  00126E  6EDA               	movwf	fsr2h,c
  6165  001270  50DF               	movf	indf2,w,c
  6166  001272  6E2E               	movwf	??_led& (0+255),c
  6167  001274  6A2F               	clrf	(??_led+1)& (0+255),c
  6168  001276  5181               	movf	led@num& (0+255),w,b
  6169  001278  2584               	addwf	led@count& (0+255),w,b
  6170  00127A  6E30               	movwf	(??_led+2)& (0+255),c
  6171  00127C  0E00               	movlw	0
  6172  00127E  2185               	addwfc	(led@count+1)& (0+255),w,b
  6173  001280  6E31               	movwf	(??_led+3)& (0+255),c
  6174  001282  502E               	movf	??_led,w,c
  6175  001284  1830               	xorwf	??_led+2,w,c
  6176  001286  E137               	bnz	l4972
  6177  001288  502F               	movf	??_led+1,w,c
  6178  00128A  1831               	xorwf	??_led+3,w,c
  6179  00128C  A4D8               	btfss	status,2,c
  6180  00128E  D033               	goto	l266
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;main.c: 562: RA2 = 0;
  6184  001290  9480               	bcf	3968,2,c	;volatile
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;main.c: 563: if(i == 0) {
  6188  001292  5182               	movf	led@i& (0+255),w,b
  6189  001294  1183               	iorwf	(led@i+1)& (0+255),w,b
  6190  001296  A4D8               	btfss	status,2,c
  6191  001298  D007               	goto	l267
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;main.c: 564: spiWrite('a' + count);
  6195  00129A  5184               	movf	led@count& (0+255),w,b
  6196  00129C  0F61               	addlw	97
  6197  00129E  EC57  F01D         	call	_spiWrite
  6198                           
  6199                           ;main.c: 565: re = spiRead();
  6200  0012A2  EC5B  F01D         	call	_spiRead	;wreg free
  6201  0012A6  D025               	goto	L46
  6202  0012A8                     l267:
  6203  0012A8  0100               	movlb	0	; () banked
  6204  0012AA  0582               	decf	led@i& (0+255),w,b
  6205  0012AC  1183               	iorwf	(led@i+1)& (0+255),w,b
  6206  0012AE  A4D8               	btfss	status,2,c
  6207  0012B0  D007               	goto	l269
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;main.c: 567: spiWrite('m'+ count);
  6211  0012B2  5184               	movf	led@count& (0+255),w,b
  6212  0012B4  0F6D               	addlw	109
  6213  0012B6  EC57  F01D         	call	_spiWrite
  6214                           
  6215                           ;main.c: 568: re = spiRead();
  6216  0012BA  EC5B  F01D         	call	_spiRead	;wreg free
  6217  0012BE  D019               	goto	L46
  6218  0012C0                     l269:
  6219  0012C0  0E02               	movlw	2
  6220  0012C2  0100               	movlb	0	; () banked
  6221  0012C4  1982               	xorwf	led@i& (0+255),w,b
  6222  0012C6  1183               	iorwf	(led@i+1)& (0+255),w,b
  6223  0012C8  A4D8               	btfss	status,2,c
  6224  0012CA  D007               	goto	l271
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;main.c: 570: spiWrite('g'+ count);
  6228  0012CC  5184               	movf	led@count& (0+255),w,b
  6229  0012CE  0F67               	addlw	103
  6230  0012D0  EC57  F01D         	call	_spiWrite
  6231                           
  6232                           ;main.c: 571: re = spiRead();
  6233  0012D4  EC5B  F01D         	call	_spiRead	;wreg free
  6234  0012D8  D00C               	goto	L46
  6235  0012DA                     l271:
  6236  0012DA  0E03               	movlw	3
  6237  0012DC  0100               	movlb	0	; () banked
  6238  0012DE  1982               	xorwf	led@i& (0+255),w,b
  6239  0012E0  1183               	iorwf	(led@i+1)& (0+255),w,b
  6240  0012E2  A4D8               	btfss	status,2,c
  6241  0012E4  D007               	goto	l273
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;main.c: 573: spiWrite('s'+ count);
  6245  0012E6  5184               	movf	led@count& (0+255),w,b
  6246  0012E8  0F73               	addlw	115
  6247  0012EA  EC57  F01D         	call	_spiWrite
  6248                           
  6249                           ;main.c: 574: re = spiRead();
  6250  0012EE  EC5B  F01D         	call	_spiRead	;wreg free
  6251  0012F2                     L46:
  6252  0012F2  6E52               	movwf	_re,c
  6253  0012F4                     l273:
  6254                           
  6255                           ;main.c: 575: }
  6256                           ;main.c: 576: RA2 = 1;
  6257  0012F4  8480               	bsf	3968,2,c	;volatile
  6258  0012F6                     l266:
  6259  0012F6                     l4972:
  6260                           
  6261                           ;main.c: 577: }
  6262                           ;main.c: 578: if(surface_four[i] == num+count) {
  6263  0012F6  0E42               	movlw	low _surface_four
  6264  0012F8  0100               	movlb	0	; () banked
  6265  0012FA  2582               	addwf	led@i& (0+255),w,b
  6266  0012FC  6ED9               	movwf	fsr2l,c
  6267  0012FE  0E00               	movlw	high _surface_four
  6268  001300  2183               	addwfc	(led@i+1)& (0+255),w,b
  6269  001302  6EDA               	movwf	fsr2h,c
  6270  001304  50DF               	movf	indf2,w,c
  6271  001306  6E2E               	movwf	??_led& (0+255),c
  6272  001308  6A2F               	clrf	(??_led+1)& (0+255),c
  6273  00130A  5181               	movf	led@num& (0+255),w,b
  6274  00130C  2584               	addwf	led@count& (0+255),w,b
  6275  00130E  6E30               	movwf	(??_led+2)& (0+255),c
  6276  001310  0E00               	movlw	0
  6277  001312  2185               	addwfc	(led@count+1)& (0+255),w,b
  6278  001314  6E31               	movwf	(??_led+3)& (0+255),c
  6279  001316  502E               	movf	??_led,w,c
  6280  001318  1830               	xorwf	??_led+2,w,c
  6281  00131A  E137               	bnz	l5002
  6282  00131C  502F               	movf	??_led+1,w,c
  6283  00131E  1831               	xorwf	??_led+3,w,c
  6284  001320  A4D8               	btfss	status,2,c
  6285  001322  D033               	goto	l274
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;main.c: 579: RA3 = 0;
  6289  001324  9680               	bcf	3968,3,c	;volatile
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;main.c: 580: if(i == 0) {
  6293  001326  5182               	movf	led@i& (0+255),w,b
  6294  001328  1183               	iorwf	(led@i+1)& (0+255),w,b
  6295  00132A  A4D8               	btfss	status,2,c
  6296  00132C  D007               	goto	l275
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;main.c: 581: spiWrite('a' + count);
  6300  00132E  5184               	movf	led@count& (0+255),w,b
  6301  001330  0F61               	addlw	97
  6302  001332  EC57  F01D         	call	_spiWrite
  6303                           
  6304                           ;main.c: 582: re = spiRead();
  6305  001336  EC5B  F01D         	call	_spiRead	;wreg free
  6306  00133A  D025               	goto	L49
  6307  00133C                     l275:
  6308  00133C  0100               	movlb	0	; () banked
  6309  00133E  0582               	decf	led@i& (0+255),w,b
  6310  001340  1183               	iorwf	(led@i+1)& (0+255),w,b
  6311  001342  A4D8               	btfss	status,2,c
  6312  001344  D007               	goto	l277
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;main.c: 584: spiWrite('m'+ count);
  6316  001346  5184               	movf	led@count& (0+255),w,b
  6317  001348  0F6D               	addlw	109
  6318  00134A  EC57  F01D         	call	_spiWrite
  6319                           
  6320                           ;main.c: 585: re = spiRead();
  6321  00134E  EC5B  F01D         	call	_spiRead	;wreg free
  6322  001352  D019               	goto	L49
  6323  001354                     l277:
  6324  001354  0E02               	movlw	2
  6325  001356  0100               	movlb	0	; () banked
  6326  001358  1982               	xorwf	led@i& (0+255),w,b
  6327  00135A  1183               	iorwf	(led@i+1)& (0+255),w,b
  6328  00135C  A4D8               	btfss	status,2,c
  6329  00135E  D007               	goto	l279
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;main.c: 587: spiWrite('g'+ count);
  6333  001360  5184               	movf	led@count& (0+255),w,b
  6334  001362  0F67               	addlw	103
  6335  001364  EC57  F01D         	call	_spiWrite
  6336                           
  6337                           ;main.c: 588: re = spiRead();
  6338  001368  EC5B  F01D         	call	_spiRead	;wreg free
  6339  00136C  D00C               	goto	L49
  6340  00136E                     l279:
  6341  00136E  0E03               	movlw	3
  6342  001370  0100               	movlb	0	; () banked
  6343  001372  1982               	xorwf	led@i& (0+255),w,b
  6344  001374  1183               	iorwf	(led@i+1)& (0+255),w,b
  6345  001376  A4D8               	btfss	status,2,c
  6346  001378  D007               	goto	l281
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;main.c: 590: spiWrite('s'+ count);
  6350  00137A  5184               	movf	led@count& (0+255),w,b
  6351  00137C  0F73               	addlw	115
  6352  00137E  EC57  F01D         	call	_spiWrite
  6353                           
  6354                           ;main.c: 591: re = spiRead();
  6355  001382  EC5B  F01D         	call	_spiRead	;wreg free
  6356  001386                     L49:
  6357  001386  6E52               	movwf	_re,c
  6358  001388                     l281:
  6359                           
  6360                           ;main.c: 592: }
  6361                           ;main.c: 593: RA3 = 1;
  6362  001388  8680               	bsf	3968,3,c	;volatile
  6363  00138A                     l274:
  6364  00138A                     l5002:
  6365                           
  6366                           ;main.c: 594: }
  6367                           ;main.c: 595: if(surface_five[i] == num+count) {
  6368  00138A  0E3E               	movlw	low _surface_five
  6369  00138C  0100               	movlb	0	; () banked
  6370  00138E  2582               	addwf	led@i& (0+255),w,b
  6371  001390  6ED9               	movwf	fsr2l,c
  6372  001392  0E00               	movlw	high _surface_five
  6373  001394  2183               	addwfc	(led@i+1)& (0+255),w,b
  6374  001396  6EDA               	movwf	fsr2h,c
  6375  001398  50DF               	movf	indf2,w,c
  6376  00139A  6E2E               	movwf	??_led& (0+255),c
  6377  00139C  6A2F               	clrf	(??_led+1)& (0+255),c
  6378  00139E  5181               	movf	led@num& (0+255),w,b
  6379  0013A0  2584               	addwf	led@count& (0+255),w,b
  6380  0013A2  6E30               	movwf	(??_led+2)& (0+255),c
  6381  0013A4  0E00               	movlw	0
  6382  0013A6  2185               	addwfc	(led@count+1)& (0+255),w,b
  6383  0013A8  6E31               	movwf	(??_led+3)& (0+255),c
  6384  0013AA  502E               	movf	??_led,w,c
  6385  0013AC  1830               	xorwf	??_led+2,w,c
  6386  0013AE  E137               	bnz	l5032
  6387  0013B0  502F               	movf	??_led+1,w,c
  6388  0013B2  1831               	xorwf	??_led+3,w,c
  6389  0013B4  A4D8               	btfss	status,2,c
  6390  0013B6  D033               	goto	l282
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;main.c: 596: RA4 = 0;
  6394  0013B8  9880               	bcf	3968,4,c	;volatile
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;main.c: 597: if(i == 0) {
  6398  0013BA  5182               	movf	led@i& (0+255),w,b
  6399  0013BC  1183               	iorwf	(led@i+1)& (0+255),w,b
  6400  0013BE  A4D8               	btfss	status,2,c
  6401  0013C0  D007               	goto	l283
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;main.c: 598: spiWrite('a' + count);
  6405  0013C2  5184               	movf	led@count& (0+255),w,b
  6406  0013C4  0F61               	addlw	97
  6407  0013C6  EC57  F01D         	call	_spiWrite
  6408                           
  6409                           ;main.c: 599: re = spiRead();
  6410  0013CA  EC5B  F01D         	call	_spiRead	;wreg free
  6411  0013CE  D025               	goto	L52
  6412  0013D0                     l283:
  6413  0013D0  0100               	movlb	0	; () banked
  6414  0013D2  0582               	decf	led@i& (0+255),w,b
  6415  0013D4  1183               	iorwf	(led@i+1)& (0+255),w,b
  6416  0013D6  A4D8               	btfss	status,2,c
  6417  0013D8  D007               	goto	l285
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;main.c: 601: spiWrite('m'+ count);
  6421  0013DA  5184               	movf	led@count& (0+255),w,b
  6422  0013DC  0F6D               	addlw	109
  6423  0013DE  EC57  F01D         	call	_spiWrite
  6424                           
  6425                           ;main.c: 602: re = spiRead();
  6426  0013E2  EC5B  F01D         	call	_spiRead	;wreg free
  6427  0013E6  D019               	goto	L52
  6428  0013E8                     l285:
  6429  0013E8  0E02               	movlw	2
  6430  0013EA  0100               	movlb	0	; () banked
  6431  0013EC  1982               	xorwf	led@i& (0+255),w,b
  6432  0013EE  1183               	iorwf	(led@i+1)& (0+255),w,b
  6433  0013F0  A4D8               	btfss	status,2,c
  6434  0013F2  D007               	goto	l287
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;main.c: 604: spiWrite('g'+ count);
  6438  0013F4  5184               	movf	led@count& (0+255),w,b
  6439  0013F6  0F67               	addlw	103
  6440  0013F8  EC57  F01D         	call	_spiWrite
  6441                           
  6442                           ;main.c: 605: re = spiRead();
  6443  0013FC  EC5B  F01D         	call	_spiRead	;wreg free
  6444  001400  D00C               	goto	L52
  6445  001402                     l287:
  6446  001402  0E03               	movlw	3
  6447  001404  0100               	movlb	0	; () banked
  6448  001406  1982               	xorwf	led@i& (0+255),w,b
  6449  001408  1183               	iorwf	(led@i+1)& (0+255),w,b
  6450  00140A  A4D8               	btfss	status,2,c
  6451  00140C  D007               	goto	l289
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;main.c: 607: spiWrite('s'+ count);
  6455  00140E  5184               	movf	led@count& (0+255),w,b
  6456  001410  0F73               	addlw	115
  6457  001412  EC57  F01D         	call	_spiWrite
  6458                           
  6459                           ;main.c: 608: re = spiRead();
  6460  001416  EC5B  F01D         	call	_spiRead	;wreg free
  6461  00141A                     L52:
  6462  00141A  6E52               	movwf	_re,c
  6463  00141C                     l289:
  6464                           
  6465                           ;main.c: 609: }
  6466                           ;main.c: 610: RA4 = 1;
  6467  00141C  8880               	bsf	3968,4,c	;volatile
  6468  00141E                     l282:
  6469  00141E                     l5032:
  6470                           
  6471                           ;main.c: 611: }
  6472                           ;main.c: 612: if(surface_six[i] == num+count) {
  6473  00141E  0E3A               	movlw	low _surface_six
  6474  001420  0100               	movlb	0	; () banked
  6475  001422  2582               	addwf	led@i& (0+255),w,b
  6476  001424  6ED9               	movwf	fsr2l,c
  6477  001426  0E00               	movlw	high _surface_six
  6478  001428  2183               	addwfc	(led@i+1)& (0+255),w,b
  6479  00142A  6EDA               	movwf	fsr2h,c
  6480  00142C  50DF               	movf	indf2,w,c
  6481  00142E  6E2E               	movwf	??_led& (0+255),c
  6482  001430  6A2F               	clrf	(??_led+1)& (0+255),c
  6483  001432  5181               	movf	led@num& (0+255),w,b
  6484  001434  2584               	addwf	led@count& (0+255),w,b
  6485  001436  6E30               	movwf	(??_led+2)& (0+255),c
  6486  001438  0E00               	movlw	0
  6487  00143A  2185               	addwfc	(led@count+1)& (0+255),w,b
  6488  00143C  6E31               	movwf	(??_led+3)& (0+255),c
  6489  00143E  502E               	movf	??_led,w,c
  6490  001440  1830               	xorwf	??_led+2,w,c
  6491  001442  E137               	bnz	l5062
  6492  001444  502F               	movf	??_led+1,w,c
  6493  001446  1831               	xorwf	??_led+3,w,c
  6494  001448  A4D8               	btfss	status,2,c
  6495  00144A  D033               	goto	l290
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;main.c: 613: RA5 = 0;
  6499  00144C  9A80               	bcf	3968,5,c	;volatile
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;main.c: 614: if(i == 0) {
  6503  00144E  5182               	movf	led@i& (0+255),w,b
  6504  001450  1183               	iorwf	(led@i+1)& (0+255),w,b
  6505  001452  A4D8               	btfss	status,2,c
  6506  001454  D007               	goto	l291
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;main.c: 615: spiWrite('a' + count);
  6510  001456  5184               	movf	led@count& (0+255),w,b
  6511  001458  0F61               	addlw	97
  6512  00145A  EC57  F01D         	call	_spiWrite
  6513                           
  6514                           ;main.c: 616: re = spiRead();
  6515  00145E  EC5B  F01D         	call	_spiRead	;wreg free
  6516  001462  D025               	goto	L55
  6517  001464                     l291:
  6518  001464  0100               	movlb	0	; () banked
  6519  001466  0582               	decf	led@i& (0+255),w,b
  6520  001468  1183               	iorwf	(led@i+1)& (0+255),w,b
  6521  00146A  A4D8               	btfss	status,2,c
  6522  00146C  D007               	goto	l293
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;main.c: 618: spiWrite('m'+ count);
  6526  00146E  5184               	movf	led@count& (0+255),w,b
  6527  001470  0F6D               	addlw	109
  6528  001472  EC57  F01D         	call	_spiWrite
  6529                           
  6530                           ;main.c: 619: re = spiRead();
  6531  001476  EC5B  F01D         	call	_spiRead	;wreg free
  6532  00147A  D019               	goto	L55
  6533  00147C                     l293:
  6534  00147C  0E02               	movlw	2
  6535  00147E  0100               	movlb	0	; () banked
  6536  001480  1982               	xorwf	led@i& (0+255),w,b
  6537  001482  1183               	iorwf	(led@i+1)& (0+255),w,b
  6538  001484  A4D8               	btfss	status,2,c
  6539  001486  D007               	goto	l295
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;main.c: 621: spiWrite('g'+ count);
  6543  001488  5184               	movf	led@count& (0+255),w,b
  6544  00148A  0F67               	addlw	103
  6545  00148C  EC57  F01D         	call	_spiWrite
  6546                           
  6547                           ;main.c: 622: re = spiRead();
  6548  001490  EC5B  F01D         	call	_spiRead	;wreg free
  6549  001494  D00C               	goto	L55
  6550  001496                     l295:
  6551  001496  0E03               	movlw	3
  6552  001498  0100               	movlb	0	; () banked
  6553  00149A  1982               	xorwf	led@i& (0+255),w,b
  6554  00149C  1183               	iorwf	(led@i+1)& (0+255),w,b
  6555  00149E  A4D8               	btfss	status,2,c
  6556  0014A0  D007               	goto	l297
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;main.c: 624: spiWrite('s'+ count);
  6560  0014A2  5184               	movf	led@count& (0+255),w,b
  6561  0014A4  0F73               	addlw	115
  6562  0014A6  EC57  F01D         	call	_spiWrite
  6563                           
  6564                           ;main.c: 625: re = spiRead();
  6565  0014AA  EC5B  F01D         	call	_spiRead	;wreg free
  6566  0014AE                     L55:
  6567  0014AE  6E52               	movwf	_re,c
  6568  0014B0                     l297:
  6569                           
  6570                           ;main.c: 626: }
  6571                           ;main.c: 627: RA5 = 1;
  6572  0014B0  8A80               	bsf	3968,5,c	;volatile
  6573  0014B2                     l290:
  6574  0014B2                     l5062:
  6575  0014B2  0100               	movlb	0	; () banked
  6576  0014B4  4B84               	infsnz	led@count& (0+255),f,b
  6577  0014B6  2B85               	incf	(led@count+1)& (0+255),f,b
  6578                           
  6579                           ; BSR set to: 0
  6580  0014B8  BF85               	btfsc	(led@count+1)& (0+255),7,b
  6581  0014BA  D640               	goto	l248
  6582  0014BC  5185               	movf	(led@count+1)& (0+255),w,b
  6583  0014BE  E101               	bnz	l5066
  6584  0014C0  D637               	goto	L56
  6585  0014C2                     u6030:
  6586  0014C2                     l5066:
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;main.c: 628: }
  6590                           ;main.c: 629: }
  6591                           ;main.c: 630: _delay((unsigned long)((5)*(1000000/4000.0)));
  6592  0014C2  0EFA               	movlw	250
  6593  0014C4                     u6657:
  6594  0014C4  D000               	nop2	
  6595  0014C6  2EE8               	decfsz	wreg,f,c
  6596  0014C8  D7FD               	bra	u6657
  6597  0014CA  0100               	movlb	0	; () banked
  6598  0014CC  4B82               	infsnz	led@i& (0+255),f,b
  6599  0014CE  2B83               	incf	(led@i+1)& (0+255),f,b
  6600  0014D0  BF83               	btfsc	(led@i+1)& (0+255),7,b
  6601  0014D2  D626               	goto	l246
  6602  0014D4  5183               	movf	(led@i+1)& (0+255),w,b
  6603  0014D6  E101               	bnz	l298
  6604  0014D8  D61D               	goto	L57
  6605  0014DA                     l298:
  6606                           
  6607                           ; BSR set to: 0
  6608  0014DA  0012               	return		;funcret
  6609  0014DC                     __end_of_led:
  6610                           	opt stack 0
  6611                           tblptru	equ	0xFF8
  6612                           tblptrh	equ	0xFF7
  6613                           tblptrl	equ	0xFF6
  6614                           tablat	equ	0xFF5
  6615                           intcon	equ	0xFF2
  6616                           postinc0	equ	0xFEE
  6617                           wreg	equ	0xFE8
  6618                           indf1	equ	0xFE7
  6619                           postdec1	equ	0xFE5
  6620                           fsr1h	equ	0xFE2
  6621                           fsr1l	equ	0xFE1
  6622                           indf2	equ	0xFDF
  6623                           fsr2h	equ	0xFDA
  6624                           fsr2l	equ	0xFD9
  6625                           status	equ	0xFD8
  6626                           
  6627 ;; *************** function _spiWrite *****************
  6628 ;; Defined at:
  6629 ;;		line 34 in file "spi.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  dat             1    wreg     unsigned char 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  dat             1   44[COMRAM] unsigned char 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		wreg
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6643 ;;      Params:         0       0       0       0       0       0       0
  6644 ;;      Locals:         1       0       0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0
  6646 ;;      Totals:         1       0       0       0       0       0       0
  6647 ;;Total ram usage:        1 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:    5
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_led
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text18
  6658  003AAE                     __ptext18:
  6659                           	opt stack 0
  6660  003AAE                     _spiWrite:
  6661                           	opt stack 23
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;incstack = 0
  6665                           ;spiWrite@dat stored from wreg
  6666  003AAE  6E2D               	movwf	spiWrite@dat,c
  6667                           
  6668                           ;spi.c: 36: SSPBUF = dat;
  6669  003AB0  C02D  FFC9         	movff	spiWrite@dat,4041	;volatile
  6670  003AB4  0012               	return		;funcret
  6671  003AB6                     __end_of_spiWrite:
  6672                           	opt stack 0
  6673                           tblptru	equ	0xFF8
  6674                           tblptrh	equ	0xFF7
  6675                           tblptrl	equ	0xFF6
  6676                           tablat	equ	0xFF5
  6677                           intcon	equ	0xFF2
  6678                           postinc0	equ	0xFEE
  6679                           wreg	equ	0xFE8
  6680                           indf1	equ	0xFE7
  6681                           postdec1	equ	0xFE5
  6682                           fsr1h	equ	0xFE2
  6683                           fsr1l	equ	0xFE1
  6684                           indf2	equ	0xFDF
  6685                           fsr2h	equ	0xFDA
  6686                           fsr2l	equ	0xFD9
  6687                           status	equ	0xFD8
  6688                           
  6689 ;; *************** function _spiRead *****************
  6690 ;; Defined at:
  6691 ;;		line 47 in file "spi.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;		None
  6694 ;; Auto vars:     Size  Location     Type
  6695 ;;		None
  6696 ;; Return value:  Size  Location     Type
  6697 ;;                  1    wreg      unsigned char 
  6698 ;; Registers used:
  6699 ;;		wreg, status,2, cstack
  6700 ;; Tracked objects:
  6701 ;;		On entry : 0/0
  6702 ;;		On exit  : 0/0
  6703 ;;		Unchanged: 0/0
  6704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6705 ;;      Params:         0       0       0       0       0       0       0
  6706 ;;      Locals:         0       0       0       0       0       0       0
  6707 ;;      Temps:          0       0       0       0       0       0       0
  6708 ;;      Totals:         0       0       0       0       0       0       0
  6709 ;;Total ram usage:        0 bytes
  6710 ;; Hardware stack levels used:    1
  6711 ;; Hardware stack levels required when called:    6
  6712 ;; This function calls:
  6713 ;;		_spiReceiveWait
  6714 ;; This function is called by:
  6715 ;;		_led
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text19
  6720  003AB6                     __ptext19:
  6721                           	opt stack 0
  6722  003AB6                     _spiRead:
  6723                           	opt stack 22
  6724                           
  6725                           ;spi.c: 49: spiReceiveWait();
  6726                           
  6727                           ;incstack = 0
  6728  003AB6  EC67  F01D         	call	_spiReceiveWait	;wreg free
  6729                           
  6730                           ;spi.c: 50: return(SSPBUF);
  6731  003ABA  50C9               	movf	4041,w,c	;volatile
  6732  003ABC  0012               	return	
  6733  003ABE                     __end_of_spiRead:
  6734                           	opt stack 0
  6735                           tblptru	equ	0xFF8
  6736                           tblptrh	equ	0xFF7
  6737                           tblptrl	equ	0xFF6
  6738                           tablat	equ	0xFF5
  6739                           intcon	equ	0xFF2
  6740                           postinc0	equ	0xFEE
  6741                           wreg	equ	0xFE8
  6742                           indf1	equ	0xFE7
  6743                           postdec1	equ	0xFE5
  6744                           fsr1h	equ	0xFE2
  6745                           fsr1l	equ	0xFE1
  6746                           indf2	equ	0xFDF
  6747                           fsr2h	equ	0xFDA
  6748                           fsr2l	equ	0xFD9
  6749                           status	equ	0xFD8
  6750                           
  6751 ;; *************** function _spiReceiveWait *****************
  6752 ;; Defined at:
  6753 ;;		line 29 in file "spi.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;		None
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;		None
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      void 
  6760 ;; Registers used:
  6761 ;;		None
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6767 ;;      Params:         0       0       0       0       0       0       0
  6768 ;;      Locals:         0       0       0       0       0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0
  6770 ;;      Totals:         0       0       0       0       0       0       0
  6771 ;;Total ram usage:        0 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    5
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		_spiRead
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text20
  6782  003ACE                     __ptext20:
  6783                           	opt stack 0
  6784  003ACE                     _spiReceiveWait:
  6785                           	opt stack 22
  6786                           
  6787                           ;spi.c: 31: while ( !SSPSTATbits.BF );
  6788                           
  6789                           ;incstack = 0
  6790  003ACE  B0C7               	btfsc	4039,0,c	;volatile
  6791  003AD0  0012               	return	
  6792  003AD2  D7FD               	goto	_spiReceiveWait
  6793  003AD4                     __end_of_spiReceiveWait:
  6794                           	opt stack 0
  6795                           tblptru	equ	0xFF8
  6796                           tblptrh	equ	0xFF7
  6797                           tblptrl	equ	0xFF6
  6798                           tablat	equ	0xFF5
  6799                           intcon	equ	0xFF2
  6800                           postinc0	equ	0xFEE
  6801                           wreg	equ	0xFE8
  6802                           indf1	equ	0xFE7
  6803                           postdec1	equ	0xFE5
  6804                           fsr1h	equ	0xFE2
  6805                           fsr1l	equ	0xFE1
  6806                           indf2	equ	0xFDF
  6807                           fsr2h	equ	0xFDA
  6808                           fsr2l	equ	0xFD9
  6809                           status	equ	0xFD8
  6810                           
  6811 ;; *************** function _scramble *****************
  6812 ;; Defined at:
  6813 ;;		line 635 in file "main.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  i               2   42[COMRAM] int 
  6818 ;;  random          2   40[COMRAM] int 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6828 ;;      Params:         0       0       0       0       0       0       0
  6829 ;;      Locals:         4       0       0       0       0       0       0
  6830 ;;      Temps:         20       0       0       0       0       0       0
  6831 ;;      Totals:        24       0       0       0       0       0       0
  6832 ;;Total ram usage:       24 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    4
  6835 ;; This function calls:
  6836 ;;		___awmod
  6837 ;;		_rand
  6838 ;;		_srand
  6839 ;;		i2_B
  6840 ;;		i2_Bi
  6841 ;;		i2_D
  6842 ;;		i2_Di
  6843 ;;		i2_F
  6844 ;;		i2_Fi
  6845 ;;		i2_L
  6846 ;;		i2_Li
  6847 ;;		i2_R
  6848 ;;		i2_Ri
  6849 ;;		i2_U
  6850 ;;		i2_Ui
  6851 ;; This function is called by:
  6852 ;;		Interrupt level 2
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	intcode
  6857  000008                     __pintcode:
  6858                           	opt stack 0
  6859  000008                     _scramble:
  6860                           	opt stack 22
  6861                           
  6862                           ;incstack = 0
  6863  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6864  00000A  ED7E  F011         	call	int_func,f	;refresh shadow registers
  6865                           tblptru	equ	0xFF8
  6866                           tblptrh	equ	0xFF7
  6867                           tblptrl	equ	0xFF6
  6868                           tablat	equ	0xFF5
  6869                           intcon	equ	0xFF2
  6870                           postinc0	equ	0xFEE
  6871                           wreg	equ	0xFE8
  6872                           indf1	equ	0xFE7
  6873                           postdec1	equ	0xFE5
  6874                           fsr1h	equ	0xFE2
  6875                           fsr1l	equ	0xFE1
  6876                           indf2	equ	0xFDF
  6877                           fsr2h	equ	0xFDA
  6878                           fsr2l	equ	0xFD9
  6879                           status	equ	0xFD8
  6880                           
  6881                           	psect	intcode_body
  6882  0022FC                     __pintcode_body:
  6883                           	opt stack 22
  6884  0022FC                     int_func:
  6885                           	opt stack 22
  6886  0022FC  0006               	pop		; remove dummy address from shadow register refresh
  6887  0022FE  CFFA F017          	movff	pclath,??_scramble+2
  6888  002302  CFFB F018          	movff	pclatu,??_scramble+3
  6889  002306  CFE9 F019          	movff	fsr0l,??_scramble+4
  6890  00230A  CFEA F01A          	movff	fsr0h,??_scramble+5
  6891  00230E  CFE1 F01B          	movff	fsr1l,??_scramble+6
  6892  002312  CFE2 F01C          	movff	fsr1h,??_scramble+7
  6893  002316  CFD9 F01D          	movff	fsr2l,??_scramble+8
  6894  00231A  CFDA F01E          	movff	fsr2h,??_scramble+9
  6895  00231E  CFF3 F01F          	movff	prodl,??_scramble+10
  6896  002322  CFF4 F020          	movff	prodh,??_scramble+11
  6897  002326  CFF6 F021          	movff	tblptrl,??_scramble+12
  6898  00232A  CFF7 F022          	movff	tblptrh,??_scramble+13
  6899  00232E  CFF8 F023          	movff	tblptru,??_scramble+14
  6900  002332  CFF5 F024          	movff	tablat,??_scramble+15
  6901  002336  C053  F025         	movff	btemp,??_scramble+16
  6902  00233A  C054  F026         	movff	btemp+1,??_scramble+17
  6903  00233E  C055  F027         	movff	btemp+2,??_scramble+18
  6904  002342  C056  F028         	movff	btemp+3,??_scramble+19
  6905                           
  6906                           ;main.c: 637: int i;
  6907                           ;main.c: 638: int random;
  6908                           ;main.c: 639: srand(TMR0);
  6909  002346  CFD6 F001          	movff	4054,srand@x	;volatile
  6910  00234A  CFD7 F002          	movff	4055,srand@x+1	;volatile
  6911  00234E  EC50  F01D         	call	_srand	;wreg free
  6912                           
  6913                           ;main.c: 640: for(i=1;i<=20;i++) {
  6914  002352  0E00               	movlw	0
  6915  002354  6E2C               	movwf	scramble@i+1,c
  6916  002356  0E01               	movlw	1
  6917  002358  6E2B               	movwf	scramble@i,c
  6918  00235A  BE2C               	btfsc	scramble@i+1,7,c
  6919  00235C  D003               	goto	i2l303
  6920  00235E  502C               	movf	scramble@i+1,w,c
  6921  002360  E16F               	bnz	i2l304
  6922  002362  D06A               	goto	L58
  6923  002364                     i2l303:
  6924                           
  6925                           ;main.c: 641: random = rand() % 12 + 1;
  6926  002364  ECEF  F01C         	call	_rand	;wreg free
  6927  002368  C00D  F00F         	movff	?_rand,___awmod@dividend
  6928  00236C  C00E  F010         	movff	?_rand+1,___awmod@dividend+1
  6929  002370  0E00               	movlw	0
  6930  002372  6E12               	movwf	___awmod@divisor+1,c
  6931  002374  0E0C               	movlw	12
  6932  002376  6E11               	movwf	___awmod@divisor,c
  6933  002378  EC8C  F01C         	call	___awmod	;wreg free
  6934  00237C  0E01               	movlw	1
  6935  00237E  240F               	addwf	?___awmod,w,c
  6936  002380  6E29               	movwf	scramble@random,c
  6937  002382  0E00               	movlw	0
  6938  002384  2010               	addwfc	?___awmod+1,w,c
  6939  002386  6E2A               	movwf	scramble@random+1,c
  6940                           
  6941                           ;main.c: 642: switch(random) {
  6942  002388  D024               	goto	i2l305
  6943  00238A                     
  6944                           ;main.c: 644: U();
  6945  00238A  ECD9  F019         	call	i2_U	;wreg free
  6946                           
  6947                           ;main.c: 645: break;
  6948  00238E  D04E               	goto	i2l307
  6949  002390                     
  6950                           ;main.c: 647: Ui();
  6951  002390  EC80  F019         	call	i2_Ui	;wreg free
  6952                           
  6953                           ;main.c: 648: break;
  6954  002394  D04B               	goto	i2l307
  6955  002396                     
  6956                           ;main.c: 650: D();
  6957  002396  EC3D  F01B         	call	i2_D	;wreg free
  6958                           
  6959                           ;main.c: 651: break;
  6960  00239A  D048               	goto	i2l307
  6961  00239C                     
  6962                           ;main.c: 653: Di();
  6963  00239C  ECE4  F01A         	call	i2_Di	;wreg free
  6964                           
  6965                           ;main.c: 654: break;
  6966  0023A0  D045               	goto	i2l307
  6967  0023A2                     
  6968                           ;main.c: 656: L();
  6969  0023A2  EC55  F016         	call	i2_L	;wreg free
  6970                           
  6971                           ;main.c: 657: break;
  6972  0023A6  D042               	goto	i2l307
  6973  0023A8                     
  6974                           ;main.c: 659: Li();
  6975  0023A8  ECFA  F015         	call	i2_Li	;wreg free
  6976                           
  6977                           ;main.c: 660: break;
  6978  0023AC  D03F               	goto	i2l307
  6979  0023AE                     
  6980                           ;main.c: 662: R();
  6981  0023AE  EC9F  F015         	call	i2_R	;wreg free
  6982                           
  6983                           ;main.c: 663: break;
  6984  0023B2  D03C               	goto	i2l307
  6985  0023B4                     
  6986                           ;main.c: 665: Ri();
  6987  0023B4  EC44  F015         	call	i2_Ri	;wreg free
  6988                           
  6989                           ;main.c: 666: break;
  6990  0023B8  D039               	goto	i2l307
  6991  0023BA                     
  6992                           ;main.c: 668: F();
  6993  0023BA  EC8B  F01A         	call	i2_F	;wreg free
  6994                           
  6995                           ;main.c: 669: break;
  6996  0023BE  D036               	goto	i2l307
  6997  0023C0                     
  6998                           ;main.c: 671: Fi();
  6999  0023C0  EC32  F01A         	call	i2_Fi	;wreg free
  7000                           
  7001                           ;main.c: 672: break;
  7002  0023C4  D033               	goto	i2l307
  7003  0023C6                     
  7004                           ;main.c: 674: B();
  7005  0023C6  ECEF  F01B         	call	i2_B	;wreg free
  7006                           
  7007                           ;main.c: 675: break;
  7008  0023CA  D030               	goto	i2l307
  7009  0023CC                     
  7010                           ;main.c: 677: Bi();
  7011  0023CC  EC96  F01B         	call	i2_Bi	;wreg free
  7012                           
  7013                           ;main.c: 679: }
  7014                           
  7015                           ;main.c: 678: break;
  7016  0023D0  D02D               	goto	i2l307
  7017  0023D2                     i2l305:
  7018  0023D2  C029  F015         	movff	scramble@random,??_scramble
  7019  0023D6  C02A  F016         	movff	scramble@random+1,??_scramble+1
  7020                           
  7021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7022                           ; Switch size 1, requested type "space"
  7023                           ; Number of cases is 1, Range of values is 0 to 0
  7024                           ; switch strategies available:
  7025                           ; Name         Instructions Cycles
  7026                           ; simple_byte            4     3 (average)
  7027                           ;	Chosen strategy is simple_byte
  7028  0023DA  5016               	movf	??_scramble+1,w,c
  7029  0023DC  0A00               	xorlw	0	; case 0
  7030  0023DE  A4D8               	btfss	status,2,c
  7031  0023E0  D025               	goto	i2l307
  7032                           
  7033                           ; Switch size 1, requested type "space"
  7034                           ; Number of cases is 12, Range of values is 1 to 12
  7035                           ; switch strategies available:
  7036                           ; Name         Instructions Cycles
  7037                           ; simple_byte           37    19 (average)
  7038                           ;	Chosen strategy is simple_byte
  7039  0023E2  5015               	movf	??_scramble,w,c
  7040  0023E4  0A01               	xorlw	1	; case 1
  7041  0023E6  B4D8               	btfsc	status,2,c
  7042  0023E8  D7D0               	goto	i2l306
  7043  0023EA  0A03               	xorlw	3	; case 2
  7044  0023EC  B4D8               	btfsc	status,2,c
  7045  0023EE  D7D0               	goto	i2l308
  7046  0023F0  0A01               	xorlw	1	; case 3
  7047  0023F2  B4D8               	btfsc	status,2,c
  7048  0023F4  D7D0               	goto	i2l309
  7049  0023F6  0A07               	xorlw	7	; case 4
  7050  0023F8  B4D8               	btfsc	status,2,c
  7051  0023FA  D7D0               	goto	i2l310
  7052  0023FC  0A01               	xorlw	1	; case 5
  7053  0023FE  B4D8               	btfsc	status,2,c
  7054  002400  D7D0               	goto	i2l311
  7055  002402  0A03               	xorlw	3	; case 6
  7056  002404  B4D8               	btfsc	status,2,c
  7057  002406  D7D0               	goto	i2l312
  7058  002408  0A01               	xorlw	1	; case 7
  7059  00240A  B4D8               	btfsc	status,2,c
  7060  00240C  D7D0               	goto	i2l313
  7061  00240E  0A0F               	xorlw	15	; case 8
  7062  002410  B4D8               	btfsc	status,2,c
  7063  002412  D7D0               	goto	i2l314
  7064  002414  0A01               	xorlw	1	; case 9
  7065  002416  B4D8               	btfsc	status,2,c
  7066  002418  D7D0               	goto	i2l315
  7067  00241A  0A03               	xorlw	3	; case 10
  7068  00241C  B4D8               	btfsc	status,2,c
  7069  00241E  D7D0               	goto	i2l316
  7070  002420  0A01               	xorlw	1	; case 11
  7071  002422  B4D8               	btfsc	status,2,c
  7072  002424  D7D0               	goto	i2l317
  7073  002426  0A07               	xorlw	7	; case 12
  7074  002428  B4D8               	btfsc	status,2,c
  7075  00242A  D7D0               	goto	i2l318
  7076  00242C                     i2l307:
  7077  00242C  4A2B               	infsnz	scramble@i,f,c
  7078  00242E  2A2C               	incf	scramble@i+1,f,c
  7079  002430  BE2C               	btfsc	scramble@i+1,7,c
  7080  002432  D798               	goto	i2l303
  7081  002434  502C               	movf	scramble@i+1,w,c
  7082  002436  E104               	bnz	i2u473_40
  7083  002438                     L58:
  7084  002438  0E15               	movlw	21
  7085  00243A  5C2B               	subwf	scramble@i,w,c
  7086  00243C  A0D8               	btfss	status,0,c
  7087  00243E  D792               	goto	i2l303
  7088  002440                     i2u473_40:
  7089  002440                     i2l304:
  7090                           
  7091                           ;main.c: 680: }
  7092                           ;main.c: 681: INTCONbits.GIEH = 0;
  7093  002440  9EF2               	bcf	intcon,7,c	;volatile
  7094                           
  7095                           ;main.c: 682: RCONbits.IPEN = 0;
  7096  002442  9ED0               	bcf	4048,7,c	;volatile
  7097  002444  C028  F056         	movff	??_scramble+19,btemp+3
  7098  002448  C027  F055         	movff	??_scramble+18,btemp+2
  7099  00244C  C026  F054         	movff	??_scramble+17,btemp+1
  7100  002450  C025  F053         	movff	??_scramble+16,btemp
  7101  002454  C024  FFF5         	movff	??_scramble+15,tablat
  7102  002458  C023  FFF8         	movff	??_scramble+14,tblptru
  7103  00245C  C022  FFF7         	movff	??_scramble+13,tblptrh
  7104  002460  C021  FFF6         	movff	??_scramble+12,tblptrl
  7105  002464  C020  FFF4         	movff	??_scramble+11,prodh
  7106  002468  C01F  FFF3         	movff	??_scramble+10,prodl
  7107  00246C  C01E  FFDA         	movff	??_scramble+9,fsr2h
  7108  002470  C01D  FFD9         	movff	??_scramble+8,fsr2l
  7109  002474  C01C  FFE2         	movff	??_scramble+7,fsr1h
  7110  002478  C01B  FFE1         	movff	??_scramble+6,fsr1l
  7111  00247C  C01A  FFEA         	movff	??_scramble+5,fsr0h
  7112  002480  C019  FFE9         	movff	??_scramble+4,fsr0l
  7113  002484  C018  FFFB         	movff	??_scramble+3,pclatu
  7114  002488  C017  FFFA         	movff	??_scramble+2,pclath
  7115  00248C  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7116  00248E  0011               	retfie		f
  7117  002490                     __end_of_scramble:
  7118                           	opt stack 0
  7119                           pclatu	equ	0xFFB
  7120                           pclath	equ	0xFFA
  7121                           tblptru	equ	0xFF8
  7122                           tblptrh	equ	0xFF7
  7123                           tblptrl	equ	0xFF6
  7124                           tablat	equ	0xFF5
  7125                           prodh	equ	0xFF4
  7126                           prodl	equ	0xFF3
  7127                           intcon	equ	0xFF2
  7128                           postinc0	equ	0xFEE
  7129                           fsr0h	equ	0xFEA
  7130                           fsr0l	equ	0xFE9
  7131                           wreg	equ	0xFE8
  7132                           indf1	equ	0xFE7
  7133                           postdec1	equ	0xFE5
  7134                           fsr1h	equ	0xFE2
  7135                           fsr1l	equ	0xFE1
  7136                           indf2	equ	0xFDF
  7137                           fsr2h	equ	0xFDA
  7138                           fsr2l	equ	0xFD9
  7139                           status	equ	0xFD8
  7140                           
  7141 ;; *************** function i2_Ui *****************
  7142 ;; Defined at:
  7143 ;;		line 60 in file "main.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  Ui              2   11[COMRAM] int 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7157 ;;      Params:         0       0       0       0       0       0       0
  7158 ;;      Locals:         2       0       0       0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0
  7160 ;;      Totals:         2       0       0       0       0       0       0
  7161 ;;Total ram usage:        2 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    3
  7164 ;; This function calls:
  7165 ;;		i2_led
  7166 ;; This function is called by:
  7167 ;;		_scramble
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text22
  7172  003300                     __ptext22:
  7173                           	opt stack 0
  7174  003300                     i2_Ui:
  7175                           	opt stack 22
  7176                           
  7177                           ;main.c: 61: int i;
  7178                           ;main.c: 62: for(i=0;i<2;i++) {
  7179                           
  7180                           ;incstack = 0
  7181  003300  0E00               	movlw	0
  7182  003302  6E0D               	movwf	i2Ui@i+1,c
  7183  003304  0E00               	movlw	0
  7184  003306  6E0C               	movwf	i2Ui@i,c
  7185  003308                     i2l4060:
  7186  003308  BE0D               	btfsc	i2Ui@i+1,7,c
  7187  00330A  D006               	goto	i2l82
  7188  00330C  500D               	movf	i2Ui@i+1,w,c
  7189  00330E  E14D               	bnz	i2l4070
  7190  003310  0E02               	movlw	2
  7191  003312  5C0C               	subwf	i2Ui@i,w,c
  7192  003314  B0D8               	btfsc	status,0,c
  7193  003316  D049               	goto	i2u451_40
  7194  003318                     i2l82:
  7195                           
  7196                           ;main.c: 63: temp[i] = surface_three[i];
  7197  003318  0E46               	movlw	low _surface_three
  7198  00331A  240C               	addwf	i2Ui@i,w,c
  7199  00331C  6ED9               	movwf	fsr2l,c
  7200  00331E  0E00               	movlw	high _surface_three
  7201  003320  200D               	addwfc	i2Ui@i+1,w,c
  7202  003322  6EDA               	movwf	fsr2h,c
  7203  003324  0E36               	movlw	low _temp
  7204  003326  240C               	addwf	i2Ui@i,w,c
  7205  003328  6EE1               	movwf	fsr1l,c
  7206  00332A  0E00               	movlw	high _temp
  7207  00332C  200D               	addwfc	i2Ui@i+1,w,c
  7208  00332E  6EE2               	movwf	fsr1h,c
  7209  003330  CFDF FFE7          	movff	indf2,indf1
  7210                           
  7211                           ;main.c: 64: surface_three[i] = surface_two[i];
  7212  003334  0E4A               	movlw	low _surface_two
  7213  003336  240C               	addwf	i2Ui@i,w,c
  7214  003338  6ED9               	movwf	fsr2l,c
  7215  00333A  0E00               	movlw	high _surface_two
  7216  00333C  200D               	addwfc	i2Ui@i+1,w,c
  7217  00333E  6EDA               	movwf	fsr2h,c
  7218  003340  0E46               	movlw	low _surface_three
  7219  003342  240C               	addwf	i2Ui@i,w,c
  7220  003344  6EE1               	movwf	fsr1l,c
  7221  003346  0E00               	movlw	high _surface_three
  7222  003348  200D               	addwfc	i2Ui@i+1,w,c
  7223  00334A  6EE2               	movwf	fsr1h,c
  7224  00334C  CFDF FFE7          	movff	indf2,indf1
  7225                           
  7226                           ;main.c: 65: surface_two[i] = surface_five[i];
  7227  003350  0E3E               	movlw	low _surface_five
  7228  003352  240C               	addwf	i2Ui@i,w,c
  7229  003354  6ED9               	movwf	fsr2l,c
  7230  003356  0E00               	movlw	high _surface_five
  7231  003358  200D               	addwfc	i2Ui@i+1,w,c
  7232  00335A  6EDA               	movwf	fsr2h,c
  7233  00335C  0E4A               	movlw	low _surface_two
  7234  00335E  240C               	addwf	i2Ui@i,w,c
  7235  003360  6EE1               	movwf	fsr1l,c
  7236  003362  0E00               	movlw	high _surface_two
  7237  003364  200D               	addwfc	i2Ui@i+1,w,c
  7238  003366  6EE2               	movwf	fsr1h,c
  7239  003368  CFDF FFE7          	movff	indf2,indf1
  7240                           
  7241                           ;main.c: 66: surface_five[i] = surface_four[i];
  7242  00336C  0E42               	movlw	low _surface_four
  7243  00336E  240C               	addwf	i2Ui@i,w,c
  7244  003370  6ED9               	movwf	fsr2l,c
  7245  003372  0E00               	movlw	high _surface_four
  7246  003374  200D               	addwfc	i2Ui@i+1,w,c
  7247  003376  6EDA               	movwf	fsr2h,c
  7248  003378  0E3E               	movlw	low _surface_five
  7249  00337A  240C               	addwf	i2Ui@i,w,c
  7250  00337C  6EE1               	movwf	fsr1l,c
  7251  00337E  0E00               	movlw	high _surface_five
  7252  003380  200D               	addwfc	i2Ui@i+1,w,c
  7253  003382  6EE2               	movwf	fsr1h,c
  7254  003384  CFDF FFE7          	movff	indf2,indf1
  7255                           
  7256                           ;main.c: 67: surface_four[i] = temp[i];
  7257  003388  0E36               	movlw	low _temp
  7258  00338A  240C               	addwf	i2Ui@i,w,c
  7259  00338C  6ED9               	movwf	fsr2l,c
  7260  00338E  0E00               	movlw	high _temp
  7261  003390  200D               	addwfc	i2Ui@i+1,w,c
  7262  003392  6EDA               	movwf	fsr2h,c
  7263  003394  0E42               	movlw	low _surface_four
  7264  003396  240C               	addwf	i2Ui@i,w,c
  7265  003398  6EE1               	movwf	fsr1l,c
  7266  00339A  0E00               	movlw	high _surface_four
  7267  00339C  200D               	addwfc	i2Ui@i+1,w,c
  7268  00339E  6EE2               	movwf	fsr1h,c
  7269  0033A0  CFDF FFE7          	movff	indf2,indf1
  7270  0033A4  4A0C               	infsnz	i2Ui@i,f,c
  7271  0033A6  2A0D               	incf	i2Ui@i+1,f,c
  7272  0033A8  D7AF               	goto	i2l4060
  7273  0033AA                     i2u451_40:
  7274  0033AA                     i2l4070:
  7275                           
  7276                           ;main.c: 68: }
  7277                           ;main.c: 69: led('U');
  7278  0033AA  0E55               	movlw	85
  7279  0033AC  EC6E  F00A         	call	i2_led
  7280  0033B0  0012               	return		;funcret
  7281  0033B2                     __end_ofi2_Ui:
  7282                           	opt stack 0
  7283                           pclatu	equ	0xFFB
  7284                           pclath	equ	0xFFA
  7285                           tblptru	equ	0xFF8
  7286                           tblptrh	equ	0xFF7
  7287                           tblptrl	equ	0xFF6
  7288                           tablat	equ	0xFF5
  7289                           prodh	equ	0xFF4
  7290                           prodl	equ	0xFF3
  7291                           intcon	equ	0xFF2
  7292                           postinc0	equ	0xFEE
  7293                           fsr0h	equ	0xFEA
  7294                           fsr0l	equ	0xFE9
  7295                           wreg	equ	0xFE8
  7296                           indf1	equ	0xFE7
  7297                           postdec1	equ	0xFE5
  7298                           fsr1h	equ	0xFE2
  7299                           fsr1l	equ	0xFE1
  7300                           indf2	equ	0xFDF
  7301                           fsr2h	equ	0xFDA
  7302                           fsr2l	equ	0xFD9
  7303                           status	equ	0xFD8
  7304                           
  7305 ;; *************** function i2_U *****************
  7306 ;; Defined at:
  7307 ;;		line 46 in file "main.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;  U               2   11[COMRAM] int 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7321 ;;      Params:         0       0       0       0       0       0       0
  7322 ;;      Locals:         2       0       0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0
  7324 ;;      Totals:         2       0       0       0       0       0       0
  7325 ;;Total ram usage:        2 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    3
  7328 ;; This function calls:
  7329 ;;		i2_led
  7330 ;; This function is called by:
  7331 ;;		_scramble
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text23
  7336  0033B2                     __ptext23:
  7337                           	opt stack 0
  7338  0033B2                     i2_U:
  7339                           	opt stack 22
  7340                           
  7341                           ;main.c: 47: int i;
  7342                           ;main.c: 49: for(i=0;i<2;i++) {
  7343                           
  7344                           ;incstack = 0
  7345  0033B2  0E00               	movlw	0
  7346  0033B4  6E0D               	movwf	i2U@i+1,c
  7347  0033B6  0E00               	movlw	0
  7348  0033B8  6E0C               	movwf	i2U@i,c
  7349  0033BA                     i2l4046:
  7350  0033BA  BE0D               	btfsc	i2U@i+1,7,c
  7351  0033BC  D006               	goto	i2l77
  7352  0033BE  500D               	movf	i2U@i+1,w,c
  7353  0033C0  E14D               	bnz	i2l4056
  7354  0033C2  0E02               	movlw	2
  7355  0033C4  5C0C               	subwf	i2U@i,w,c
  7356  0033C6  B0D8               	btfsc	status,0,c
  7357  0033C8  D049               	goto	i2u449_40
  7358  0033CA                     i2l77:
  7359                           
  7360                           ;main.c: 50: temp[i] = surface_three[i];
  7361  0033CA  0E46               	movlw	low _surface_three
  7362  0033CC  240C               	addwf	i2U@i,w,c
  7363  0033CE  6ED9               	movwf	fsr2l,c
  7364  0033D0  0E00               	movlw	high _surface_three
  7365  0033D2  200D               	addwfc	i2U@i+1,w,c
  7366  0033D4  6EDA               	movwf	fsr2h,c
  7367  0033D6  0E36               	movlw	low _temp
  7368  0033D8  240C               	addwf	i2U@i,w,c
  7369  0033DA  6EE1               	movwf	fsr1l,c
  7370  0033DC  0E00               	movlw	high _temp
  7371  0033DE  200D               	addwfc	i2U@i+1,w,c
  7372  0033E0  6EE2               	movwf	fsr1h,c
  7373  0033E2  CFDF FFE7          	movff	indf2,indf1
  7374                           
  7375                           ;main.c: 51: surface_three[i] = surface_four[i];
  7376  0033E6  0E42               	movlw	low _surface_four
  7377  0033E8  240C               	addwf	i2U@i,w,c
  7378  0033EA  6ED9               	movwf	fsr2l,c
  7379  0033EC  0E00               	movlw	high _surface_four
  7380  0033EE  200D               	addwfc	i2U@i+1,w,c
  7381  0033F0  6EDA               	movwf	fsr2h,c
  7382  0033F2  0E46               	movlw	low _surface_three
  7383  0033F4  240C               	addwf	i2U@i,w,c
  7384  0033F6  6EE1               	movwf	fsr1l,c
  7385  0033F8  0E00               	movlw	high _surface_three
  7386  0033FA  200D               	addwfc	i2U@i+1,w,c
  7387  0033FC  6EE2               	movwf	fsr1h,c
  7388  0033FE  CFDF FFE7          	movff	indf2,indf1
  7389                           
  7390                           ;main.c: 52: surface_four[i] = surface_five[i];
  7391  003402  0E3E               	movlw	low _surface_five
  7392  003404  240C               	addwf	i2U@i,w,c
  7393  003406  6ED9               	movwf	fsr2l,c
  7394  003408  0E00               	movlw	high _surface_five
  7395  00340A  200D               	addwfc	i2U@i+1,w,c
  7396  00340C  6EDA               	movwf	fsr2h,c
  7397  00340E  0E42               	movlw	low _surface_four
  7398  003410  240C               	addwf	i2U@i,w,c
  7399  003412  6EE1               	movwf	fsr1l,c
  7400  003414  0E00               	movlw	high _surface_four
  7401  003416  200D               	addwfc	i2U@i+1,w,c
  7402  003418  6EE2               	movwf	fsr1h,c
  7403  00341A  CFDF FFE7          	movff	indf2,indf1
  7404                           
  7405                           ;main.c: 53: surface_five[i] = surface_two[i];
  7406  00341E  0E4A               	movlw	low _surface_two
  7407  003420  240C               	addwf	i2U@i,w,c
  7408  003422  6ED9               	movwf	fsr2l,c
  7409  003424  0E00               	movlw	high _surface_two
  7410  003426  200D               	addwfc	i2U@i+1,w,c
  7411  003428  6EDA               	movwf	fsr2h,c
  7412  00342A  0E3E               	movlw	low _surface_five
  7413  00342C  240C               	addwf	i2U@i,w,c
  7414  00342E  6EE1               	movwf	fsr1l,c
  7415  003430  0E00               	movlw	high _surface_five
  7416  003432  200D               	addwfc	i2U@i+1,w,c
  7417  003434  6EE2               	movwf	fsr1h,c
  7418  003436  CFDF FFE7          	movff	indf2,indf1
  7419                           
  7420                           ;main.c: 54: surface_two[i] = temp[i];
  7421  00343A  0E36               	movlw	low _temp
  7422  00343C  240C               	addwf	i2U@i,w,c
  7423  00343E  6ED9               	movwf	fsr2l,c
  7424  003440  0E00               	movlw	high _temp
  7425  003442  200D               	addwfc	i2U@i+1,w,c
  7426  003444  6EDA               	movwf	fsr2h,c
  7427  003446  0E4A               	movlw	low _surface_two
  7428  003448  240C               	addwf	i2U@i,w,c
  7429  00344A  6EE1               	movwf	fsr1l,c
  7430  00344C  0E00               	movlw	high _surface_two
  7431  00344E  200D               	addwfc	i2U@i+1,w,c
  7432  003450  6EE2               	movwf	fsr1h,c
  7433  003452  CFDF FFE7          	movff	indf2,indf1
  7434  003456  4A0C               	infsnz	i2U@i,f,c
  7435  003458  2A0D               	incf	i2U@i+1,f,c
  7436  00345A  D7AF               	goto	i2l4046
  7437  00345C                     i2u449_40:
  7438  00345C                     i2l4056:
  7439                           
  7440                           ;main.c: 55: }
  7441                           ;main.c: 56: led('U');
  7442  00345C  0E55               	movlw	85
  7443  00345E  EC6E  F00A         	call	i2_led
  7444  003462  0012               	return		;funcret
  7445  003464                     __end_ofi2_U:
  7446                           	opt stack 0
  7447                           pclatu	equ	0xFFB
  7448                           pclath	equ	0xFFA
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           intcon	equ	0xFF2
  7456                           postinc0	equ	0xFEE
  7457                           fsr0h	equ	0xFEA
  7458                           fsr0l	equ	0xFE9
  7459                           wreg	equ	0xFE8
  7460                           indf1	equ	0xFE7
  7461                           postdec1	equ	0xFE5
  7462                           fsr1h	equ	0xFE2
  7463                           fsr1l	equ	0xFE1
  7464                           indf2	equ	0xFDF
  7465                           fsr2h	equ	0xFDA
  7466                           fsr2l	equ	0xFD9
  7467                           status	equ	0xFD8
  7468                           
  7469 ;; *************** function i2_Ri *****************
  7470 ;; Defined at:
  7471 ;;		line 138 in file "main.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;		None
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  Ri              2   11[COMRAM] int 
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7485 ;;      Params:         0       0       0       0       0       0       0
  7486 ;;      Locals:         2       0       0       0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0
  7488 ;;      Totals:         2       0       0       0       0       0       0
  7489 ;;Total ram usage:        2 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:    3
  7492 ;; This function calls:
  7493 ;;		i2_led
  7494 ;; This function is called by:
  7495 ;;		_scramble
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text24
  7500  002A88                     __ptext24:
  7501                           	opt stack 0
  7502  002A88                     i2_Ri:
  7503                           	opt stack 22
  7504                           
  7505                           ;main.c: 139: int i;
  7506                           ;main.c: 140: for(i=1;i<4;i+=2) {
  7507                           
  7508                           ;incstack = 0
  7509  002A88  0E00               	movlw	0
  7510  002A8A  6E0D               	movwf	i2Ri@i+1,c
  7511  002A8C  0E01               	movlw	1
  7512  002A8E  6E0C               	movwf	i2Ri@i,c
  7513  002A90                     i2l4144:
  7514  002A90  BE0D               	btfsc	i2Ri@i+1,7,c
  7515  002A92  D006               	goto	i2l112
  7516  002A94  500D               	movf	i2Ri@i+1,w,c
  7517  002A96  E14F               	bnz	i2l4154
  7518  002A98  0E04               	movlw	4
  7519  002A9A  5C0C               	subwf	i2Ri@i,w,c
  7520  002A9C  B0D8               	btfsc	status,0,c
  7521  002A9E  D04B               	goto	i2u463_40
  7522  002AA0                     i2l112:
  7523                           
  7524                           ;main.c: 141: temp[i] = surface_three[i];
  7525  002AA0  0E46               	movlw	low _surface_three
  7526  002AA2  240C               	addwf	i2Ri@i,w,c
  7527  002AA4  6ED9               	movwf	fsr2l,c
  7528  002AA6  0E00               	movlw	high _surface_three
  7529  002AA8  200D               	addwfc	i2Ri@i+1,w,c
  7530  002AAA  6EDA               	movwf	fsr2h,c
  7531  002AAC  0E36               	movlw	low _temp
  7532  002AAE  240C               	addwf	i2Ri@i,w,c
  7533  002AB0  6EE1               	movwf	fsr1l,c
  7534  002AB2  0E00               	movlw	high _temp
  7535  002AB4  200D               	addwfc	i2Ri@i+1,w,c
  7536  002AB6  6EE2               	movwf	fsr1h,c
  7537  002AB8  CFDF FFE7          	movff	indf2,indf1
  7538                           
  7539                           ;main.c: 142: surface_three[i] = surface_one[i];
  7540  002ABC  0E4E               	movlw	low _surface_one
  7541  002ABE  240C               	addwf	i2Ri@i,w,c
  7542  002AC0  6ED9               	movwf	fsr2l,c
  7543  002AC2  0E00               	movlw	high _surface_one
  7544  002AC4  200D               	addwfc	i2Ri@i+1,w,c
  7545  002AC6  6EDA               	movwf	fsr2h,c
  7546  002AC8  0E46               	movlw	low _surface_three
  7547  002ACA  240C               	addwf	i2Ri@i,w,c
  7548  002ACC  6EE1               	movwf	fsr1l,c
  7549  002ACE  0E00               	movlw	high _surface_three
  7550  002AD0  200D               	addwfc	i2Ri@i+1,w,c
  7551  002AD2  6EE2               	movwf	fsr1h,c
  7552  002AD4  CFDF FFE7          	movff	indf2,indf1
  7553                           
  7554                           ;main.c: 143: surface_one[i] = surface_two[i];
  7555  002AD8  0E4A               	movlw	low _surface_two
  7556  002ADA  240C               	addwf	i2Ri@i,w,c
  7557  002ADC  6ED9               	movwf	fsr2l,c
  7558  002ADE  0E00               	movlw	high _surface_two
  7559  002AE0  200D               	addwfc	i2Ri@i+1,w,c
  7560  002AE2  6EDA               	movwf	fsr2h,c
  7561  002AE4  0E4E               	movlw	low _surface_one
  7562  002AE6  240C               	addwf	i2Ri@i,w,c
  7563  002AE8  6EE1               	movwf	fsr1l,c
  7564  002AEA  0E00               	movlw	high _surface_one
  7565  002AEC  200D               	addwfc	i2Ri@i+1,w,c
  7566  002AEE  6EE2               	movwf	fsr1h,c
  7567  002AF0  CFDF FFE7          	movff	indf2,indf1
  7568                           
  7569                           ;main.c: 144: surface_two[i] = surface_six[i];
  7570  002AF4  0E3A               	movlw	low _surface_six
  7571  002AF6  240C               	addwf	i2Ri@i,w,c
  7572  002AF8  6ED9               	movwf	fsr2l,c
  7573  002AFA  0E00               	movlw	high _surface_six
  7574  002AFC  200D               	addwfc	i2Ri@i+1,w,c
  7575  002AFE  6EDA               	movwf	fsr2h,c
  7576  002B00  0E4A               	movlw	low _surface_two
  7577  002B02  240C               	addwf	i2Ri@i,w,c
  7578  002B04  6EE1               	movwf	fsr1l,c
  7579  002B06  0E00               	movlw	high _surface_two
  7580  002B08  200D               	addwfc	i2Ri@i+1,w,c
  7581  002B0A  6EE2               	movwf	fsr1h,c
  7582  002B0C  CFDF FFE7          	movff	indf2,indf1
  7583                           
  7584                           ;main.c: 145: surface_six[i] = temp[i];
  7585  002B10  0E36               	movlw	low _temp
  7586  002B12  240C               	addwf	i2Ri@i,w,c
  7587  002B14  6ED9               	movwf	fsr2l,c
  7588  002B16  0E00               	movlw	high _temp
  7589  002B18  200D               	addwfc	i2Ri@i+1,w,c
  7590  002B1A  6EDA               	movwf	fsr2h,c
  7591  002B1C  0E3A               	movlw	low _surface_six
  7592  002B1E  240C               	addwf	i2Ri@i,w,c
  7593  002B20  6EE1               	movwf	fsr1l,c
  7594  002B22  0E00               	movlw	high _surface_six
  7595  002B24  200D               	addwfc	i2Ri@i+1,w,c
  7596  002B26  6EE2               	movwf	fsr1h,c
  7597  002B28  CFDF FFE7          	movff	indf2,indf1
  7598  002B2C  0E02               	movlw	2
  7599  002B2E  260C               	addwf	i2Ri@i,f,c
  7600  002B30  0E00               	movlw	0
  7601  002B32  220D               	addwfc	i2Ri@i+1,f,c
  7602  002B34  D7AD               	goto	i2l4144
  7603  002B36                     i2u463_40:
  7604  002B36                     i2l4154:
  7605                           
  7606                           ;main.c: 146: }
  7607                           ;main.c: 147: led('R');
  7608  002B36  0E52               	movlw	82
  7609  002B38  EC6E  F00A         	call	i2_led
  7610  002B3C  0012               	return		;funcret
  7611  002B3E                     __end_ofi2_Ri:
  7612                           	opt stack 0
  7613                           pclatu	equ	0xFFB
  7614                           pclath	equ	0xFFA
  7615                           tblptru	equ	0xFF8
  7616                           tblptrh	equ	0xFF7
  7617                           tblptrl	equ	0xFF6
  7618                           tablat	equ	0xFF5
  7619                           prodh	equ	0xFF4
  7620                           prodl	equ	0xFF3
  7621                           intcon	equ	0xFF2
  7622                           postinc0	equ	0xFEE
  7623                           fsr0h	equ	0xFEA
  7624                           fsr0l	equ	0xFE9
  7625                           wreg	equ	0xFE8
  7626                           indf1	equ	0xFE7
  7627                           postdec1	equ	0xFE5
  7628                           fsr1h	equ	0xFE2
  7629                           fsr1l	equ	0xFE1
  7630                           indf2	equ	0xFDF
  7631                           fsr2h	equ	0xFDA
  7632                           fsr2l	equ	0xFD9
  7633                           status	equ	0xFD8
  7634                           
  7635 ;; *************** function i2_R *****************
  7636 ;; Defined at:
  7637 ;;		line 125 in file "main.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  R               2   11[COMRAM] int 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      void 
  7644 ;; Registers used:
  7645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7651 ;;      Params:         0       0       0       0       0       0       0
  7652 ;;      Locals:         2       0       0       0       0       0       0
  7653 ;;      Temps:          0       0       0       0       0       0       0
  7654 ;;      Totals:         2       0       0       0       0       0       0
  7655 ;;Total ram usage:        2 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    3
  7658 ;; This function calls:
  7659 ;;		i2_led
  7660 ;; This function is called by:
  7661 ;;		_scramble
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text25
  7666  002B3E                     __ptext25:
  7667                           	opt stack 0
  7668  002B3E                     i2_R:
  7669                           	opt stack 22
  7670                           
  7671                           ;main.c: 126: int i;
  7672                           ;main.c: 127: for(i=1;i<4;i+=2) {
  7673                           
  7674                           ;incstack = 0
  7675  002B3E  0E00               	movlw	0
  7676  002B40  6E0D               	movwf	i2R@i+1,c
  7677  002B42  0E01               	movlw	1
  7678  002B44  6E0C               	movwf	i2R@i,c
  7679  002B46                     i2l4130:
  7680  002B46  BE0D               	btfsc	i2R@i+1,7,c
  7681  002B48  D006               	goto	i2l107
  7682  002B4A  500D               	movf	i2R@i+1,w,c
  7683  002B4C  E14F               	bnz	i2l4140
  7684  002B4E  0E04               	movlw	4
  7685  002B50  5C0C               	subwf	i2R@i,w,c
  7686  002B52  B0D8               	btfsc	status,0,c
  7687  002B54  D04B               	goto	i2u461_40
  7688  002B56                     i2l107:
  7689                           
  7690                           ;main.c: 128: temp[i] = surface_three[i];
  7691  002B56  0E46               	movlw	low _surface_three
  7692  002B58  240C               	addwf	i2R@i,w,c
  7693  002B5A  6ED9               	movwf	fsr2l,c
  7694  002B5C  0E00               	movlw	high _surface_three
  7695  002B5E  200D               	addwfc	i2R@i+1,w,c
  7696  002B60  6EDA               	movwf	fsr2h,c
  7697  002B62  0E36               	movlw	low _temp
  7698  002B64  240C               	addwf	i2R@i,w,c
  7699  002B66  6EE1               	movwf	fsr1l,c
  7700  002B68  0E00               	movlw	high _temp
  7701  002B6A  200D               	addwfc	i2R@i+1,w,c
  7702  002B6C  6EE2               	movwf	fsr1h,c
  7703  002B6E  CFDF FFE7          	movff	indf2,indf1
  7704                           
  7705                           ;main.c: 129: surface_three[i] = surface_six[i];
  7706  002B72  0E3A               	movlw	low _surface_six
  7707  002B74  240C               	addwf	i2R@i,w,c
  7708  002B76  6ED9               	movwf	fsr2l,c
  7709  002B78  0E00               	movlw	high _surface_six
  7710  002B7A  200D               	addwfc	i2R@i+1,w,c
  7711  002B7C  6EDA               	movwf	fsr2h,c
  7712  002B7E  0E46               	movlw	low _surface_three
  7713  002B80  240C               	addwf	i2R@i,w,c
  7714  002B82  6EE1               	movwf	fsr1l,c
  7715  002B84  0E00               	movlw	high _surface_three
  7716  002B86  200D               	addwfc	i2R@i+1,w,c
  7717  002B88  6EE2               	movwf	fsr1h,c
  7718  002B8A  CFDF FFE7          	movff	indf2,indf1
  7719                           
  7720                           ;main.c: 130: surface_six[i] = surface_two[i];
  7721  002B8E  0E4A               	movlw	low _surface_two
  7722  002B90  240C               	addwf	i2R@i,w,c
  7723  002B92  6ED9               	movwf	fsr2l,c
  7724  002B94  0E00               	movlw	high _surface_two
  7725  002B96  200D               	addwfc	i2R@i+1,w,c
  7726  002B98  6EDA               	movwf	fsr2h,c
  7727  002B9A  0E3A               	movlw	low _surface_six
  7728  002B9C  240C               	addwf	i2R@i,w,c
  7729  002B9E  6EE1               	movwf	fsr1l,c
  7730  002BA0  0E00               	movlw	high _surface_six
  7731  002BA2  200D               	addwfc	i2R@i+1,w,c
  7732  002BA4  6EE2               	movwf	fsr1h,c
  7733  002BA6  CFDF FFE7          	movff	indf2,indf1
  7734                           
  7735                           ;main.c: 131: surface_two[i] = surface_one[i];
  7736  002BAA  0E4E               	movlw	low _surface_one
  7737  002BAC  240C               	addwf	i2R@i,w,c
  7738  002BAE  6ED9               	movwf	fsr2l,c
  7739  002BB0  0E00               	movlw	high _surface_one
  7740  002BB2  200D               	addwfc	i2R@i+1,w,c
  7741  002BB4  6EDA               	movwf	fsr2h,c
  7742  002BB6  0E4A               	movlw	low _surface_two
  7743  002BB8  240C               	addwf	i2R@i,w,c
  7744  002BBA  6EE1               	movwf	fsr1l,c
  7745  002BBC  0E00               	movlw	high _surface_two
  7746  002BBE  200D               	addwfc	i2R@i+1,w,c
  7747  002BC0  6EE2               	movwf	fsr1h,c
  7748  002BC2  CFDF FFE7          	movff	indf2,indf1
  7749                           
  7750                           ;main.c: 132: surface_one[i] = temp[i];
  7751  002BC6  0E36               	movlw	low _temp
  7752  002BC8  240C               	addwf	i2R@i,w,c
  7753  002BCA  6ED9               	movwf	fsr2l,c
  7754  002BCC  0E00               	movlw	high _temp
  7755  002BCE  200D               	addwfc	i2R@i+1,w,c
  7756  002BD0  6EDA               	movwf	fsr2h,c
  7757  002BD2  0E4E               	movlw	low _surface_one
  7758  002BD4  240C               	addwf	i2R@i,w,c
  7759  002BD6  6EE1               	movwf	fsr1l,c
  7760  002BD8  0E00               	movlw	high _surface_one
  7761  002BDA  200D               	addwfc	i2R@i+1,w,c
  7762  002BDC  6EE2               	movwf	fsr1h,c
  7763  002BDE  CFDF FFE7          	movff	indf2,indf1
  7764  002BE2  0E02               	movlw	2
  7765  002BE4  260C               	addwf	i2R@i,f,c
  7766  002BE6  0E00               	movlw	0
  7767  002BE8  220D               	addwfc	i2R@i+1,f,c
  7768  002BEA  D7AD               	goto	i2l4130
  7769  002BEC                     i2u461_40:
  7770  002BEC                     i2l4140:
  7771                           
  7772                           ;main.c: 133: }
  7773                           ;main.c: 134: led('R');
  7774  002BEC  0E52               	movlw	82
  7775  002BEE  EC6E  F00A         	call	i2_led
  7776  002BF2  0012               	return		;funcret
  7777  002BF4                     __end_ofi2_R:
  7778                           	opt stack 0
  7779                           pclatu	equ	0xFFB
  7780                           pclath	equ	0xFFA
  7781                           tblptru	equ	0xFF8
  7782                           tblptrh	equ	0xFF7
  7783                           tblptrl	equ	0xFF6
  7784                           tablat	equ	0xFF5
  7785                           prodh	equ	0xFF4
  7786                           prodl	equ	0xFF3
  7787                           intcon	equ	0xFF2
  7788                           postinc0	equ	0xFEE
  7789                           fsr0h	equ	0xFEA
  7790                           fsr0l	equ	0xFE9
  7791                           wreg	equ	0xFE8
  7792                           indf1	equ	0xFE7
  7793                           postdec1	equ	0xFE5
  7794                           fsr1h	equ	0xFE2
  7795                           fsr1l	equ	0xFE1
  7796                           indf2	equ	0xFDF
  7797                           fsr2h	equ	0xFDA
  7798                           fsr2l	equ	0xFD9
  7799                           status	equ	0xFD8
  7800                           
  7801 ;; *************** function i2_Li *****************
  7802 ;; Defined at:
  7803 ;;		line 112 in file "main.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;		None
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  Li              2   11[COMRAM] int 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7817 ;;      Params:         0       0       0       0       0       0       0
  7818 ;;      Locals:         2       0       0       0       0       0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0
  7820 ;;      Totals:         2       0       0       0       0       0       0
  7821 ;;Total ram usage:        2 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    3
  7824 ;; This function calls:
  7825 ;;		i2_led
  7826 ;; This function is called by:
  7827 ;;		_scramble
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           	psect	text26
  7832  002BF4                     __ptext26:
  7833                           	opt stack 0
  7834  002BF4                     i2_Li:
  7835                           	opt stack 22
  7836                           
  7837                           ;main.c: 113: int i;
  7838                           ;main.c: 114: for(i=0;i<3;i+=2) {
  7839                           
  7840                           ;incstack = 0
  7841  002BF4  0E00               	movlw	0
  7842  002BF6  6E0D               	movwf	i2Li@i+1,c
  7843  002BF8  0E00               	movlw	0
  7844  002BFA  6E0C               	movwf	i2Li@i,c
  7845  002BFC                     i2l4116:
  7846  002BFC  BE0D               	btfsc	i2Li@i+1,7,c
  7847  002BFE  D006               	goto	i2l102
  7848  002C00  500D               	movf	i2Li@i+1,w,c
  7849  002C02  E14F               	bnz	i2l4126
  7850  002C04  0E03               	movlw	3
  7851  002C06  5C0C               	subwf	i2Li@i,w,c
  7852  002C08  B0D8               	btfsc	status,0,c
  7853  002C0A  D04B               	goto	i2u459_40
  7854  002C0C                     i2l102:
  7855                           
  7856                           ;main.c: 115: temp[i] = surface_three[i];
  7857  002C0C  0E46               	movlw	low _surface_three
  7858  002C0E  240C               	addwf	i2Li@i,w,c
  7859  002C10  6ED9               	movwf	fsr2l,c
  7860  002C12  0E00               	movlw	high _surface_three
  7861  002C14  200D               	addwfc	i2Li@i+1,w,c
  7862  002C16  6EDA               	movwf	fsr2h,c
  7863  002C18  0E36               	movlw	low _temp
  7864  002C1A  240C               	addwf	i2Li@i,w,c
  7865  002C1C  6EE1               	movwf	fsr1l,c
  7866  002C1E  0E00               	movlw	high _temp
  7867  002C20  200D               	addwfc	i2Li@i+1,w,c
  7868  002C22  6EE2               	movwf	fsr1h,c
  7869  002C24  CFDF FFE7          	movff	indf2,indf1
  7870                           
  7871                           ;main.c: 116: surface_three[i] = surface_six[i];
  7872  002C28  0E3A               	movlw	low _surface_six
  7873  002C2A  240C               	addwf	i2Li@i,w,c
  7874  002C2C  6ED9               	movwf	fsr2l,c
  7875  002C2E  0E00               	movlw	high _surface_six
  7876  002C30  200D               	addwfc	i2Li@i+1,w,c
  7877  002C32  6EDA               	movwf	fsr2h,c
  7878  002C34  0E46               	movlw	low _surface_three
  7879  002C36  240C               	addwf	i2Li@i,w,c
  7880  002C38  6EE1               	movwf	fsr1l,c
  7881  002C3A  0E00               	movlw	high _surface_three
  7882  002C3C  200D               	addwfc	i2Li@i+1,w,c
  7883  002C3E  6EE2               	movwf	fsr1h,c
  7884  002C40  CFDF FFE7          	movff	indf2,indf1
  7885                           
  7886                           ;main.c: 117: surface_six[i] = surface_two[i];
  7887  002C44  0E4A               	movlw	low _surface_two
  7888  002C46  240C               	addwf	i2Li@i,w,c
  7889  002C48  6ED9               	movwf	fsr2l,c
  7890  002C4A  0E00               	movlw	high _surface_two
  7891  002C4C  200D               	addwfc	i2Li@i+1,w,c
  7892  002C4E  6EDA               	movwf	fsr2h,c
  7893  002C50  0E3A               	movlw	low _surface_six
  7894  002C52  240C               	addwf	i2Li@i,w,c
  7895  002C54  6EE1               	movwf	fsr1l,c
  7896  002C56  0E00               	movlw	high _surface_six
  7897  002C58  200D               	addwfc	i2Li@i+1,w,c
  7898  002C5A  6EE2               	movwf	fsr1h,c
  7899  002C5C  CFDF FFE7          	movff	indf2,indf1
  7900                           
  7901                           ;main.c: 118: surface_two[i] = surface_one[i];
  7902  002C60  0E4E               	movlw	low _surface_one
  7903  002C62  240C               	addwf	i2Li@i,w,c
  7904  002C64  6ED9               	movwf	fsr2l,c
  7905  002C66  0E00               	movlw	high _surface_one
  7906  002C68  200D               	addwfc	i2Li@i+1,w,c
  7907  002C6A  6EDA               	movwf	fsr2h,c
  7908  002C6C  0E4A               	movlw	low _surface_two
  7909  002C6E  240C               	addwf	i2Li@i,w,c
  7910  002C70  6EE1               	movwf	fsr1l,c
  7911  002C72  0E00               	movlw	high _surface_two
  7912  002C74  200D               	addwfc	i2Li@i+1,w,c
  7913  002C76  6EE2               	movwf	fsr1h,c
  7914  002C78  CFDF FFE7          	movff	indf2,indf1
  7915                           
  7916                           ;main.c: 119: surface_one[i] = temp[i];
  7917  002C7C  0E36               	movlw	low _temp
  7918  002C7E  240C               	addwf	i2Li@i,w,c
  7919  002C80  6ED9               	movwf	fsr2l,c
  7920  002C82  0E00               	movlw	high _temp
  7921  002C84  200D               	addwfc	i2Li@i+1,w,c
  7922  002C86  6EDA               	movwf	fsr2h,c
  7923  002C88  0E4E               	movlw	low _surface_one
  7924  002C8A  240C               	addwf	i2Li@i,w,c
  7925  002C8C  6EE1               	movwf	fsr1l,c
  7926  002C8E  0E00               	movlw	high _surface_one
  7927  002C90  200D               	addwfc	i2Li@i+1,w,c
  7928  002C92  6EE2               	movwf	fsr1h,c
  7929  002C94  CFDF FFE7          	movff	indf2,indf1
  7930  002C98  0E02               	movlw	2
  7931  002C9A  260C               	addwf	i2Li@i,f,c
  7932  002C9C  0E00               	movlw	0
  7933  002C9E  220D               	addwfc	i2Li@i+1,f,c
  7934  002CA0  D7AD               	goto	i2l4116
  7935  002CA2                     i2u459_40:
  7936  002CA2                     i2l4126:
  7937                           
  7938                           ;main.c: 120: }
  7939                           ;main.c: 121: led('L');
  7940  002CA2  0E4C               	movlw	76
  7941  002CA4  EC6E  F00A         	call	i2_led
  7942  002CA8  0012               	return		;funcret
  7943  002CAA                     __end_ofi2_Li:
  7944                           	opt stack 0
  7945                           pclatu	equ	0xFFB
  7946                           pclath	equ	0xFFA
  7947                           tblptru	equ	0xFF8
  7948                           tblptrh	equ	0xFF7
  7949                           tblptrl	equ	0xFF6
  7950                           tablat	equ	0xFF5
  7951                           prodh	equ	0xFF4
  7952                           prodl	equ	0xFF3
  7953                           intcon	equ	0xFF2
  7954                           postinc0	equ	0xFEE
  7955                           fsr0h	equ	0xFEA
  7956                           fsr0l	equ	0xFE9
  7957                           wreg	equ	0xFE8
  7958                           indf1	equ	0xFE7
  7959                           postdec1	equ	0xFE5
  7960                           fsr1h	equ	0xFE2
  7961                           fsr1l	equ	0xFE1
  7962                           indf2	equ	0xFDF
  7963                           fsr2h	equ	0xFDA
  7964                           fsr2l	equ	0xFD9
  7965                           status	equ	0xFD8
  7966                           
  7967 ;; *************** function i2_L *****************
  7968 ;; Defined at:
  7969 ;;		line 99 in file "main.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  L               2   11[COMRAM] int 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7983 ;;      Params:         0       0       0       0       0       0       0
  7984 ;;      Locals:         2       0       0       0       0       0       0
  7985 ;;      Temps:          0       0       0       0       0       0       0
  7986 ;;      Totals:         2       0       0       0       0       0       0
  7987 ;;Total ram usage:        2 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    3
  7990 ;; This function calls:
  7991 ;;		i2_led
  7992 ;; This function is called by:
  7993 ;;		_scramble
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text27
  7998  002CAA                     __ptext27:
  7999                           	opt stack 0
  8000  002CAA                     i2_L:
  8001                           	opt stack 22
  8002                           
  8003                           ;main.c: 100: int i;
  8004                           ;main.c: 101: for(i=0;i<3;i+=2) {
  8005                           
  8006                           ;incstack = 0
  8007  002CAA  0E00               	movlw	0
  8008  002CAC  6E0D               	movwf	i2L@i+1,c
  8009  002CAE  0E00               	movlw	0
  8010  002CB0  6E0C               	movwf	i2L@i,c
  8011  002CB2                     i2l4102:
  8012  002CB2  BE0D               	btfsc	i2L@i+1,7,c
  8013  002CB4  D006               	goto	i2l97
  8014  002CB6  500D               	movf	i2L@i+1,w,c
  8015  002CB8  E14F               	bnz	i2l4112
  8016  002CBA  0E03               	movlw	3
  8017  002CBC  5C0C               	subwf	i2L@i,w,c
  8018  002CBE  B0D8               	btfsc	status,0,c
  8019  002CC0  D04B               	goto	i2u457_40
  8020  002CC2                     i2l97:
  8021                           
  8022                           ;main.c: 102: temp[i] = surface_three[i];
  8023  002CC2  0E46               	movlw	low _surface_three
  8024  002CC4  240C               	addwf	i2L@i,w,c
  8025  002CC6  6ED9               	movwf	fsr2l,c
  8026  002CC8  0E00               	movlw	high _surface_three
  8027  002CCA  200D               	addwfc	i2L@i+1,w,c
  8028  002CCC  6EDA               	movwf	fsr2h,c
  8029  002CCE  0E36               	movlw	low _temp
  8030  002CD0  240C               	addwf	i2L@i,w,c
  8031  002CD2  6EE1               	movwf	fsr1l,c
  8032  002CD4  0E00               	movlw	high _temp
  8033  002CD6  200D               	addwfc	i2L@i+1,w,c
  8034  002CD8  6EE2               	movwf	fsr1h,c
  8035  002CDA  CFDF FFE7          	movff	indf2,indf1
  8036                           
  8037                           ;main.c: 103: surface_three[i] = surface_one[i];
  8038  002CDE  0E4E               	movlw	low _surface_one
  8039  002CE0  240C               	addwf	i2L@i,w,c
  8040  002CE2  6ED9               	movwf	fsr2l,c
  8041  002CE4  0E00               	movlw	high _surface_one
  8042  002CE6  200D               	addwfc	i2L@i+1,w,c
  8043  002CE8  6EDA               	movwf	fsr2h,c
  8044  002CEA  0E46               	movlw	low _surface_three
  8045  002CEC  240C               	addwf	i2L@i,w,c
  8046  002CEE  6EE1               	movwf	fsr1l,c
  8047  002CF0  0E00               	movlw	high _surface_three
  8048  002CF2  200D               	addwfc	i2L@i+1,w,c
  8049  002CF4  6EE2               	movwf	fsr1h,c
  8050  002CF6  CFDF FFE7          	movff	indf2,indf1
  8051                           
  8052                           ;main.c: 104: surface_one[i] = surface_two[i];
  8053  002CFA  0E4A               	movlw	low _surface_two
  8054  002CFC  240C               	addwf	i2L@i,w,c
  8055  002CFE  6ED9               	movwf	fsr2l,c
  8056  002D00  0E00               	movlw	high _surface_two
  8057  002D02  200D               	addwfc	i2L@i+1,w,c
  8058  002D04  6EDA               	movwf	fsr2h,c
  8059  002D06  0E4E               	movlw	low _surface_one
  8060  002D08  240C               	addwf	i2L@i,w,c
  8061  002D0A  6EE1               	movwf	fsr1l,c
  8062  002D0C  0E00               	movlw	high _surface_one
  8063  002D0E  200D               	addwfc	i2L@i+1,w,c
  8064  002D10  6EE2               	movwf	fsr1h,c
  8065  002D12  CFDF FFE7          	movff	indf2,indf1
  8066                           
  8067                           ;main.c: 105: surface_two[i] = surface_six[i];
  8068  002D16  0E3A               	movlw	low _surface_six
  8069  002D18  240C               	addwf	i2L@i,w,c
  8070  002D1A  6ED9               	movwf	fsr2l,c
  8071  002D1C  0E00               	movlw	high _surface_six
  8072  002D1E  200D               	addwfc	i2L@i+1,w,c
  8073  002D20  6EDA               	movwf	fsr2h,c
  8074  002D22  0E4A               	movlw	low _surface_two
  8075  002D24  240C               	addwf	i2L@i,w,c
  8076  002D26  6EE1               	movwf	fsr1l,c
  8077  002D28  0E00               	movlw	high _surface_two
  8078  002D2A  200D               	addwfc	i2L@i+1,w,c
  8079  002D2C  6EE2               	movwf	fsr1h,c
  8080  002D2E  CFDF FFE7          	movff	indf2,indf1
  8081                           
  8082                           ;main.c: 106: surface_six[i] = temp[i];
  8083  002D32  0E36               	movlw	low _temp
  8084  002D34  240C               	addwf	i2L@i,w,c
  8085  002D36  6ED9               	movwf	fsr2l,c
  8086  002D38  0E00               	movlw	high _temp
  8087  002D3A  200D               	addwfc	i2L@i+1,w,c
  8088  002D3C  6EDA               	movwf	fsr2h,c
  8089  002D3E  0E3A               	movlw	low _surface_six
  8090  002D40  240C               	addwf	i2L@i,w,c
  8091  002D42  6EE1               	movwf	fsr1l,c
  8092  002D44  0E00               	movlw	high _surface_six
  8093  002D46  200D               	addwfc	i2L@i+1,w,c
  8094  002D48  6EE2               	movwf	fsr1h,c
  8095  002D4A  CFDF FFE7          	movff	indf2,indf1
  8096  002D4E  0E02               	movlw	2
  8097  002D50  260C               	addwf	i2L@i,f,c
  8098  002D52  0E00               	movlw	0
  8099  002D54  220D               	addwfc	i2L@i+1,f,c
  8100  002D56  D7AD               	goto	i2l4102
  8101  002D58                     i2u457_40:
  8102  002D58                     i2l4112:
  8103                           
  8104                           ;main.c: 107: }
  8105                           ;main.c: 108: led('L');
  8106  002D58  0E4C               	movlw	76
  8107  002D5A  EC6E  F00A         	call	i2_led
  8108  002D5E  0012               	return		;funcret
  8109  002D60                     __end_ofi2_L:
  8110                           	opt stack 0
  8111                           pclatu	equ	0xFFB
  8112                           pclath	equ	0xFFA
  8113                           tblptru	equ	0xFF8
  8114                           tblptrh	equ	0xFF7
  8115                           tblptrl	equ	0xFF6
  8116                           tablat	equ	0xFF5
  8117                           prodh	equ	0xFF4
  8118                           prodl	equ	0xFF3
  8119                           intcon	equ	0xFF2
  8120                           postinc0	equ	0xFEE
  8121                           fsr0h	equ	0xFEA
  8122                           fsr0l	equ	0xFE9
  8123                           wreg	equ	0xFE8
  8124                           indf1	equ	0xFE7
  8125                           postdec1	equ	0xFE5
  8126                           fsr1h	equ	0xFE2
  8127                           fsr1l	equ	0xFE1
  8128                           indf2	equ	0xFDF
  8129                           fsr2h	equ	0xFDA
  8130                           fsr2l	equ	0xFD9
  8131                           status	equ	0xFD8
  8132                           
  8133 ;; *************** function i2_Fi *****************
  8134 ;; Defined at:
  8135 ;;		line 164 in file "main.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;  Fi              2   11[COMRAM] int 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8149 ;;      Params:         0       0       0       0       0       0       0
  8150 ;;      Locals:         2       0       0       0       0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0
  8152 ;;      Totals:         2       0       0       0       0       0       0
  8153 ;;Total ram usage:        2 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    3
  8156 ;; This function calls:
  8157 ;;		i2_led
  8158 ;; This function is called by:
  8159 ;;		_scramble
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text28
  8164  003464                     __ptext28:
  8165                           	opt stack 0
  8166  003464                     i2_Fi:
  8167                           	opt stack 22
  8168                           
  8169                           ;main.c: 165: int i;
  8170                           ;main.c: 166: for(i=2;i<=3;i++) {
  8171                           
  8172                           ;incstack = 0
  8173  003464  0E00               	movlw	0
  8174  003466  6E0D               	movwf	i2Fi@i+1,c
  8175  003468  0E02               	movlw	2
  8176  00346A  6E0C               	movwf	i2Fi@i,c
  8177  00346C                     i2l4172:
  8178  00346C  BE0D               	btfsc	i2Fi@i+1,7,c
  8179  00346E  D006               	goto	i2l122
  8180  003470  500D               	movf	i2Fi@i+1,w,c
  8181  003472  E14D               	bnz	i2l4182
  8182  003474  0E04               	movlw	4
  8183  003476  5C0C               	subwf	i2Fi@i,w,c
  8184  003478  B0D8               	btfsc	status,0,c
  8185  00347A  D049               	goto	i2u467_40
  8186  00347C                     i2l122:
  8187                           
  8188                           ;main.c: 167: temp[i] = surface_one[i];
  8189  00347C  0E4E               	movlw	low _surface_one
  8190  00347E  240C               	addwf	i2Fi@i,w,c
  8191  003480  6ED9               	movwf	fsr2l,c
  8192  003482  0E00               	movlw	high _surface_one
  8193  003484  200D               	addwfc	i2Fi@i+1,w,c
  8194  003486  6EDA               	movwf	fsr2h,c
  8195  003488  0E36               	movlw	low _temp
  8196  00348A  240C               	addwf	i2Fi@i,w,c
  8197  00348C  6EE1               	movwf	fsr1l,c
  8198  00348E  0E00               	movlw	high _temp
  8199  003490  200D               	addwfc	i2Fi@i+1,w,c
  8200  003492  6EE2               	movwf	fsr1h,c
  8201  003494  CFDF FFE7          	movff	indf2,indf1
  8202                           
  8203                           ;main.c: 168: surface_one[i] = surface_four[i];
  8204  003498  0E42               	movlw	low _surface_four
  8205  00349A  240C               	addwf	i2Fi@i,w,c
  8206  00349C  6ED9               	movwf	fsr2l,c
  8207  00349E  0E00               	movlw	high _surface_four
  8208  0034A0  200D               	addwfc	i2Fi@i+1,w,c
  8209  0034A2  6EDA               	movwf	fsr2h,c
  8210  0034A4  0E4E               	movlw	low _surface_one
  8211  0034A6  240C               	addwf	i2Fi@i,w,c
  8212  0034A8  6EE1               	movwf	fsr1l,c
  8213  0034AA  0E00               	movlw	high _surface_one
  8214  0034AC  200D               	addwfc	i2Fi@i+1,w,c
  8215  0034AE  6EE2               	movwf	fsr1h,c
  8216  0034B0  CFDF FFE7          	movff	indf2,indf1
  8217                           
  8218                           ;main.c: 169: surface_four[i] = surface_six[i];
  8219  0034B4  0E3A               	movlw	low _surface_six
  8220  0034B6  240C               	addwf	i2Fi@i,w,c
  8221  0034B8  6ED9               	movwf	fsr2l,c
  8222  0034BA  0E00               	movlw	high _surface_six
  8223  0034BC  200D               	addwfc	i2Fi@i+1,w,c
  8224  0034BE  6EDA               	movwf	fsr2h,c
  8225  0034C0  0E42               	movlw	low _surface_four
  8226  0034C2  240C               	addwf	i2Fi@i,w,c
  8227  0034C4  6EE1               	movwf	fsr1l,c
  8228  0034C6  0E00               	movlw	high _surface_four
  8229  0034C8  200D               	addwfc	i2Fi@i+1,w,c
  8230  0034CA  6EE2               	movwf	fsr1h,c
  8231  0034CC  CFDF FFE7          	movff	indf2,indf1
  8232                           
  8233                           ;main.c: 170: surface_six[i] = surface_two[i];
  8234  0034D0  0E4A               	movlw	low _surface_two
  8235  0034D2  240C               	addwf	i2Fi@i,w,c
  8236  0034D4  6ED9               	movwf	fsr2l,c
  8237  0034D6  0E00               	movlw	high _surface_two
  8238  0034D8  200D               	addwfc	i2Fi@i+1,w,c
  8239  0034DA  6EDA               	movwf	fsr2h,c
  8240  0034DC  0E3A               	movlw	low _surface_six
  8241  0034DE  240C               	addwf	i2Fi@i,w,c
  8242  0034E0  6EE1               	movwf	fsr1l,c
  8243  0034E2  0E00               	movlw	high _surface_six
  8244  0034E4  200D               	addwfc	i2Fi@i+1,w,c
  8245  0034E6  6EE2               	movwf	fsr1h,c
  8246  0034E8  CFDF FFE7          	movff	indf2,indf1
  8247                           
  8248                           ;main.c: 171: surface_two[i] = temp[i];
  8249  0034EC  0E36               	movlw	low _temp
  8250  0034EE  240C               	addwf	i2Fi@i,w,c
  8251  0034F0  6ED9               	movwf	fsr2l,c
  8252  0034F2  0E00               	movlw	high _temp
  8253  0034F4  200D               	addwfc	i2Fi@i+1,w,c
  8254  0034F6  6EDA               	movwf	fsr2h,c
  8255  0034F8  0E4A               	movlw	low _surface_two
  8256  0034FA  240C               	addwf	i2Fi@i,w,c
  8257  0034FC  6EE1               	movwf	fsr1l,c
  8258  0034FE  0E00               	movlw	high _surface_two
  8259  003500  200D               	addwfc	i2Fi@i+1,w,c
  8260  003502  6EE2               	movwf	fsr1h,c
  8261  003504  CFDF FFE7          	movff	indf2,indf1
  8262  003508  4A0C               	infsnz	i2Fi@i,f,c
  8263  00350A  2A0D               	incf	i2Fi@i+1,f,c
  8264  00350C  D7AF               	goto	i2l4172
  8265  00350E                     i2u467_40:
  8266  00350E                     i2l4182:
  8267                           
  8268                           ;main.c: 172: }
  8269                           ;main.c: 173: led('F');
  8270  00350E  0E46               	movlw	70
  8271  003510  EC6E  F00A         	call	i2_led
  8272  003514  0012               	return		;funcret
  8273  003516                     __end_ofi2_Fi:
  8274                           	opt stack 0
  8275                           pclatu	equ	0xFFB
  8276                           pclath	equ	0xFFA
  8277                           tblptru	equ	0xFF8
  8278                           tblptrh	equ	0xFF7
  8279                           tblptrl	equ	0xFF6
  8280                           tablat	equ	0xFF5
  8281                           prodh	equ	0xFF4
  8282                           prodl	equ	0xFF3
  8283                           intcon	equ	0xFF2
  8284                           postinc0	equ	0xFEE
  8285                           fsr0h	equ	0xFEA
  8286                           fsr0l	equ	0xFE9
  8287                           wreg	equ	0xFE8
  8288                           indf1	equ	0xFE7
  8289                           postdec1	equ	0xFE5
  8290                           fsr1h	equ	0xFE2
  8291                           fsr1l	equ	0xFE1
  8292                           indf2	equ	0xFDF
  8293                           fsr2h	equ	0xFDA
  8294                           fsr2l	equ	0xFD9
  8295                           status	equ	0xFD8
  8296                           
  8297 ;; *************** function i2_F *****************
  8298 ;; Defined at:
  8299 ;;		line 151 in file "main.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  F               2   11[COMRAM] int 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8313 ;;      Params:         0       0       0       0       0       0       0
  8314 ;;      Locals:         2       0       0       0       0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0
  8316 ;;      Totals:         2       0       0       0       0       0       0
  8317 ;;Total ram usage:        2 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; Hardware stack levels required when called:    3
  8320 ;; This function calls:
  8321 ;;		i2_led
  8322 ;; This function is called by:
  8323 ;;		_scramble
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text29
  8328  003516                     __ptext29:
  8329                           	opt stack 0
  8330  003516                     i2_F:
  8331                           	opt stack 22
  8332                           
  8333                           ;main.c: 152: int i;
  8334                           ;main.c: 153: for(i=2;i<=3;i++) {
  8335                           
  8336                           ;incstack = 0
  8337  003516  0E00               	movlw	0
  8338  003518  6E0D               	movwf	i2F@i+1,c
  8339  00351A  0E02               	movlw	2
  8340  00351C  6E0C               	movwf	i2F@i,c
  8341  00351E                     i2l4158:
  8342  00351E  BE0D               	btfsc	i2F@i+1,7,c
  8343  003520  D006               	goto	i2l117
  8344  003522  500D               	movf	i2F@i+1,w,c
  8345  003524  E14D               	bnz	i2l4168
  8346  003526  0E04               	movlw	4
  8347  003528  5C0C               	subwf	i2F@i,w,c
  8348  00352A  B0D8               	btfsc	status,0,c
  8349  00352C  D049               	goto	i2u465_40
  8350  00352E                     i2l117:
  8351                           
  8352                           ;main.c: 154: temp[i] = surface_one[i];
  8353  00352E  0E4E               	movlw	low _surface_one
  8354  003530  240C               	addwf	i2F@i,w,c
  8355  003532  6ED9               	movwf	fsr2l,c
  8356  003534  0E00               	movlw	high _surface_one
  8357  003536  200D               	addwfc	i2F@i+1,w,c
  8358  003538  6EDA               	movwf	fsr2h,c
  8359  00353A  0E36               	movlw	low _temp
  8360  00353C  240C               	addwf	i2F@i,w,c
  8361  00353E  6EE1               	movwf	fsr1l,c
  8362  003540  0E00               	movlw	high _temp
  8363  003542  200D               	addwfc	i2F@i+1,w,c
  8364  003544  6EE2               	movwf	fsr1h,c
  8365  003546  CFDF FFE7          	movff	indf2,indf1
  8366                           
  8367                           ;main.c: 155: surface_one[i] = surface_two[i];
  8368  00354A  0E4A               	movlw	low _surface_two
  8369  00354C  240C               	addwf	i2F@i,w,c
  8370  00354E  6ED9               	movwf	fsr2l,c
  8371  003550  0E00               	movlw	high _surface_two
  8372  003552  200D               	addwfc	i2F@i+1,w,c
  8373  003554  6EDA               	movwf	fsr2h,c
  8374  003556  0E4E               	movlw	low _surface_one
  8375  003558  240C               	addwf	i2F@i,w,c
  8376  00355A  6EE1               	movwf	fsr1l,c
  8377  00355C  0E00               	movlw	high _surface_one
  8378  00355E  200D               	addwfc	i2F@i+1,w,c
  8379  003560  6EE2               	movwf	fsr1h,c
  8380  003562  CFDF FFE7          	movff	indf2,indf1
  8381                           
  8382                           ;main.c: 156: surface_two[i] = surface_six[i];
  8383  003566  0E3A               	movlw	low _surface_six
  8384  003568  240C               	addwf	i2F@i,w,c
  8385  00356A  6ED9               	movwf	fsr2l,c
  8386  00356C  0E00               	movlw	high _surface_six
  8387  00356E  200D               	addwfc	i2F@i+1,w,c
  8388  003570  6EDA               	movwf	fsr2h,c
  8389  003572  0E4A               	movlw	low _surface_two
  8390  003574  240C               	addwf	i2F@i,w,c
  8391  003576  6EE1               	movwf	fsr1l,c
  8392  003578  0E00               	movlw	high _surface_two
  8393  00357A  200D               	addwfc	i2F@i+1,w,c
  8394  00357C  6EE2               	movwf	fsr1h,c
  8395  00357E  CFDF FFE7          	movff	indf2,indf1
  8396                           
  8397                           ;main.c: 157: surface_six[i] = surface_four[i];
  8398  003582  0E42               	movlw	low _surface_four
  8399  003584  240C               	addwf	i2F@i,w,c
  8400  003586  6ED9               	movwf	fsr2l,c
  8401  003588  0E00               	movlw	high _surface_four
  8402  00358A  200D               	addwfc	i2F@i+1,w,c
  8403  00358C  6EDA               	movwf	fsr2h,c
  8404  00358E  0E3A               	movlw	low _surface_six
  8405  003590  240C               	addwf	i2F@i,w,c
  8406  003592  6EE1               	movwf	fsr1l,c
  8407  003594  0E00               	movlw	high _surface_six
  8408  003596  200D               	addwfc	i2F@i+1,w,c
  8409  003598  6EE2               	movwf	fsr1h,c
  8410  00359A  CFDF FFE7          	movff	indf2,indf1
  8411                           
  8412                           ;main.c: 158: surface_four[i] = temp[i];
  8413  00359E  0E36               	movlw	low _temp
  8414  0035A0  240C               	addwf	i2F@i,w,c
  8415  0035A2  6ED9               	movwf	fsr2l,c
  8416  0035A4  0E00               	movlw	high _temp
  8417  0035A6  200D               	addwfc	i2F@i+1,w,c
  8418  0035A8  6EDA               	movwf	fsr2h,c
  8419  0035AA  0E42               	movlw	low _surface_four
  8420  0035AC  240C               	addwf	i2F@i,w,c
  8421  0035AE  6EE1               	movwf	fsr1l,c
  8422  0035B0  0E00               	movlw	high _surface_four
  8423  0035B2  200D               	addwfc	i2F@i+1,w,c
  8424  0035B4  6EE2               	movwf	fsr1h,c
  8425  0035B6  CFDF FFE7          	movff	indf2,indf1
  8426  0035BA  4A0C               	infsnz	i2F@i,f,c
  8427  0035BC  2A0D               	incf	i2F@i+1,f,c
  8428  0035BE  D7AF               	goto	i2l4158
  8429  0035C0                     i2u465_40:
  8430  0035C0                     i2l4168:
  8431                           
  8432                           ;main.c: 159: }
  8433                           ;main.c: 160: led('F');
  8434  0035C0  0E46               	movlw	70
  8435  0035C2  EC6E  F00A         	call	i2_led
  8436  0035C6  0012               	return		;funcret
  8437  0035C8                     __end_ofi2_F:
  8438                           	opt stack 0
  8439                           pclatu	equ	0xFFB
  8440                           pclath	equ	0xFFA
  8441                           tblptru	equ	0xFF8
  8442                           tblptrh	equ	0xFF7
  8443                           tblptrl	equ	0xFF6
  8444                           tablat	equ	0xFF5
  8445                           prodh	equ	0xFF4
  8446                           prodl	equ	0xFF3
  8447                           intcon	equ	0xFF2
  8448                           postinc0	equ	0xFEE
  8449                           fsr0h	equ	0xFEA
  8450                           fsr0l	equ	0xFE9
  8451                           wreg	equ	0xFE8
  8452                           indf1	equ	0xFE7
  8453                           postdec1	equ	0xFE5
  8454                           fsr1h	equ	0xFE2
  8455                           fsr1l	equ	0xFE1
  8456                           indf2	equ	0xFDF
  8457                           fsr2h	equ	0xFDA
  8458                           fsr2l	equ	0xFD9
  8459                           status	equ	0xFD8
  8460                           
  8461 ;; *************** function i2_Di *****************
  8462 ;; Defined at:
  8463 ;;		line 86 in file "main.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  Di              2   11[COMRAM] int 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8477 ;;      Params:         0       0       0       0       0       0       0
  8478 ;;      Locals:         2       0       0       0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0
  8480 ;;      Totals:         2       0       0       0       0       0       0
  8481 ;;Total ram usage:        2 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    3
  8484 ;; This function calls:
  8485 ;;		i2_led
  8486 ;; This function is called by:
  8487 ;;		_scramble
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text30
  8492  0035C8                     __ptext30:
  8493                           	opt stack 0
  8494  0035C8                     i2_Di:
  8495                           	opt stack 22
  8496                           
  8497                           ;main.c: 87: int i;
  8498                           ;main.c: 88: for(i=2;i<4;i++) {
  8499                           
  8500                           ;incstack = 0
  8501  0035C8  0E00               	movlw	0
  8502  0035CA  6E0D               	movwf	i2Di@i+1,c
  8503  0035CC  0E02               	movlw	2
  8504  0035CE  6E0C               	movwf	i2Di@i,c
  8505  0035D0                     i2l4088:
  8506  0035D0  BE0D               	btfsc	i2Di@i+1,7,c
  8507  0035D2  D006               	goto	i2l92
  8508  0035D4  500D               	movf	i2Di@i+1,w,c
  8509  0035D6  E14D               	bnz	i2l4098
  8510  0035D8  0E04               	movlw	4
  8511  0035DA  5C0C               	subwf	i2Di@i,w,c
  8512  0035DC  B0D8               	btfsc	status,0,c
  8513  0035DE  D049               	goto	i2u455_40
  8514  0035E0                     i2l92:
  8515                           
  8516                           ;main.c: 89: temp[i] = surface_three[i];
  8517  0035E0  0E46               	movlw	low _surface_three
  8518  0035E2  240C               	addwf	i2Di@i,w,c
  8519  0035E4  6ED9               	movwf	fsr2l,c
  8520  0035E6  0E00               	movlw	high _surface_three
  8521  0035E8  200D               	addwfc	i2Di@i+1,w,c
  8522  0035EA  6EDA               	movwf	fsr2h,c
  8523  0035EC  0E36               	movlw	low _temp
  8524  0035EE  240C               	addwf	i2Di@i,w,c
  8525  0035F0  6EE1               	movwf	fsr1l,c
  8526  0035F2  0E00               	movlw	high _temp
  8527  0035F4  200D               	addwfc	i2Di@i+1,w,c
  8528  0035F6  6EE2               	movwf	fsr1h,c
  8529  0035F8  CFDF FFE7          	movff	indf2,indf1
  8530                           
  8531                           ;main.c: 90: surface_three[i] = surface_four[i];
  8532  0035FC  0E42               	movlw	low _surface_four
  8533  0035FE  240C               	addwf	i2Di@i,w,c
  8534  003600  6ED9               	movwf	fsr2l,c
  8535  003602  0E00               	movlw	high _surface_four
  8536  003604  200D               	addwfc	i2Di@i+1,w,c
  8537  003606  6EDA               	movwf	fsr2h,c
  8538  003608  0E46               	movlw	low _surface_three
  8539  00360A  240C               	addwf	i2Di@i,w,c
  8540  00360C  6EE1               	movwf	fsr1l,c
  8541  00360E  0E00               	movlw	high _surface_three
  8542  003610  200D               	addwfc	i2Di@i+1,w,c
  8543  003612  6EE2               	movwf	fsr1h,c
  8544  003614  CFDF FFE7          	movff	indf2,indf1
  8545                           
  8546                           ;main.c: 91: surface_four[i] = surface_five[i];
  8547  003618  0E3E               	movlw	low _surface_five
  8548  00361A  240C               	addwf	i2Di@i,w,c
  8549  00361C  6ED9               	movwf	fsr2l,c
  8550  00361E  0E00               	movlw	high _surface_five
  8551  003620  200D               	addwfc	i2Di@i+1,w,c
  8552  003622  6EDA               	movwf	fsr2h,c
  8553  003624  0E42               	movlw	low _surface_four
  8554  003626  240C               	addwf	i2Di@i,w,c
  8555  003628  6EE1               	movwf	fsr1l,c
  8556  00362A  0E00               	movlw	high _surface_four
  8557  00362C  200D               	addwfc	i2Di@i+1,w,c
  8558  00362E  6EE2               	movwf	fsr1h,c
  8559  003630  CFDF FFE7          	movff	indf2,indf1
  8560                           
  8561                           ;main.c: 92: surface_five[i] = surface_two[i];
  8562  003634  0E4A               	movlw	low _surface_two
  8563  003636  240C               	addwf	i2Di@i,w,c
  8564  003638  6ED9               	movwf	fsr2l,c
  8565  00363A  0E00               	movlw	high _surface_two
  8566  00363C  200D               	addwfc	i2Di@i+1,w,c
  8567  00363E  6EDA               	movwf	fsr2h,c
  8568  003640  0E3E               	movlw	low _surface_five
  8569  003642  240C               	addwf	i2Di@i,w,c
  8570  003644  6EE1               	movwf	fsr1l,c
  8571  003646  0E00               	movlw	high _surface_five
  8572  003648  200D               	addwfc	i2Di@i+1,w,c
  8573  00364A  6EE2               	movwf	fsr1h,c
  8574  00364C  CFDF FFE7          	movff	indf2,indf1
  8575                           
  8576                           ;main.c: 93: surface_two[i] = temp[i];
  8577  003650  0E36               	movlw	low _temp
  8578  003652  240C               	addwf	i2Di@i,w,c
  8579  003654  6ED9               	movwf	fsr2l,c
  8580  003656  0E00               	movlw	high _temp
  8581  003658  200D               	addwfc	i2Di@i+1,w,c
  8582  00365A  6EDA               	movwf	fsr2h,c
  8583  00365C  0E4A               	movlw	low _surface_two
  8584  00365E  240C               	addwf	i2Di@i,w,c
  8585  003660  6EE1               	movwf	fsr1l,c
  8586  003662  0E00               	movlw	high _surface_two
  8587  003664  200D               	addwfc	i2Di@i+1,w,c
  8588  003666  6EE2               	movwf	fsr1h,c
  8589  003668  CFDF FFE7          	movff	indf2,indf1
  8590  00366C  4A0C               	infsnz	i2Di@i,f,c
  8591  00366E  2A0D               	incf	i2Di@i+1,f,c
  8592  003670  D7AF               	goto	i2l4088
  8593  003672                     i2u455_40:
  8594  003672                     i2l4098:
  8595                           
  8596                           ;main.c: 94: }
  8597                           ;main.c: 95: led('D');
  8598  003672  0E44               	movlw	68
  8599  003674  EC6E  F00A         	call	i2_led
  8600  003678  0012               	return		;funcret
  8601  00367A                     __end_ofi2_Di:
  8602                           	opt stack 0
  8603                           pclatu	equ	0xFFB
  8604                           pclath	equ	0xFFA
  8605                           tblptru	equ	0xFF8
  8606                           tblptrh	equ	0xFF7
  8607                           tblptrl	equ	0xFF6
  8608                           tablat	equ	0xFF5
  8609                           prodh	equ	0xFF4
  8610                           prodl	equ	0xFF3
  8611                           intcon	equ	0xFF2
  8612                           postinc0	equ	0xFEE
  8613                           fsr0h	equ	0xFEA
  8614                           fsr0l	equ	0xFE9
  8615                           wreg	equ	0xFE8
  8616                           indf1	equ	0xFE7
  8617                           postdec1	equ	0xFE5
  8618                           fsr1h	equ	0xFE2
  8619                           fsr1l	equ	0xFE1
  8620                           indf2	equ	0xFDF
  8621                           fsr2h	equ	0xFDA
  8622                           fsr2l	equ	0xFD9
  8623                           status	equ	0xFD8
  8624                           
  8625 ;; *************** function i2_D *****************
  8626 ;; Defined at:
  8627 ;;		line 73 in file "main.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;		None
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;  D               2   11[COMRAM] int 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8641 ;;      Params:         0       0       0       0       0       0       0
  8642 ;;      Locals:         2       0       0       0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0       0       0
  8644 ;;      Totals:         2       0       0       0       0       0       0
  8645 ;;Total ram usage:        2 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    3
  8648 ;; This function calls:
  8649 ;;		i2_led
  8650 ;; This function is called by:
  8651 ;;		_scramble
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text31
  8656  00367A                     __ptext31:
  8657                           	opt stack 0
  8658  00367A                     i2_D:
  8659                           	opt stack 22
  8660                           
  8661                           ;main.c: 74: int i;
  8662                           ;main.c: 75: for(i=2;i<4;i++) {
  8663                           
  8664                           ;incstack = 0
  8665  00367A  0E00               	movlw	0
  8666  00367C  6E0D               	movwf	i2D@i+1,c
  8667  00367E  0E02               	movlw	2
  8668  003680  6E0C               	movwf	i2D@i,c
  8669  003682                     i2l4074:
  8670  003682  BE0D               	btfsc	i2D@i+1,7,c
  8671  003684  D006               	goto	i2l87
  8672  003686  500D               	movf	i2D@i+1,w,c
  8673  003688  E14D               	bnz	i2l4084
  8674  00368A  0E04               	movlw	4
  8675  00368C  5C0C               	subwf	i2D@i,w,c
  8676  00368E  B0D8               	btfsc	status,0,c
  8677  003690  D049               	goto	i2u453_40
  8678  003692                     i2l87:
  8679                           
  8680                           ;main.c: 76: temp[i] = surface_three[i];
  8681  003692  0E46               	movlw	low _surface_three
  8682  003694  240C               	addwf	i2D@i,w,c
  8683  003696  6ED9               	movwf	fsr2l,c
  8684  003698  0E00               	movlw	high _surface_three
  8685  00369A  200D               	addwfc	i2D@i+1,w,c
  8686  00369C  6EDA               	movwf	fsr2h,c
  8687  00369E  0E36               	movlw	low _temp
  8688  0036A0  240C               	addwf	i2D@i,w,c
  8689  0036A2  6EE1               	movwf	fsr1l,c
  8690  0036A4  0E00               	movlw	high _temp
  8691  0036A6  200D               	addwfc	i2D@i+1,w,c
  8692  0036A8  6EE2               	movwf	fsr1h,c
  8693  0036AA  CFDF FFE7          	movff	indf2,indf1
  8694                           
  8695                           ;main.c: 77: surface_three[i] = surface_two[i];
  8696  0036AE  0E4A               	movlw	low _surface_two
  8697  0036B0  240C               	addwf	i2D@i,w,c
  8698  0036B2  6ED9               	movwf	fsr2l,c
  8699  0036B4  0E00               	movlw	high _surface_two
  8700  0036B6  200D               	addwfc	i2D@i+1,w,c
  8701  0036B8  6EDA               	movwf	fsr2h,c
  8702  0036BA  0E46               	movlw	low _surface_three
  8703  0036BC  240C               	addwf	i2D@i,w,c
  8704  0036BE  6EE1               	movwf	fsr1l,c
  8705  0036C0  0E00               	movlw	high _surface_three
  8706  0036C2  200D               	addwfc	i2D@i+1,w,c
  8707  0036C4  6EE2               	movwf	fsr1h,c
  8708  0036C6  CFDF FFE7          	movff	indf2,indf1
  8709                           
  8710                           ;main.c: 78: surface_two[i] = surface_five[i];
  8711  0036CA  0E3E               	movlw	low _surface_five
  8712  0036CC  240C               	addwf	i2D@i,w,c
  8713  0036CE  6ED9               	movwf	fsr2l,c
  8714  0036D0  0E00               	movlw	high _surface_five
  8715  0036D2  200D               	addwfc	i2D@i+1,w,c
  8716  0036D4  6EDA               	movwf	fsr2h,c
  8717  0036D6  0E4A               	movlw	low _surface_two
  8718  0036D8  240C               	addwf	i2D@i,w,c
  8719  0036DA  6EE1               	movwf	fsr1l,c
  8720  0036DC  0E00               	movlw	high _surface_two
  8721  0036DE  200D               	addwfc	i2D@i+1,w,c
  8722  0036E0  6EE2               	movwf	fsr1h,c
  8723  0036E2  CFDF FFE7          	movff	indf2,indf1
  8724                           
  8725                           ;main.c: 79: surface_five[i] = surface_four[i];
  8726  0036E6  0E42               	movlw	low _surface_four
  8727  0036E8  240C               	addwf	i2D@i,w,c
  8728  0036EA  6ED9               	movwf	fsr2l,c
  8729  0036EC  0E00               	movlw	high _surface_four
  8730  0036EE  200D               	addwfc	i2D@i+1,w,c
  8731  0036F0  6EDA               	movwf	fsr2h,c
  8732  0036F2  0E3E               	movlw	low _surface_five
  8733  0036F4  240C               	addwf	i2D@i,w,c
  8734  0036F6  6EE1               	movwf	fsr1l,c
  8735  0036F8  0E00               	movlw	high _surface_five
  8736  0036FA  200D               	addwfc	i2D@i+1,w,c
  8737  0036FC  6EE2               	movwf	fsr1h,c
  8738  0036FE  CFDF FFE7          	movff	indf2,indf1
  8739                           
  8740                           ;main.c: 80: surface_four[i] = temp[i];
  8741  003702  0E36               	movlw	low _temp
  8742  003704  240C               	addwf	i2D@i,w,c
  8743  003706  6ED9               	movwf	fsr2l,c
  8744  003708  0E00               	movlw	high _temp
  8745  00370A  200D               	addwfc	i2D@i+1,w,c
  8746  00370C  6EDA               	movwf	fsr2h,c
  8747  00370E  0E42               	movlw	low _surface_four
  8748  003710  240C               	addwf	i2D@i,w,c
  8749  003712  6EE1               	movwf	fsr1l,c
  8750  003714  0E00               	movlw	high _surface_four
  8751  003716  200D               	addwfc	i2D@i+1,w,c
  8752  003718  6EE2               	movwf	fsr1h,c
  8753  00371A  CFDF FFE7          	movff	indf2,indf1
  8754  00371E  4A0C               	infsnz	i2D@i,f,c
  8755  003720  2A0D               	incf	i2D@i+1,f,c
  8756  003722  D7AF               	goto	i2l4074
  8757  003724                     i2u453_40:
  8758  003724                     i2l4084:
  8759                           
  8760                           ;main.c: 81: }
  8761                           ;main.c: 82: led('D');
  8762  003724  0E44               	movlw	68
  8763  003726  EC6E  F00A         	call	i2_led
  8764  00372A  0012               	return		;funcret
  8765  00372C                     __end_ofi2_D:
  8766                           	opt stack 0
  8767                           pclatu	equ	0xFFB
  8768                           pclath	equ	0xFFA
  8769                           tblptru	equ	0xFF8
  8770                           tblptrh	equ	0xFF7
  8771                           tblptrl	equ	0xFF6
  8772                           tablat	equ	0xFF5
  8773                           prodh	equ	0xFF4
  8774                           prodl	equ	0xFF3
  8775                           intcon	equ	0xFF2
  8776                           postinc0	equ	0xFEE
  8777                           fsr0h	equ	0xFEA
  8778                           fsr0l	equ	0xFE9
  8779                           wreg	equ	0xFE8
  8780                           indf1	equ	0xFE7
  8781                           postdec1	equ	0xFE5
  8782                           fsr1h	equ	0xFE2
  8783                           fsr1l	equ	0xFE1
  8784                           indf2	equ	0xFDF
  8785                           fsr2h	equ	0xFDA
  8786                           fsr2l	equ	0xFD9
  8787                           status	equ	0xFD8
  8788                           
  8789 ;; *************** function i2_Bi *****************
  8790 ;; Defined at:
  8791 ;;		line 190 in file "main.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  Bi              2   11[COMRAM] int 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8805 ;;      Params:         0       0       0       0       0       0       0
  8806 ;;      Locals:         2       0       0       0       0       0       0
  8807 ;;      Temps:          0       0       0       0       0       0       0
  8808 ;;      Totals:         2       0       0       0       0       0       0
  8809 ;;Total ram usage:        2 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; Hardware stack levels required when called:    3
  8812 ;; This function calls:
  8813 ;;		i2_led
  8814 ;; This function is called by:
  8815 ;;		_scramble
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text32
  8820  00372C                     __ptext32:
  8821                           	opt stack 0
  8822  00372C                     i2_Bi:
  8823                           	opt stack 22
  8824                           
  8825                           ;main.c: 191: int i;
  8826                           ;main.c: 192: for(i=0;i<=1;i++) {
  8827                           
  8828                           ;incstack = 0
  8829  00372C  0E00               	movlw	0
  8830  00372E  6E0D               	movwf	i2Bi@i+1,c
  8831  003730  0E00               	movlw	0
  8832  003732  6E0C               	movwf	i2Bi@i,c
  8833  003734                     i2l4200:
  8834  003734  BE0D               	btfsc	i2Bi@i+1,7,c
  8835  003736  D006               	goto	i2l132
  8836  003738  500D               	movf	i2Bi@i+1,w,c
  8837  00373A  E14D               	bnz	i2l4210
  8838  00373C  0E02               	movlw	2
  8839  00373E  5C0C               	subwf	i2Bi@i,w,c
  8840  003740  B0D8               	btfsc	status,0,c
  8841  003742  D049               	goto	i2u471_40
  8842  003744                     i2l132:
  8843                           
  8844                           ;main.c: 193: temp[i] = surface_one[i];
  8845  003744  0E4E               	movlw	low _surface_one
  8846  003746  240C               	addwf	i2Bi@i,w,c
  8847  003748  6ED9               	movwf	fsr2l,c
  8848  00374A  0E00               	movlw	high _surface_one
  8849  00374C  200D               	addwfc	i2Bi@i+1,w,c
  8850  00374E  6EDA               	movwf	fsr2h,c
  8851  003750  0E36               	movlw	low _temp
  8852  003752  240C               	addwf	i2Bi@i,w,c
  8853  003754  6EE1               	movwf	fsr1l,c
  8854  003756  0E00               	movlw	high _temp
  8855  003758  200D               	addwfc	i2Bi@i+1,w,c
  8856  00375A  6EE2               	movwf	fsr1h,c
  8857  00375C  CFDF FFE7          	movff	indf2,indf1
  8858                           
  8859                           ;main.c: 194: surface_one[i] = surface_two[i];
  8860  003760  0E4A               	movlw	low _surface_two
  8861  003762  240C               	addwf	i2Bi@i,w,c
  8862  003764  6ED9               	movwf	fsr2l,c
  8863  003766  0E00               	movlw	high _surface_two
  8864  003768  200D               	addwfc	i2Bi@i+1,w,c
  8865  00376A  6EDA               	movwf	fsr2h,c
  8866  00376C  0E4E               	movlw	low _surface_one
  8867  00376E  240C               	addwf	i2Bi@i,w,c
  8868  003770  6EE1               	movwf	fsr1l,c
  8869  003772  0E00               	movlw	high _surface_one
  8870  003774  200D               	addwfc	i2Bi@i+1,w,c
  8871  003776  6EE2               	movwf	fsr1h,c
  8872  003778  CFDF FFE7          	movff	indf2,indf1
  8873                           
  8874                           ;main.c: 195: surface_two[i] = surface_six[i];
  8875  00377C  0E3A               	movlw	low _surface_six
  8876  00377E  240C               	addwf	i2Bi@i,w,c
  8877  003780  6ED9               	movwf	fsr2l,c
  8878  003782  0E00               	movlw	high _surface_six
  8879  003784  200D               	addwfc	i2Bi@i+1,w,c
  8880  003786  6EDA               	movwf	fsr2h,c
  8881  003788  0E4A               	movlw	low _surface_two
  8882  00378A  240C               	addwf	i2Bi@i,w,c
  8883  00378C  6EE1               	movwf	fsr1l,c
  8884  00378E  0E00               	movlw	high _surface_two
  8885  003790  200D               	addwfc	i2Bi@i+1,w,c
  8886  003792  6EE2               	movwf	fsr1h,c
  8887  003794  CFDF FFE7          	movff	indf2,indf1
  8888                           
  8889                           ;main.c: 196: surface_six[i] = surface_four[i];
  8890  003798  0E42               	movlw	low _surface_four
  8891  00379A  240C               	addwf	i2Bi@i,w,c
  8892  00379C  6ED9               	movwf	fsr2l,c
  8893  00379E  0E00               	movlw	high _surface_four
  8894  0037A0  200D               	addwfc	i2Bi@i+1,w,c
  8895  0037A2  6EDA               	movwf	fsr2h,c
  8896  0037A4  0E3A               	movlw	low _surface_six
  8897  0037A6  240C               	addwf	i2Bi@i,w,c
  8898  0037A8  6EE1               	movwf	fsr1l,c
  8899  0037AA  0E00               	movlw	high _surface_six
  8900  0037AC  200D               	addwfc	i2Bi@i+1,w,c
  8901  0037AE  6EE2               	movwf	fsr1h,c
  8902  0037B0  CFDF FFE7          	movff	indf2,indf1
  8903                           
  8904                           ;main.c: 197: surface_four[i] = temp[i];
  8905  0037B4  0E36               	movlw	low _temp
  8906  0037B6  240C               	addwf	i2Bi@i,w,c
  8907  0037B8  6ED9               	movwf	fsr2l,c
  8908  0037BA  0E00               	movlw	high _temp
  8909  0037BC  200D               	addwfc	i2Bi@i+1,w,c
  8910  0037BE  6EDA               	movwf	fsr2h,c
  8911  0037C0  0E42               	movlw	low _surface_four
  8912  0037C2  240C               	addwf	i2Bi@i,w,c
  8913  0037C4  6EE1               	movwf	fsr1l,c
  8914  0037C6  0E00               	movlw	high _surface_four
  8915  0037C8  200D               	addwfc	i2Bi@i+1,w,c
  8916  0037CA  6EE2               	movwf	fsr1h,c
  8917  0037CC  CFDF FFE7          	movff	indf2,indf1
  8918  0037D0  4A0C               	infsnz	i2Bi@i,f,c
  8919  0037D2  2A0D               	incf	i2Bi@i+1,f,c
  8920  0037D4  D7AF               	goto	i2l4200
  8921  0037D6                     i2u471_40:
  8922  0037D6                     i2l4210:
  8923                           
  8924                           ;main.c: 198: }
  8925                           ;main.c: 199: led('B');
  8926  0037D6  0E42               	movlw	66
  8927  0037D8  EC6E  F00A         	call	i2_led
  8928  0037DC  0012               	return		;funcret
  8929  0037DE                     __end_ofi2_Bi:
  8930                           	opt stack 0
  8931                           pclatu	equ	0xFFB
  8932                           pclath	equ	0xFFA
  8933                           tblptru	equ	0xFF8
  8934                           tblptrh	equ	0xFF7
  8935                           tblptrl	equ	0xFF6
  8936                           tablat	equ	0xFF5
  8937                           prodh	equ	0xFF4
  8938                           prodl	equ	0xFF3
  8939                           intcon	equ	0xFF2
  8940                           postinc0	equ	0xFEE
  8941                           fsr0h	equ	0xFEA
  8942                           fsr0l	equ	0xFE9
  8943                           wreg	equ	0xFE8
  8944                           indf1	equ	0xFE7
  8945                           postdec1	equ	0xFE5
  8946                           fsr1h	equ	0xFE2
  8947                           fsr1l	equ	0xFE1
  8948                           indf2	equ	0xFDF
  8949                           fsr2h	equ	0xFDA
  8950                           fsr2l	equ	0xFD9
  8951                           status	equ	0xFD8
  8952                           
  8953 ;; *************** function i2_B *****************
  8954 ;; Defined at:
  8955 ;;		line 177 in file "main.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;		None
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  B               2   11[COMRAM] int 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8969 ;;      Params:         0       0       0       0       0       0       0
  8970 ;;      Locals:         2       0       0       0       0       0       0
  8971 ;;      Temps:          0       0       0       0       0       0       0
  8972 ;;      Totals:         2       0       0       0       0       0       0
  8973 ;;Total ram usage:        2 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    3
  8976 ;; This function calls:
  8977 ;;		i2_led
  8978 ;; This function is called by:
  8979 ;;		_scramble
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           	psect	text33
  8984  0037DE                     __ptext33:
  8985                           	opt stack 0
  8986  0037DE                     i2_B:
  8987                           	opt stack 22
  8988                           
  8989                           ;main.c: 178: int i;
  8990                           ;main.c: 179: for(i=0;i<=1;i++) {
  8991                           
  8992                           ;incstack = 0
  8993  0037DE  0E00               	movlw	0
  8994  0037E0  6E0D               	movwf	i2B@i+1,c
  8995  0037E2  0E00               	movlw	0
  8996  0037E4  6E0C               	movwf	i2B@i,c
  8997  0037E6                     i2l4186:
  8998  0037E6  BE0D               	btfsc	i2B@i+1,7,c
  8999  0037E8  D006               	goto	i2l127
  9000  0037EA  500D               	movf	i2B@i+1,w,c
  9001  0037EC  E14D               	bnz	i2l4196
  9002  0037EE  0E02               	movlw	2
  9003  0037F0  5C0C               	subwf	i2B@i,w,c
  9004  0037F2  B0D8               	btfsc	status,0,c
  9005  0037F4  D049               	goto	i2u469_40
  9006  0037F6                     i2l127:
  9007                           
  9008                           ;main.c: 180: temp[i] = surface_one[i];
  9009  0037F6  0E4E               	movlw	low _surface_one
  9010  0037F8  240C               	addwf	i2B@i,w,c
  9011  0037FA  6ED9               	movwf	fsr2l,c
  9012  0037FC  0E00               	movlw	high _surface_one
  9013  0037FE  200D               	addwfc	i2B@i+1,w,c
  9014  003800  6EDA               	movwf	fsr2h,c
  9015  003802  0E36               	movlw	low _temp
  9016  003804  240C               	addwf	i2B@i,w,c
  9017  003806  6EE1               	movwf	fsr1l,c
  9018  003808  0E00               	movlw	high _temp
  9019  00380A  200D               	addwfc	i2B@i+1,w,c
  9020  00380C  6EE2               	movwf	fsr1h,c
  9021  00380E  CFDF FFE7          	movff	indf2,indf1
  9022                           
  9023                           ;main.c: 181: surface_one[i] = surface_four[i];
  9024  003812  0E42               	movlw	low _surface_four
  9025  003814  240C               	addwf	i2B@i,w,c
  9026  003816  6ED9               	movwf	fsr2l,c
  9027  003818  0E00               	movlw	high _surface_four
  9028  00381A  200D               	addwfc	i2B@i+1,w,c
  9029  00381C  6EDA               	movwf	fsr2h,c
  9030  00381E  0E4E               	movlw	low _surface_one
  9031  003820  240C               	addwf	i2B@i,w,c
  9032  003822  6EE1               	movwf	fsr1l,c
  9033  003824  0E00               	movlw	high _surface_one
  9034  003826  200D               	addwfc	i2B@i+1,w,c
  9035  003828  6EE2               	movwf	fsr1h,c
  9036  00382A  CFDF FFE7          	movff	indf2,indf1
  9037                           
  9038                           ;main.c: 182: surface_four[i] = surface_six[i];
  9039  00382E  0E3A               	movlw	low _surface_six
  9040  003830  240C               	addwf	i2B@i,w,c
  9041  003832  6ED9               	movwf	fsr2l,c
  9042  003834  0E00               	movlw	high _surface_six
  9043  003836  200D               	addwfc	i2B@i+1,w,c
  9044  003838  6EDA               	movwf	fsr2h,c
  9045  00383A  0E42               	movlw	low _surface_four
  9046  00383C  240C               	addwf	i2B@i,w,c
  9047  00383E  6EE1               	movwf	fsr1l,c
  9048  003840  0E00               	movlw	high _surface_four
  9049  003842  200D               	addwfc	i2B@i+1,w,c
  9050  003844  6EE2               	movwf	fsr1h,c
  9051  003846  CFDF FFE7          	movff	indf2,indf1
  9052                           
  9053                           ;main.c: 183: surface_six[i] = surface_two[i];
  9054  00384A  0E4A               	movlw	low _surface_two
  9055  00384C  240C               	addwf	i2B@i,w,c
  9056  00384E  6ED9               	movwf	fsr2l,c
  9057  003850  0E00               	movlw	high _surface_two
  9058  003852  200D               	addwfc	i2B@i+1,w,c
  9059  003854  6EDA               	movwf	fsr2h,c
  9060  003856  0E3A               	movlw	low _surface_six
  9061  003858  240C               	addwf	i2B@i,w,c
  9062  00385A  6EE1               	movwf	fsr1l,c
  9063  00385C  0E00               	movlw	high _surface_six
  9064  00385E  200D               	addwfc	i2B@i+1,w,c
  9065  003860  6EE2               	movwf	fsr1h,c
  9066  003862  CFDF FFE7          	movff	indf2,indf1
  9067                           
  9068                           ;main.c: 184: surface_two[i] = temp[i];
  9069  003866  0E36               	movlw	low _temp
  9070  003868  240C               	addwf	i2B@i,w,c
  9071  00386A  6ED9               	movwf	fsr2l,c
  9072  00386C  0E00               	movlw	high _temp
  9073  00386E  200D               	addwfc	i2B@i+1,w,c
  9074  003870  6EDA               	movwf	fsr2h,c
  9075  003872  0E4A               	movlw	low _surface_two
  9076  003874  240C               	addwf	i2B@i,w,c
  9077  003876  6EE1               	movwf	fsr1l,c
  9078  003878  0E00               	movlw	high _surface_two
  9079  00387A  200D               	addwfc	i2B@i+1,w,c
  9080  00387C  6EE2               	movwf	fsr1h,c
  9081  00387E  CFDF FFE7          	movff	indf2,indf1
  9082  003882  4A0C               	infsnz	i2B@i,f,c
  9083  003884  2A0D               	incf	i2B@i+1,f,c
  9084  003886  D7AF               	goto	i2l4186
  9085  003888                     i2u469_40:
  9086  003888                     i2l4196:
  9087                           
  9088                           ;main.c: 185: }
  9089                           ;main.c: 186: led('B');
  9090  003888  0E42               	movlw	66
  9091  00388A  EC6E  F00A         	call	i2_led
  9092  00388E  0012               	return		;funcret
  9093  003890                     __end_ofi2_B:
  9094                           	opt stack 0
  9095                           pclatu	equ	0xFFB
  9096                           pclath	equ	0xFFA
  9097                           tblptru	equ	0xFF8
  9098                           tblptrh	equ	0xFF7
  9099                           tblptrl	equ	0xFF6
  9100                           tablat	equ	0xFF5
  9101                           prodh	equ	0xFF4
  9102                           prodl	equ	0xFF3
  9103                           intcon	equ	0xFF2
  9104                           postinc0	equ	0xFEE
  9105                           fsr0h	equ	0xFEA
  9106                           fsr0l	equ	0xFE9
  9107                           wreg	equ	0xFE8
  9108                           indf1	equ	0xFE7
  9109                           postdec1	equ	0xFE5
  9110                           fsr1h	equ	0xFE2
  9111                           fsr1l	equ	0xFE1
  9112                           indf2	equ	0xFDF
  9113                           fsr2h	equ	0xFDA
  9114                           fsr2l	equ	0xFD9
  9115                           status	equ	0xFD8
  9116                           
  9117 ;; *************** function i2_led *****************
  9118 ;; Defined at:
  9119 ;;		line 202 in file "main.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  rotate          1    wreg     unsigned char 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  rotate          1    5[COMRAM] unsigned char 
  9124 ;;  led             2    9[COMRAM] int 
  9125 ;;  led             2    7[COMRAM] int 
  9126 ;;  led             1    6[COMRAM] unsigned char 
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9136 ;;      Params:         0       0       0       0       0       0       0
  9137 ;;      Locals:         6       0       0       0       0       0       0
  9138 ;;      Temps:          4       0       0       0       0       0       0
  9139 ;;      Totals:        10       0       0       0       0       0       0
  9140 ;;Total ram usage:       10 bytes
  9141 ;; Hardware stack levels used:    1
  9142 ;; Hardware stack levels required when called:    2
  9143 ;; This function calls:
  9144 ;;		i2_spiRead
  9145 ;;		i2_spiWrite
  9146 ;; This function is called by:
  9147 ;;		i2_U
  9148 ;;		i2_Ui
  9149 ;;		i2_D
  9150 ;;		i2_Di
  9151 ;;		i2_L
  9152 ;;		i2_Li
  9153 ;;		i2_R
  9154 ;;		i2_Ri
  9155 ;;		i2_F
  9156 ;;		i2_Fi
  9157 ;;		i2_B
  9158 ;;		i2_Bi
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text34
  9163  0014DC                     __ptext34:
  9164                           	opt stack 0
  9165  0014DC                     i2_led:
  9166                           	opt stack 22
  9167                           
  9168                           ;incstack = 0
  9169                           ;i2led@rotate stored from wreg
  9170  0014DC  6E06               	movwf	i2led@rotate,c
  9171                           
  9172                           ;main.c: 203: int i;
  9173                           ;main.c: 204: char num = '1';
  9174  0014DE  0E31               	movlw	49
  9175  0014E0  6E07               	movwf	i2led@num,c
  9176                           
  9177                           ;main.c: 205: int count = 0;
  9178  0014E2  0E00               	movlw	0
  9179  0014E4  6E0B               	movwf	i2led@count+1,c
  9180  0014E6  0E00               	movlw	0
  9181  0014E8  6E0A               	movwf	i2led@count,c
  9182                           
  9183                           ;main.c: 206: TRISAbits.RA0 = 0;
  9184  0014EA  9092               	bcf	3986,0,c	;volatile
  9185                           
  9186                           ;main.c: 207: TRISAbits.RA1 = 0;
  9187  0014EC  9292               	bcf	3986,1,c	;volatile
  9188                           
  9189                           ;main.c: 208: TRISAbits.RA2 = 0;
  9190  0014EE  9492               	bcf	3986,2,c	;volatile
  9191                           
  9192                           ;main.c: 209: TRISAbits.RA3 = 0;
  9193  0014F0  9692               	bcf	3986,3,c	;volatile
  9194                           
  9195                           ;main.c: 210: TRISAbits.RA4 = 0;
  9196  0014F2  9892               	bcf	3986,4,c	;volatile
  9197                           
  9198                           ;main.c: 211: TRISAbits.RA5 = 0;
  9199  0014F4  9A92               	bcf	3986,5,c	;volatile
  9200                           
  9201                           ;main.c: 212: RA0 = 1;
  9202  0014F6  8080               	bsf	3968,0,c	;volatile
  9203                           
  9204                           ;main.c: 213: RA1 = 1;
  9205  0014F8  8280               	bsf	3968,1,c	;volatile
  9206                           
  9207                           ;main.c: 214: RA2 = 1;
  9208  0014FA  8480               	bsf	3968,2,c	;volatile
  9209                           
  9210                           ;main.c: 215: RA3 = 1;
  9211  0014FC  8680               	bsf	3968,3,c	;volatile
  9212                           
  9213                           ;main.c: 216: RA4 = 1;
  9214  0014FE  8880               	bsf	3968,4,c	;volatile
  9215                           
  9216                           ;main.c: 217: RA5 = 1;
  9217  001500  8A80               	bsf	3968,5,c	;volatile
  9218                           
  9219                           ;main.c: 218: if(rotate == 'U') {
  9220  001502  0E55               	movlw	85
  9221  001504  1806               	xorwf	i2led@rotate,w,c
  9222  001506  A4D8               	btfss	status,2,c
  9223  001508  D0D7               	goto	i2l137
  9224                           
  9225                           ;main.c: 219: for(i=0;i<2;i++) {
  9226  00150A  0E00               	movlw	0
  9227  00150C  6E09               	movwf	i2led@i+1,c
  9228  00150E  0E00               	movlw	0
  9229  001510  6E08               	movwf	i2led@i,c
  9230  001512  BE09               	btfsc	i2led@i+1,7,c
  9231  001514  D008               	goto	i2l138
  9232  001516  5009               	movf	i2led@i+1,w,c
  9233  001518  E105               	bnz	i2u321_40
  9234  00151A  0E02               	movlw	2
  9235  00151C  5C08               	subwf	i2led@i,w,c
  9236  00151E  B0D8               	btfsc	status,0,c
  9237  001520  0012               	return	
  9238  001522  D001               	goto	i2l138
  9239  001524                     i2u321_40:
  9240  001524  0012               	return	
  9241  001526                     i2l138:
  9242                           
  9243                           ;main.c: 220: for(count=0;count<6;count++) {
  9244  001526  0E00               	movlw	0
  9245  001528  6E0B               	movwf	i2led@count+1,c
  9246  00152A  0E00               	movlw	0
  9247  00152C  6E0A               	movwf	i2led@count,c
  9248  00152E  BE0B               	btfsc	i2led@count+1,7,c
  9249  001530  D008               	goto	i2l140
  9250  001532  500B               	movf	i2led@count+1,w,c
  9251  001534  E105               	bnz	i2u322_40
  9252  001536  0E06               	movlw	6
  9253  001538  5C0A               	subwf	i2led@count,w,c
  9254  00153A  B0D8               	btfsc	status,0,c
  9255  00153C  D0B1               	goto	i2u331_40
  9256  00153E  D001               	goto	i2l140
  9257  001540                     i2u322_40:
  9258  001540  D0AF               	goto	i2u331_40
  9259  001542                     i2l140:
  9260                           
  9261                           ;main.c: 221: if(surface_two[i] == num+count) {
  9262  001542  0E4A               	movlw	low _surface_two
  9263  001544  2408               	addwf	i2led@i,w,c
  9264  001546  6ED9               	movwf	fsr2l,c
  9265  001548  0E00               	movlw	high _surface_two
  9266  00154A  2009               	addwfc	i2led@i+1,w,c
  9267  00154C  6EDA               	movwf	fsr2h,c
  9268  00154E  50DF               	movf	indf2,w,c
  9269  001550  6E02               	movwf	??i2_led& (0+255),c
  9270  001552  6A03               	clrf	(??i2_led+1)& (0+255),c
  9271  001554  5007               	movf	i2led@num,w,c
  9272  001556  240A               	addwf	i2led@count,w,c
  9273  001558  6E04               	movwf	(??i2_led+2)& (0+255),c
  9274  00155A  0E00               	movlw	0
  9275  00155C  200B               	addwfc	i2led@count+1,w,c
  9276  00155E  6E05               	movwf	(??i2_led+3)& (0+255),c
  9277  001560  5002               	movf	??i2_led,w,c
  9278  001562  1804               	xorwf	??i2_led+2,w,c
  9279  001564  E118               	bnz	i2l3236
  9280  001566  5003               	movf	??i2_led+1,w,c
  9281  001568  1805               	xorwf	??i2_led+3,w,c
  9282  00156A  A4D8               	btfss	status,2,c
  9283  00156C  D014               	goto	i2l142
  9284                           
  9285                           ;main.c: 222: RA1 = 0;
  9286  00156E  9280               	bcf	3968,1,c	;volatile
  9287                           
  9288                           ;main.c: 223: if(i == 0) {
  9289  001570  5008               	movf	i2led@i,w,c
  9290  001572  1009               	iorwf	i2led@i+1,w,c
  9291  001574  A4D8               	btfss	status,2,c
  9292  001576  D007               	goto	i2l143
  9293                           
  9294                           ;main.c: 224: spiWrite('a' + count);
  9295  001578  500A               	movf	i2led@count,w,c
  9296  00157A  0F61               	addlw	97
  9297  00157C  EC5F  F01D         	call	i2_spiWrite
  9298                           
  9299                           ;main.c: 225: re = spiRead();
  9300  001580  EC63  F01D         	call	i2_spiRead	;wreg free
  9301  001584  D006               	goto	L59
  9302  001586                     i2l143:
  9303                           
  9304                           ;main.c: 227: spiWrite('m'+ count);
  9305  001586  500A               	movf	i2led@count,w,c
  9306  001588  0F6D               	addlw	109
  9307  00158A  EC5F  F01D         	call	i2_spiWrite
  9308                           
  9309                           ;main.c: 228: re = spiRead();
  9310  00158E  EC63  F01D         	call	i2_spiRead	;wreg free
  9311  001592                     L59:
  9312  001592  6E52               	movwf	_re,c
  9313                           
  9314                           ;main.c: 229: }
  9315                           ;main.c: 230: RA1 = 1;
  9316  001594  8280               	bsf	3968,1,c	;volatile
  9317  001596                     i2l142:
  9318  001596                     i2l3236:
  9319                           
  9320                           ;main.c: 231: }
  9321                           ;main.c: 232: if(surface_three[i] == num+count) {
  9322  001596  0E46               	movlw	low _surface_three
  9323  001598  2408               	addwf	i2led@i,w,c
  9324  00159A  6ED9               	movwf	fsr2l,c
  9325  00159C  0E00               	movlw	high _surface_three
  9326  00159E  2009               	addwfc	i2led@i+1,w,c
  9327  0015A0  6EDA               	movwf	fsr2h,c
  9328  0015A2  50DF               	movf	indf2,w,c
  9329  0015A4  6E02               	movwf	??i2_led& (0+255),c
  9330  0015A6  6A03               	clrf	(??i2_led+1)& (0+255),c
  9331  0015A8  5007               	movf	i2led@num,w,c
  9332  0015AA  240A               	addwf	i2led@count,w,c
  9333  0015AC  6E04               	movwf	(??i2_led+2)& (0+255),c
  9334  0015AE  0E00               	movlw	0
  9335  0015B0  200B               	addwfc	i2led@count+1,w,c
  9336  0015B2  6E05               	movwf	(??i2_led+3)& (0+255),c
  9337  0015B4  5002               	movf	??i2_led,w,c
  9338  0015B6  1804               	xorwf	??i2_led+2,w,c
  9339  0015B8  E118               	bnz	i2l3252
  9340  0015BA  5003               	movf	??i2_led+1,w,c
  9341  0015BC  1805               	xorwf	??i2_led+3,w,c
  9342  0015BE  A4D8               	btfss	status,2,c
  9343  0015C0  D014               	goto	i2l145
  9344                           
  9345                           ;main.c: 233: RA2 = 0;
  9346  0015C2  9480               	bcf	3968,2,c	;volatile
  9347                           
  9348                           ;main.c: 234: if(i == 0) {
  9349  0015C4  5008               	movf	i2led@i,w,c
  9350  0015C6  1009               	iorwf	i2led@i+1,w,c
  9351  0015C8  A4D8               	btfss	status,2,c
  9352  0015CA  D007               	goto	i2l146
  9353                           
  9354                           ;main.c: 235: spiWrite('a' + count);
  9355  0015CC  500A               	movf	i2led@count,w,c
  9356  0015CE  0F61               	addlw	97
  9357  0015D0  EC5F  F01D         	call	i2_spiWrite
  9358                           
  9359                           ;main.c: 236: re = spiRead();
  9360  0015D4  EC63  F01D         	call	i2_spiRead	;wreg free
  9361  0015D8  D006               	goto	L60
  9362  0015DA                     i2l146:
  9363                           
  9364                           ;main.c: 238: spiWrite('m'+ count);
  9365  0015DA  500A               	movf	i2led@count,w,c
  9366  0015DC  0F6D               	addlw	109
  9367  0015DE  EC5F  F01D         	call	i2_spiWrite
  9368                           
  9369                           ;main.c: 239: re = spiRead();
  9370  0015E2  EC63  F01D         	call	i2_spiRead	;wreg free
  9371  0015E6                     L60:
  9372  0015E6  6E52               	movwf	_re,c
  9373                           
  9374                           ;main.c: 240: }
  9375                           ;main.c: 241: RA2 = 1;
  9376  0015E8  8480               	bsf	3968,2,c	;volatile
  9377  0015EA                     i2l145:
  9378  0015EA                     i2l3252:
  9379                           
  9380                           ;main.c: 242: }
  9381                           ;main.c: 243: if(surface_four[i] == num+count) {
  9382  0015EA  0E42               	movlw	low _surface_four
  9383  0015EC  2408               	addwf	i2led@i,w,c
  9384  0015EE  6ED9               	movwf	fsr2l,c
  9385  0015F0  0E00               	movlw	high _surface_four
  9386  0015F2  2009               	addwfc	i2led@i+1,w,c
  9387  0015F4  6EDA               	movwf	fsr2h,c
  9388  0015F6  50DF               	movf	indf2,w,c
  9389  0015F8  6E02               	movwf	??i2_led& (0+255),c
  9390  0015FA  6A03               	clrf	(??i2_led+1)& (0+255),c
  9391  0015FC  5007               	movf	i2led@num,w,c
  9392  0015FE  240A               	addwf	i2led@count,w,c
  9393  001600  6E04               	movwf	(??i2_led+2)& (0+255),c
  9394  001602  0E00               	movlw	0
  9395  001604  200B               	addwfc	i2led@count+1,w,c
  9396  001606  6E05               	movwf	(??i2_led+3)& (0+255),c
  9397  001608  5002               	movf	??i2_led,w,c
  9398  00160A  1804               	xorwf	??i2_led+2,w,c
  9399  00160C  E118               	bnz	i2l3268
  9400  00160E  5003               	movf	??i2_led+1,w,c
  9401  001610  1805               	xorwf	??i2_led+3,w,c
  9402  001612  A4D8               	btfss	status,2,c
  9403  001614  D014               	goto	i2l148
  9404                           
  9405                           ;main.c: 244: RA3 = 0;
  9406  001616  9680               	bcf	3968,3,c	;volatile
  9407                           
  9408                           ;main.c: 245: if(i == 0) {
  9409  001618  5008               	movf	i2led@i,w,c
  9410  00161A  1009               	iorwf	i2led@i+1,w,c
  9411  00161C  A4D8               	btfss	status,2,c
  9412  00161E  D007               	goto	i2l149
  9413                           
  9414                           ;main.c: 246: spiWrite('a' + count);
  9415  001620  500A               	movf	i2led@count,w,c
  9416  001622  0F61               	addlw	97
  9417  001624  EC5F  F01D         	call	i2_spiWrite
  9418                           
  9419                           ;main.c: 247: re = spiRead();
  9420  001628  EC63  F01D         	call	i2_spiRead	;wreg free
  9421  00162C  D006               	goto	L61
  9422  00162E                     i2l149:
  9423                           
  9424                           ;main.c: 249: spiWrite('m'+ count);
  9425  00162E  500A               	movf	i2led@count,w,c
  9426  001630  0F6D               	addlw	109
  9427  001632  EC5F  F01D         	call	i2_spiWrite
  9428                           
  9429                           ;main.c: 250: re = spiRead();
  9430  001636  EC63  F01D         	call	i2_spiRead	;wreg free
  9431  00163A                     L61:
  9432  00163A  6E52               	movwf	_re,c
  9433                           
  9434                           ;main.c: 251: }
  9435                           ;main.c: 252: RA3 = 1;
  9436  00163C  8680               	bsf	3968,3,c	;volatile
  9437  00163E                     i2l148:
  9438  00163E                     i2l3268:
  9439                           
  9440                           ;main.c: 253: }
  9441                           ;main.c: 254: if(surface_five[i] == num+count) {
  9442  00163E  0E3E               	movlw	low _surface_five
  9443  001640  2408               	addwf	i2led@i,w,c
  9444  001642  6ED9               	movwf	fsr2l,c
  9445  001644  0E00               	movlw	high _surface_five
  9446  001646  2009               	addwfc	i2led@i+1,w,c
  9447  001648  6EDA               	movwf	fsr2h,c
  9448  00164A  50DF               	movf	indf2,w,c
  9449  00164C  6E02               	movwf	??i2_led& (0+255),c
  9450  00164E  6A03               	clrf	(??i2_led+1)& (0+255),c
  9451  001650  5007               	movf	i2led@num,w,c
  9452  001652  240A               	addwf	i2led@count,w,c
  9453  001654  6E04               	movwf	(??i2_led+2)& (0+255),c
  9454  001656  0E00               	movlw	0
  9455  001658  200B               	addwfc	i2led@count+1,w,c
  9456  00165A  6E05               	movwf	(??i2_led+3)& (0+255),c
  9457  00165C  5002               	movf	??i2_led,w,c
  9458  00165E  1804               	xorwf	??i2_led+2,w,c
  9459  001660  E118               	bnz	i2l3284
  9460  001662  5003               	movf	??i2_led+1,w,c
  9461  001664  1805               	xorwf	??i2_led+3,w,c
  9462  001666  A4D8               	btfss	status,2,c
  9463  001668  D014               	goto	i2l151
  9464                           
  9465                           ;main.c: 255: RA4 = 0;
  9466  00166A  9880               	bcf	3968,4,c	;volatile
  9467                           
  9468                           ;main.c: 256: if(i == 0) {
  9469  00166C  5008               	movf	i2led@i,w,c
  9470  00166E  1009               	iorwf	i2led@i+1,w,c
  9471  001670  A4D8               	btfss	status,2,c
  9472  001672  D007               	goto	i2l152
  9473                           
  9474                           ;main.c: 257: spiWrite('a' + count);
  9475  001674  500A               	movf	i2led@count,w,c
  9476  001676  0F61               	addlw	97
  9477  001678  EC5F  F01D         	call	i2_spiWrite
  9478                           
  9479                           ;main.c: 258: re = spiRead();
  9480  00167C  EC63  F01D         	call	i2_spiRead	;wreg free
  9481  001680  D006               	goto	L62
  9482  001682                     i2l152:
  9483                           
  9484                           ;main.c: 260: spiWrite('m'+ count);
  9485  001682  500A               	movf	i2led@count,w,c
  9486  001684  0F6D               	addlw	109
  9487  001686  EC5F  F01D         	call	i2_spiWrite
  9488                           
  9489                           ;main.c: 261: re = spiRead();
  9490  00168A  EC63  F01D         	call	i2_spiRead	;wreg free
  9491  00168E                     L62:
  9492  00168E  6E52               	movwf	_re,c
  9493                           
  9494                           ;main.c: 262: }
  9495                           ;main.c: 263: RA4 = 1;
  9496  001690  8880               	bsf	3968,4,c	;volatile
  9497  001692                     i2l151:
  9498  001692                     i2l3284:
  9499  001692  4A0A               	infsnz	i2led@count,f,c
  9500  001694  2A0B               	incf	i2led@count+1,f,c
  9501  001696  BE0B               	btfsc	i2led@count+1,7,c
  9502  001698  D754               	goto	i2l140
  9503  00169A  500B               	movf	i2led@count+1,w,c
  9504  00169C  E101               	bnz	i2l3288
  9505  00169E  D74B               	goto	L63
  9506  0016A0                     i2u331_40:
  9507  0016A0                     i2l3288:
  9508                           
  9509                           ;main.c: 264: }
  9510                           ;main.c: 265: }
  9511                           ;main.c: 266: _delay((unsigned long)((5)*(1000000/4000.0)));
  9512  0016A0  0EFA               	movlw	250
  9513  0016A2                     i2u666_47:
  9514  0016A2  D000               	nop2	
  9515  0016A4  2EE8               	decfsz	wreg,f,c
  9516  0016A6  D7FD               	bra	i2u666_47
  9517  0016A8  4A08               	infsnz	i2led@i,f,c
  9518  0016AA  2A09               	incf	i2led@i+1,f,c
  9519  0016AC  BE09               	btfsc	i2led@i+1,7,c
  9520  0016AE  D73B               	goto	i2l138
  9521  0016B0  5009               	movf	i2led@i+1,w,c
  9522  0016B2  E101               	bnz	i2u332_40
  9523  0016B4  D732               	goto	L64
  9524  0016B6                     i2u332_40:
  9525                           
  9526                           ;main.c: 267: }
  9527                           ;main.c: 268: }
  9528  0016B6  0012               	return	
  9529  0016B8                     i2l137:
  9530                           
  9531                           ;main.c: 269: else if(rotate == 'D') {
  9532  0016B8  0E44               	movlw	68
  9533  0016BA  1806               	xorwf	i2led@rotate,w,c
  9534  0016BC  A4D8               	btfss	status,2,c
  9535  0016BE  D0D7               	goto	i2l155
  9536                           
  9537                           ;main.c: 270: for(i=2;i<=3;i++) {
  9538  0016C0  0E00               	movlw	0
  9539  0016C2  6E09               	movwf	i2led@i+1,c
  9540  0016C4  0E02               	movlw	2
  9541  0016C6  6E08               	movwf	i2led@i,c
  9542  0016C8  BE09               	btfsc	i2led@i+1,7,c
  9543  0016CA  D008               	goto	i2l156
  9544  0016CC  5009               	movf	i2led@i+1,w,c
  9545  0016CE  E105               	bnz	i2u334_40
  9546  0016D0  0E04               	movlw	4
  9547  0016D2  5C08               	subwf	i2led@i,w,c
  9548  0016D4  B0D8               	btfsc	status,0,c
  9549  0016D6  0012               	return	
  9550  0016D8  D001               	goto	i2l156
  9551  0016DA                     i2u334_40:
  9552  0016DA  0012               	return	
  9553  0016DC                     i2l156:
  9554                           
  9555                           ;main.c: 271: for(count=0;count<6;count++) {
  9556  0016DC  0E00               	movlw	0
  9557  0016DE  6E0B               	movwf	i2led@count+1,c
  9558  0016E0  0E00               	movlw	0
  9559  0016E2  6E0A               	movwf	i2led@count,c
  9560  0016E4  BE0B               	btfsc	i2led@count+1,7,c
  9561  0016E6  D008               	goto	i2l158
  9562  0016E8  500B               	movf	i2led@count+1,w,c
  9563  0016EA  E105               	bnz	i2u335_40
  9564  0016EC  0E06               	movlw	6
  9565  0016EE  5C0A               	subwf	i2led@count,w,c
  9566  0016F0  B0D8               	btfsc	status,0,c
  9567  0016F2  D0B1               	goto	i2u344_40
  9568  0016F4  D001               	goto	i2l158
  9569  0016F6                     i2u335_40:
  9570  0016F6  D0AF               	goto	i2u344_40
  9571  0016F8                     i2l158:
  9572                           
  9573                           ;main.c: 272: if(surface_two[i] == num+count) {
  9574  0016F8  0E4A               	movlw	low _surface_two
  9575  0016FA  2408               	addwf	i2led@i,w,c
  9576  0016FC  6ED9               	movwf	fsr2l,c
  9577  0016FE  0E00               	movlw	high _surface_two
  9578  001700  2009               	addwfc	i2led@i+1,w,c
  9579  001702  6EDA               	movwf	fsr2h,c
  9580  001704  50DF               	movf	indf2,w,c
  9581  001706  6E02               	movwf	??i2_led& (0+255),c
  9582  001708  6A03               	clrf	(??i2_led+1)& (0+255),c
  9583  00170A  5007               	movf	i2led@num,w,c
  9584  00170C  240A               	addwf	i2led@count,w,c
  9585  00170E  6E04               	movwf	(??i2_led+2)& (0+255),c
  9586  001710  0E00               	movlw	0
  9587  001712  200B               	addwfc	i2led@count+1,w,c
  9588  001714  6E05               	movwf	(??i2_led+3)& (0+255),c
  9589  001716  5002               	movf	??i2_led,w,c
  9590  001718  1804               	xorwf	??i2_led+2,w,c
  9591  00171A  E118               	bnz	i2l3322
  9592  00171C  5003               	movf	??i2_led+1,w,c
  9593  00171E  1805               	xorwf	??i2_led+3,w,c
  9594  001720  A4D8               	btfss	status,2,c
  9595  001722  D014               	goto	i2l160
  9596                           
  9597                           ;main.c: 273: RA1 = 0;
  9598  001724  9280               	bcf	3968,1,c	;volatile
  9599                           
  9600                           ;main.c: 274: if(i == 0) {
  9601  001726  5008               	movf	i2led@i,w,c
  9602  001728  1009               	iorwf	i2led@i+1,w,c
  9603  00172A  A4D8               	btfss	status,2,c
  9604  00172C  D007               	goto	i2l161
  9605                           
  9606                           ;main.c: 275: spiWrite('g' + count);
  9607  00172E  500A               	movf	i2led@count,w,c
  9608  001730  0F67               	addlw	103
  9609  001732  EC5F  F01D         	call	i2_spiWrite
  9610                           
  9611                           ;main.c: 276: re = spiRead();
  9612  001736  EC63  F01D         	call	i2_spiRead	;wreg free
  9613  00173A  D006               	goto	L65
  9614  00173C                     i2l161:
  9615                           
  9616                           ;main.c: 278: spiWrite('s'+ count);
  9617  00173C  500A               	movf	i2led@count,w,c
  9618  00173E  0F73               	addlw	115
  9619  001740  EC5F  F01D         	call	i2_spiWrite
  9620                           
  9621                           ;main.c: 279: re = spiRead();
  9622  001744  EC63  F01D         	call	i2_spiRead	;wreg free
  9623  001748                     L65:
  9624  001748  6E52               	movwf	_re,c
  9625                           
  9626                           ;main.c: 280: }
  9627                           ;main.c: 281: RA1 = 1;
  9628  00174A  8280               	bsf	3968,1,c	;volatile
  9629  00174C                     i2l160:
  9630  00174C                     i2l3322:
  9631                           
  9632                           ;main.c: 282: }
  9633                           ;main.c: 283: if(surface_three[i] == num+count) {
  9634  00174C  0E46               	movlw	low _surface_three
  9635  00174E  2408               	addwf	i2led@i,w,c
  9636  001750  6ED9               	movwf	fsr2l,c
  9637  001752  0E00               	movlw	high _surface_three
  9638  001754  2009               	addwfc	i2led@i+1,w,c
  9639  001756  6EDA               	movwf	fsr2h,c
  9640  001758  50DF               	movf	indf2,w,c
  9641  00175A  6E02               	movwf	??i2_led& (0+255),c
  9642  00175C  6A03               	clrf	(??i2_led+1)& (0+255),c
  9643  00175E  5007               	movf	i2led@num,w,c
  9644  001760  240A               	addwf	i2led@count,w,c
  9645  001762  6E04               	movwf	(??i2_led+2)& (0+255),c
  9646  001764  0E00               	movlw	0
  9647  001766  200B               	addwfc	i2led@count+1,w,c
  9648  001768  6E05               	movwf	(??i2_led+3)& (0+255),c
  9649  00176A  5002               	movf	??i2_led,w,c
  9650  00176C  1804               	xorwf	??i2_led+2,w,c
  9651  00176E  E118               	bnz	i2l3338
  9652  001770  5003               	movf	??i2_led+1,w,c
  9653  001772  1805               	xorwf	??i2_led+3,w,c
  9654  001774  A4D8               	btfss	status,2,c
  9655  001776  D014               	goto	i2l163
  9656                           
  9657                           ;main.c: 284: RA2 = 0;
  9658  001778  9480               	bcf	3968,2,c	;volatile
  9659                           
  9660                           ;main.c: 285: if(i == 0) {
  9661  00177A  5008               	movf	i2led@i,w,c
  9662  00177C  1009               	iorwf	i2led@i+1,w,c
  9663  00177E  A4D8               	btfss	status,2,c
  9664  001780  D007               	goto	i2l164
  9665                           
  9666                           ;main.c: 286: spiWrite('g' + count);
  9667  001782  500A               	movf	i2led@count,w,c
  9668  001784  0F67               	addlw	103
  9669  001786  EC5F  F01D         	call	i2_spiWrite
  9670                           
  9671                           ;main.c: 287: re = spiRead();
  9672  00178A  EC63  F01D         	call	i2_spiRead	;wreg free
  9673  00178E  D006               	goto	L66
  9674  001790                     i2l164:
  9675                           
  9676                           ;main.c: 289: spiWrite('s'+ count);
  9677  001790  500A               	movf	i2led@count,w,c
  9678  001792  0F73               	addlw	115
  9679  001794  EC5F  F01D         	call	i2_spiWrite
  9680                           
  9681                           ;main.c: 290: re = spiRead();
  9682  001798  EC63  F01D         	call	i2_spiRead	;wreg free
  9683  00179C                     L66:
  9684  00179C  6E52               	movwf	_re,c
  9685                           
  9686                           ;main.c: 291: }
  9687                           ;main.c: 292: RA2 = 1;
  9688  00179E  8480               	bsf	3968,2,c	;volatile
  9689  0017A0                     i2l163:
  9690  0017A0                     i2l3338:
  9691                           
  9692                           ;main.c: 293: }
  9693                           ;main.c: 294: if(surface_four[i] == num+count) {
  9694  0017A0  0E42               	movlw	low _surface_four
  9695  0017A2  2408               	addwf	i2led@i,w,c
  9696  0017A4  6ED9               	movwf	fsr2l,c
  9697  0017A6  0E00               	movlw	high _surface_four
  9698  0017A8  2009               	addwfc	i2led@i+1,w,c
  9699  0017AA  6EDA               	movwf	fsr2h,c
  9700  0017AC  50DF               	movf	indf2,w,c
  9701  0017AE  6E02               	movwf	??i2_led& (0+255),c
  9702  0017B0  6A03               	clrf	(??i2_led+1)& (0+255),c
  9703  0017B2  5007               	movf	i2led@num,w,c
  9704  0017B4  240A               	addwf	i2led@count,w,c
  9705  0017B6  6E04               	movwf	(??i2_led+2)& (0+255),c
  9706  0017B8  0E00               	movlw	0
  9707  0017BA  200B               	addwfc	i2led@count+1,w,c
  9708  0017BC  6E05               	movwf	(??i2_led+3)& (0+255),c
  9709  0017BE  5002               	movf	??i2_led,w,c
  9710  0017C0  1804               	xorwf	??i2_led+2,w,c
  9711  0017C2  E118               	bnz	i2l3354
  9712  0017C4  5003               	movf	??i2_led+1,w,c
  9713  0017C6  1805               	xorwf	??i2_led+3,w,c
  9714  0017C8  A4D8               	btfss	status,2,c
  9715  0017CA  D014               	goto	i2l166
  9716                           
  9717                           ;main.c: 295: RA3 = 0;
  9718  0017CC  9680               	bcf	3968,3,c	;volatile
  9719                           
  9720                           ;main.c: 296: if(i == 0) {
  9721  0017CE  5008               	movf	i2led@i,w,c
  9722  0017D0  1009               	iorwf	i2led@i+1,w,c
  9723  0017D2  A4D8               	btfss	status,2,c
  9724  0017D4  D007               	goto	i2l167
  9725                           
  9726                           ;main.c: 297: spiWrite('g' + count);
  9727  0017D6  500A               	movf	i2led@count,w,c
  9728  0017D8  0F67               	addlw	103
  9729  0017DA  EC5F  F01D         	call	i2_spiWrite
  9730                           
  9731                           ;main.c: 298: re = spiRead();
  9732  0017DE  EC63  F01D         	call	i2_spiRead	;wreg free
  9733  0017E2  D006               	goto	L67
  9734  0017E4                     i2l167:
  9735                           
  9736                           ;main.c: 300: spiWrite('s'+ count);
  9737  0017E4  500A               	movf	i2led@count,w,c
  9738  0017E6  0F73               	addlw	115
  9739  0017E8  EC5F  F01D         	call	i2_spiWrite
  9740                           
  9741                           ;main.c: 301: re = spiRead();
  9742  0017EC  EC63  F01D         	call	i2_spiRead	;wreg free
  9743  0017F0                     L67:
  9744  0017F0  6E52               	movwf	_re,c
  9745                           
  9746                           ;main.c: 302: }
  9747                           ;main.c: 303: RA3 = 1;
  9748  0017F2  8680               	bsf	3968,3,c	;volatile
  9749  0017F4                     i2l166:
  9750  0017F4                     i2l3354:
  9751                           
  9752                           ;main.c: 304: }
  9753                           ;main.c: 305: if(surface_five[i] == num+count) {
  9754  0017F4  0E3E               	movlw	low _surface_five
  9755  0017F6  2408               	addwf	i2led@i,w,c
  9756  0017F8  6ED9               	movwf	fsr2l,c
  9757  0017FA  0E00               	movlw	high _surface_five
  9758  0017FC  2009               	addwfc	i2led@i+1,w,c
  9759  0017FE  6EDA               	movwf	fsr2h,c
  9760  001800  50DF               	movf	indf2,w,c
  9761  001802  6E02               	movwf	??i2_led& (0+255),c
  9762  001804  6A03               	clrf	(??i2_led+1)& (0+255),c
  9763  001806  5007               	movf	i2led@num,w,c
  9764  001808  240A               	addwf	i2led@count,w,c
  9765  00180A  6E04               	movwf	(??i2_led+2)& (0+255),c
  9766  00180C  0E00               	movlw	0
  9767  00180E  200B               	addwfc	i2led@count+1,w,c
  9768  001810  6E05               	movwf	(??i2_led+3)& (0+255),c
  9769  001812  5002               	movf	??i2_led,w,c
  9770  001814  1804               	xorwf	??i2_led+2,w,c
  9771  001816  E118               	bnz	i2l3370
  9772  001818  5003               	movf	??i2_led+1,w,c
  9773  00181A  1805               	xorwf	??i2_led+3,w,c
  9774  00181C  A4D8               	btfss	status,2,c
  9775  00181E  D014               	goto	i2l169
  9776                           
  9777                           ;main.c: 306: RA4 = 0;
  9778  001820  9880               	bcf	3968,4,c	;volatile
  9779                           
  9780                           ;main.c: 307: if(i == 0) {
  9781  001822  5008               	movf	i2led@i,w,c
  9782  001824  1009               	iorwf	i2led@i+1,w,c
  9783  001826  A4D8               	btfss	status,2,c
  9784  001828  D007               	goto	i2l170
  9785                           
  9786                           ;main.c: 308: spiWrite('g' + count);
  9787  00182A  500A               	movf	i2led@count,w,c
  9788  00182C  0F67               	addlw	103
  9789  00182E  EC5F  F01D         	call	i2_spiWrite
  9790                           
  9791                           ;main.c: 309: re = spiRead();
  9792  001832  EC63  F01D         	call	i2_spiRead	;wreg free
  9793  001836  D006               	goto	L68
  9794  001838                     i2l170:
  9795                           
  9796                           ;main.c: 311: spiWrite('s'+ count);
  9797  001838  500A               	movf	i2led@count,w,c
  9798  00183A  0F73               	addlw	115
  9799  00183C  EC5F  F01D         	call	i2_spiWrite
  9800                           
  9801                           ;main.c: 312: re = spiRead();
  9802  001840  EC63  F01D         	call	i2_spiRead	;wreg free
  9803  001844                     L68:
  9804  001844  6E52               	movwf	_re,c
  9805                           
  9806                           ;main.c: 313: }
  9807                           ;main.c: 314: RA4 = 1;
  9808  001846  8880               	bsf	3968,4,c	;volatile
  9809  001848                     i2l169:
  9810  001848                     i2l3370:
  9811  001848  4A0A               	infsnz	i2led@count,f,c
  9812  00184A  2A0B               	incf	i2led@count+1,f,c
  9813  00184C  BE0B               	btfsc	i2led@count+1,7,c
  9814  00184E  D754               	goto	i2l158
  9815  001850  500B               	movf	i2led@count+1,w,c
  9816  001852  E101               	bnz	i2l3374
  9817  001854  D74B               	goto	L69
  9818  001856                     i2u344_40:
  9819  001856                     i2l3374:
  9820                           
  9821                           ;main.c: 315: }
  9822                           ;main.c: 316: }
  9823                           ;main.c: 317: _delay((unsigned long)((5)*(1000000/4000.0)));
  9824  001856  0EFA               	movlw	250
  9825  001858                     i2u667_47:
  9826  001858  D000               	nop2	
  9827  00185A  2EE8               	decfsz	wreg,f,c
  9828  00185C  D7FD               	bra	i2u667_47
  9829  00185E  4A08               	infsnz	i2led@i,f,c
  9830  001860  2A09               	incf	i2led@i+1,f,c
  9831  001862  BE09               	btfsc	i2led@i+1,7,c
  9832  001864  D73B               	goto	i2l156
  9833  001866  5009               	movf	i2led@i+1,w,c
  9834  001868  E101               	bnz	i2u345_40
  9835  00186A  D732               	goto	L70
  9836  00186C                     i2u345_40:
  9837                           
  9838                           ;main.c: 318: }
  9839                           ;main.c: 319: }
  9840  00186C  0012               	return	
  9841  00186E                     i2l155:
  9842                           
  9843                           ;main.c: 320: else if(rotate == 'L') {
  9844  00186E  0E4C               	movlw	76
  9845  001870  1806               	xorwf	i2led@rotate,w,c
  9846  001872  A4D8               	btfss	status,2,c
  9847  001874  D0D9               	goto	i2l173
  9848                           
  9849                           ;main.c: 321: for(i=0;i<=3;i+=2) {
  9850  001876  0E00               	movlw	0
  9851  001878  6E09               	movwf	i2led@i+1,c
  9852  00187A  0E00               	movlw	0
  9853  00187C  6E08               	movwf	i2led@i,c
  9854  00187E  BE09               	btfsc	i2led@i+1,7,c
  9855  001880  D008               	goto	i2l174
  9856  001882  5009               	movf	i2led@i+1,w,c
  9857  001884  E105               	bnz	i2u347_40
  9858  001886  0E04               	movlw	4
  9859  001888  5C08               	subwf	i2led@i,w,c
  9860  00188A  B0D8               	btfsc	status,0,c
  9861  00188C  0012               	return	
  9862  00188E  D001               	goto	i2l174
  9863  001890                     i2u347_40:
  9864  001890  0012               	return	
  9865  001892                     i2l174:
  9866                           
  9867                           ;main.c: 322: for(count=0;count<6;count++) {
  9868  001892  0E00               	movlw	0
  9869  001894  6E0B               	movwf	i2led@count+1,c
  9870  001896  0E00               	movlw	0
  9871  001898  6E0A               	movwf	i2led@count,c
  9872  00189A  BE0B               	btfsc	i2led@count+1,7,c
  9873  00189C  D008               	goto	i2l176
  9874  00189E  500B               	movf	i2led@count+1,w,c
  9875  0018A0  E105               	bnz	i2u348_40
  9876  0018A2  0E06               	movlw	6
  9877  0018A4  5C0A               	subwf	i2led@count,w,c
  9878  0018A6  B0D8               	btfsc	status,0,c
  9879  0018A8  D0B1               	goto	i2u357_40
  9880  0018AA  D001               	goto	i2l176
  9881  0018AC                     i2u348_40:
  9882  0018AC  D0AF               	goto	i2u357_40
  9883  0018AE                     i2l176:
  9884                           
  9885                           ;main.c: 323: if(surface_one[i] == num+count) {
  9886  0018AE  0E4E               	movlw	low _surface_one
  9887  0018B0  2408               	addwf	i2led@i,w,c
  9888  0018B2  6ED9               	movwf	fsr2l,c
  9889  0018B4  0E00               	movlw	high _surface_one
  9890  0018B6  2009               	addwfc	i2led@i+1,w,c
  9891  0018B8  6EDA               	movwf	fsr2h,c
  9892  0018BA  50DF               	movf	indf2,w,c
  9893  0018BC  6E02               	movwf	??i2_led& (0+255),c
  9894  0018BE  6A03               	clrf	(??i2_led+1)& (0+255),c
  9895  0018C0  5007               	movf	i2led@num,w,c
  9896  0018C2  240A               	addwf	i2led@count,w,c
  9897  0018C4  6E04               	movwf	(??i2_led+2)& (0+255),c
  9898  0018C6  0E00               	movlw	0
  9899  0018C8  200B               	addwfc	i2led@count+1,w,c
  9900  0018CA  6E05               	movwf	(??i2_led+3)& (0+255),c
  9901  0018CC  5002               	movf	??i2_led,w,c
  9902  0018CE  1804               	xorwf	??i2_led+2,w,c
  9903  0018D0  E118               	bnz	i2l3408
  9904  0018D2  5003               	movf	??i2_led+1,w,c
  9905  0018D4  1805               	xorwf	??i2_led+3,w,c
  9906  0018D6  A4D8               	btfss	status,2,c
  9907  0018D8  D014               	goto	i2l178
  9908                           
  9909                           ;main.c: 324: RA0 = 0;
  9910  0018DA  9080               	bcf	3968,0,c	;volatile
  9911                           
  9912                           ;main.c: 325: if(i == 0) {
  9913  0018DC  5008               	movf	i2led@i,w,c
  9914  0018DE  1009               	iorwf	i2led@i+1,w,c
  9915  0018E0  A4D8               	btfss	status,2,c
  9916  0018E2  D007               	goto	i2l179
  9917                           
  9918                           ;main.c: 326: spiWrite('a' + count);
  9919  0018E4  500A               	movf	i2led@count,w,c
  9920  0018E6  0F61               	addlw	97
  9921  0018E8  EC5F  F01D         	call	i2_spiWrite
  9922                           
  9923                           ;main.c: 327: re = spiRead();
  9924  0018EC  EC63  F01D         	call	i2_spiRead	;wreg free
  9925  0018F0  D006               	goto	L71
  9926  0018F2                     i2l179:
  9927                           
  9928                           ;main.c: 329: spiWrite('g'+ count);
  9929  0018F2  500A               	movf	i2led@count,w,c
  9930  0018F4  0F67               	addlw	103
  9931  0018F6  EC5F  F01D         	call	i2_spiWrite
  9932                           
  9933                           ;main.c: 330: re = spiRead();
  9934  0018FA  EC63  F01D         	call	i2_spiRead	;wreg free
  9935  0018FE                     L71:
  9936  0018FE  6E52               	movwf	_re,c
  9937                           
  9938                           ;main.c: 331: }
  9939                           ;main.c: 332: RA0 = 1;
  9940  001900  8080               	bsf	3968,0,c	;volatile
  9941  001902                     i2l178:
  9942  001902                     i2l3408:
  9943                           
  9944                           ;main.c: 333: }
  9945                           ;main.c: 334: if(surface_two[i] == num+count) {
  9946  001902  0E4A               	movlw	low _surface_two
  9947  001904  2408               	addwf	i2led@i,w,c
  9948  001906  6ED9               	movwf	fsr2l,c
  9949  001908  0E00               	movlw	high _surface_two
  9950  00190A  2009               	addwfc	i2led@i+1,w,c
  9951  00190C  6EDA               	movwf	fsr2h,c
  9952  00190E  50DF               	movf	indf2,w,c
  9953  001910  6E02               	movwf	??i2_led& (0+255),c
  9954  001912  6A03               	clrf	(??i2_led+1)& (0+255),c
  9955  001914  5007               	movf	i2led@num,w,c
  9956  001916  240A               	addwf	i2led@count,w,c
  9957  001918  6E04               	movwf	(??i2_led+2)& (0+255),c
  9958  00191A  0E00               	movlw	0
  9959  00191C  200B               	addwfc	i2led@count+1,w,c
  9960  00191E  6E05               	movwf	(??i2_led+3)& (0+255),c
  9961  001920  5002               	movf	??i2_led,w,c
  9962  001922  1804               	xorwf	??i2_led+2,w,c
  9963  001924  E118               	bnz	i2l3424
  9964  001926  5003               	movf	??i2_led+1,w,c
  9965  001928  1805               	xorwf	??i2_led+3,w,c
  9966  00192A  A4D8               	btfss	status,2,c
  9967  00192C  D014               	goto	i2l181
  9968                           
  9969                           ;main.c: 335: RA1 = 0;
  9970  00192E  9280               	bcf	3968,1,c	;volatile
  9971                           
  9972                           ;main.c: 336: if(i == 0) {
  9973  001930  5008               	movf	i2led@i,w,c
  9974  001932  1009               	iorwf	i2led@i+1,w,c
  9975  001934  A4D8               	btfss	status,2,c
  9976  001936  D007               	goto	i2l182
  9977                           
  9978                           ;main.c: 337: spiWrite('a' + count);
  9979  001938  500A               	movf	i2led@count,w,c
  9980  00193A  0F61               	addlw	97
  9981  00193C  EC5F  F01D         	call	i2_spiWrite
  9982                           
  9983                           ;main.c: 338: re = spiRead();
  9984  001940  EC63  F01D         	call	i2_spiRead	;wreg free
  9985  001944  D006               	goto	L72
  9986  001946                     i2l182:
  9987                           
  9988                           ;main.c: 340: spiWrite('g'+ count);
  9989  001946  500A               	movf	i2led@count,w,c
  9990  001948  0F67               	addlw	103
  9991  00194A  EC5F  F01D         	call	i2_spiWrite
  9992                           
  9993                           ;main.c: 341: re = spiRead();
  9994  00194E  EC63  F01D         	call	i2_spiRead	;wreg free
  9995  001952                     L72:
  9996  001952  6E52               	movwf	_re,c
  9997                           
  9998                           ;main.c: 342: }
  9999                           ;main.c: 343: RA1 = 1;
 10000  001954  8280               	bsf	3968,1,c	;volatile
 10001  001956                     i2l181:
 10002  001956                     i2l3424:
 10003                           
 10004                           ;main.c: 344: }
 10005                           ;main.c: 345: if(surface_three[i] == num+count) {
 10006  001956  0E46               	movlw	low _surface_three
 10007  001958  2408               	addwf	i2led@i,w,c
 10008  00195A  6ED9               	movwf	fsr2l,c
 10009  00195C  0E00               	movlw	high _surface_three
 10010  00195E  2009               	addwfc	i2led@i+1,w,c
 10011  001960  6EDA               	movwf	fsr2h,c
 10012  001962  50DF               	movf	indf2,w,c
 10013  001964  6E02               	movwf	??i2_led& (0+255),c
 10014  001966  6A03               	clrf	(??i2_led+1)& (0+255),c
 10015  001968  5007               	movf	i2led@num,w,c
 10016  00196A  240A               	addwf	i2led@count,w,c
 10017  00196C  6E04               	movwf	(??i2_led+2)& (0+255),c
 10018  00196E  0E00               	movlw	0
 10019  001970  200B               	addwfc	i2led@count+1,w,c
 10020  001972  6E05               	movwf	(??i2_led+3)& (0+255),c
 10021  001974  5002               	movf	??i2_led,w,c
 10022  001976  1804               	xorwf	??i2_led+2,w,c
 10023  001978  E118               	bnz	i2l3440
 10024  00197A  5003               	movf	??i2_led+1,w,c
 10025  00197C  1805               	xorwf	??i2_led+3,w,c
 10026  00197E  A4D8               	btfss	status,2,c
 10027  001980  D014               	goto	i2l184
 10028                           
 10029                           ;main.c: 346: RA2 = 0;
 10030  001982  9480               	bcf	3968,2,c	;volatile
 10031                           
 10032                           ;main.c: 347: if(i == 0) {
 10033  001984  5008               	movf	i2led@i,w,c
 10034  001986  1009               	iorwf	i2led@i+1,w,c
 10035  001988  A4D8               	btfss	status,2,c
 10036  00198A  D007               	goto	i2l185
 10037                           
 10038                           ;main.c: 348: spiWrite('a' + count);
 10039  00198C  500A               	movf	i2led@count,w,c
 10040  00198E  0F61               	addlw	97
 10041  001990  EC5F  F01D         	call	i2_spiWrite
 10042                           
 10043                           ;main.c: 349: re = spiRead();
 10044  001994  EC63  F01D         	call	i2_spiRead	;wreg free
 10045  001998  D006               	goto	L73
 10046  00199A                     i2l185:
 10047                           
 10048                           ;main.c: 351: spiWrite('g'+ count);
 10049  00199A  500A               	movf	i2led@count,w,c
 10050  00199C  0F67               	addlw	103
 10051  00199E  EC5F  F01D         	call	i2_spiWrite
 10052                           
 10053                           ;main.c: 352: re = spiRead();
 10054  0019A2  EC63  F01D         	call	i2_spiRead	;wreg free
 10055  0019A6                     L73:
 10056  0019A6  6E52               	movwf	_re,c
 10057                           
 10058                           ;main.c: 353: }
 10059                           ;main.c: 354: RA2 = 1;
 10060  0019A8  8480               	bsf	3968,2,c	;volatile
 10061  0019AA                     i2l184:
 10062  0019AA                     i2l3440:
 10063                           
 10064                           ;main.c: 355: }
 10065                           ;main.c: 356: if(surface_six[i] == num+count) {
 10066  0019AA  0E3A               	movlw	low _surface_six
 10067  0019AC  2408               	addwf	i2led@i,w,c
 10068  0019AE  6ED9               	movwf	fsr2l,c
 10069  0019B0  0E00               	movlw	high _surface_six
 10070  0019B2  2009               	addwfc	i2led@i+1,w,c
 10071  0019B4  6EDA               	movwf	fsr2h,c
 10072  0019B6  50DF               	movf	indf2,w,c
 10073  0019B8  6E02               	movwf	??i2_led& (0+255),c
 10074  0019BA  6A03               	clrf	(??i2_led+1)& (0+255),c
 10075  0019BC  5007               	movf	i2led@num,w,c
 10076  0019BE  240A               	addwf	i2led@count,w,c
 10077  0019C0  6E04               	movwf	(??i2_led+2)& (0+255),c
 10078  0019C2  0E00               	movlw	0
 10079  0019C4  200B               	addwfc	i2led@count+1,w,c
 10080  0019C6  6E05               	movwf	(??i2_led+3)& (0+255),c
 10081  0019C8  5002               	movf	??i2_led,w,c
 10082  0019CA  1804               	xorwf	??i2_led+2,w,c
 10083  0019CC  E118               	bnz	i2l3456
 10084  0019CE  5003               	movf	??i2_led+1,w,c
 10085  0019D0  1805               	xorwf	??i2_led+3,w,c
 10086  0019D2  A4D8               	btfss	status,2,c
 10087  0019D4  D014               	goto	i2l187
 10088                           
 10089                           ;main.c: 357: RA5 = 0;
 10090  0019D6  9A80               	bcf	3968,5,c	;volatile
 10091                           
 10092                           ;main.c: 358: if(i == 0) {
 10093  0019D8  5008               	movf	i2led@i,w,c
 10094  0019DA  1009               	iorwf	i2led@i+1,w,c
 10095  0019DC  A4D8               	btfss	status,2,c
 10096  0019DE  D007               	goto	i2l188
 10097                           
 10098                           ;main.c: 359: spiWrite('a' + count);
 10099  0019E0  500A               	movf	i2led@count,w,c
 10100  0019E2  0F61               	addlw	97
 10101  0019E4  EC5F  F01D         	call	i2_spiWrite
 10102                           
 10103                           ;main.c: 360: re = spiRead();
 10104  0019E8  EC63  F01D         	call	i2_spiRead	;wreg free
 10105  0019EC  D006               	goto	L74
 10106  0019EE                     i2l188:
 10107                           
 10108                           ;main.c: 362: spiWrite('g'+ count);
 10109  0019EE  500A               	movf	i2led@count,w,c
 10110  0019F0  0F67               	addlw	103
 10111  0019F2  EC5F  F01D         	call	i2_spiWrite
 10112                           
 10113                           ;main.c: 363: re = spiRead();
 10114  0019F6  EC63  F01D         	call	i2_spiRead	;wreg free
 10115  0019FA                     L74:
 10116  0019FA  6E52               	movwf	_re,c
 10117                           
 10118                           ;main.c: 364: }
 10119                           ;main.c: 365: RA5 = 1;
 10120  0019FC  8A80               	bsf	3968,5,c	;volatile
 10121  0019FE                     i2l187:
 10122  0019FE                     i2l3456:
 10123  0019FE  4A0A               	infsnz	i2led@count,f,c
 10124  001A00  2A0B               	incf	i2led@count+1,f,c
 10125  001A02  BE0B               	btfsc	i2led@count+1,7,c
 10126  001A04  D754               	goto	i2l176
 10127  001A06  500B               	movf	i2led@count+1,w,c
 10128  001A08  E101               	bnz	i2l3460
 10129  001A0A  D74B               	goto	L75
 10130  001A0C                     i2u357_40:
 10131  001A0C                     i2l3460:
 10132                           
 10133                           ;main.c: 366: }
 10134                           ;main.c: 367: }
 10135                           ;main.c: 368: _delay((unsigned long)((5)*(1000000/4000.0)));
 10136  001A0C  0EFA               	movlw	250
 10137  001A0E                     i2u668_47:
 10138  001A0E  D000               	nop2	
 10139  001A10  2EE8               	decfsz	wreg,f,c
 10140  001A12  D7FD               	bra	i2u668_47
 10141  001A14  0E02               	movlw	2
 10142  001A16  2608               	addwf	i2led@i,f,c
 10143  001A18  0E00               	movlw	0
 10144  001A1A  2209               	addwfc	i2led@i+1,f,c
 10145  001A1C  BE09               	btfsc	i2led@i+1,7,c
 10146  001A1E  D739               	goto	i2l174
 10147  001A20  5009               	movf	i2led@i+1,w,c
 10148  001A22  E101               	bnz	i2u358_40
 10149  001A24  D730               	goto	L76
 10150  001A26                     i2u358_40:
 10151                           
 10152                           ;main.c: 369: }
 10153                           ;main.c: 370: }
 10154  001A26  0012               	return	
 10155  001A28                     i2l173:
 10156                           
 10157                           ;main.c: 371: else if(rotate == 'R') {
 10158  001A28  0E52               	movlw	82
 10159  001A2A  1806               	xorwf	i2led@rotate,w,c
 10160  001A2C  A4D8               	btfss	status,2,c
 10161  001A2E  D0D9               	goto	i2l191
 10162                           
 10163                           ;main.c: 372: for(i=1;i<=3;i+=2) {
 10164  001A30  0E00               	movlw	0
 10165  001A32  6E09               	movwf	i2led@i+1,c
 10166  001A34  0E01               	movlw	1
 10167  001A36  6E08               	movwf	i2led@i,c
 10168  001A38  BE09               	btfsc	i2led@i+1,7,c
 10169  001A3A  D008               	goto	i2l192
 10170  001A3C  5009               	movf	i2led@i+1,w,c
 10171  001A3E  E105               	bnz	i2u360_40
 10172  001A40  0E04               	movlw	4
 10173  001A42  5C08               	subwf	i2led@i,w,c
 10174  001A44  B0D8               	btfsc	status,0,c
 10175  001A46  0012               	return	
 10176  001A48  D001               	goto	i2l192
 10177  001A4A                     i2u360_40:
 10178  001A4A  0012               	return	
 10179  001A4C                     i2l192:
 10180                           
 10181                           ;main.c: 373: for(count=0;count<6;count++) {
 10182  001A4C  0E00               	movlw	0
 10183  001A4E  6E0B               	movwf	i2led@count+1,c
 10184  001A50  0E00               	movlw	0
 10185  001A52  6E0A               	movwf	i2led@count,c
 10186  001A54  BE0B               	btfsc	i2led@count+1,7,c
 10187  001A56  D008               	goto	i2l194
 10188  001A58  500B               	movf	i2led@count+1,w,c
 10189  001A5A  E105               	bnz	i2u361_40
 10190  001A5C  0E06               	movlw	6
 10191  001A5E  5C0A               	subwf	i2led@count,w,c
 10192  001A60  B0D8               	btfsc	status,0,c
 10193  001A62  D0B1               	goto	i2u370_40
 10194  001A64  D001               	goto	i2l194
 10195  001A66                     i2u361_40:
 10196  001A66  D0AF               	goto	i2u370_40
 10197  001A68                     i2l194:
 10198                           
 10199                           ;main.c: 374: if(surface_one[i] == num+count) {
 10200  001A68  0E4E               	movlw	low _surface_one
 10201  001A6A  2408               	addwf	i2led@i,w,c
 10202  001A6C  6ED9               	movwf	fsr2l,c
 10203  001A6E  0E00               	movlw	high _surface_one
 10204  001A70  2009               	addwfc	i2led@i+1,w,c
 10205  001A72  6EDA               	movwf	fsr2h,c
 10206  001A74  50DF               	movf	indf2,w,c
 10207  001A76  6E02               	movwf	??i2_led& (0+255),c
 10208  001A78  6A03               	clrf	(??i2_led+1)& (0+255),c
 10209  001A7A  5007               	movf	i2led@num,w,c
 10210  001A7C  240A               	addwf	i2led@count,w,c
 10211  001A7E  6E04               	movwf	(??i2_led+2)& (0+255),c
 10212  001A80  0E00               	movlw	0
 10213  001A82  200B               	addwfc	i2led@count+1,w,c
 10214  001A84  6E05               	movwf	(??i2_led+3)& (0+255),c
 10215  001A86  5002               	movf	??i2_led,w,c
 10216  001A88  1804               	xorwf	??i2_led+2,w,c
 10217  001A8A  E118               	bnz	i2l3496
 10218  001A8C  5003               	movf	??i2_led+1,w,c
 10219  001A8E  1805               	xorwf	??i2_led+3,w,c
 10220  001A90  A4D8               	btfss	status,2,c
 10221  001A92  D014               	goto	i2l196
 10222                           
 10223                           ;main.c: 375: RA0 = 0;
 10224  001A94  9080               	bcf	3968,0,c	;volatile
 10225                           
 10226                           ;main.c: 376: if(i == 0) {
 10227  001A96  5008               	movf	i2led@i,w,c
 10228  001A98  1009               	iorwf	i2led@i+1,w,c
 10229  001A9A  A4D8               	btfss	status,2,c
 10230  001A9C  D007               	goto	i2l197
 10231                           
 10232                           ;main.c: 377: spiWrite('m' + count);
 10233  001A9E  500A               	movf	i2led@count,w,c
 10234  001AA0  0F6D               	addlw	109
 10235  001AA2  EC5F  F01D         	call	i2_spiWrite
 10236                           
 10237                           ;main.c: 378: re = spiRead();
 10238  001AA6  EC63  F01D         	call	i2_spiRead	;wreg free
 10239  001AAA  D006               	goto	L77
 10240  001AAC                     i2l197:
 10241                           
 10242                           ;main.c: 380: spiWrite('s'+ count);
 10243  001AAC  500A               	movf	i2led@count,w,c
 10244  001AAE  0F73               	addlw	115
 10245  001AB0  EC5F  F01D         	call	i2_spiWrite
 10246                           
 10247                           ;main.c: 381: re = spiRead();
 10248  001AB4  EC63  F01D         	call	i2_spiRead	;wreg free
 10249  001AB8                     L77:
 10250  001AB8  6E52               	movwf	_re,c
 10251                           
 10252                           ;main.c: 382: }
 10253                           ;main.c: 383: RA0 = 1;
 10254  001ABA  8080               	bsf	3968,0,c	;volatile
 10255  001ABC                     i2l196:
 10256  001ABC                     i2l3496:
 10257                           
 10258                           ;main.c: 384: }
 10259                           ;main.c: 385: if(surface_two[i] == num+count) {
 10260  001ABC  0E4A               	movlw	low _surface_two
 10261  001ABE  2408               	addwf	i2led@i,w,c
 10262  001AC0  6ED9               	movwf	fsr2l,c
 10263  001AC2  0E00               	movlw	high _surface_two
 10264  001AC4  2009               	addwfc	i2led@i+1,w,c
 10265  001AC6  6EDA               	movwf	fsr2h,c
 10266  001AC8  50DF               	movf	indf2,w,c
 10267  001ACA  6E02               	movwf	??i2_led& (0+255),c
 10268  001ACC  6A03               	clrf	(??i2_led+1)& (0+255),c
 10269  001ACE  5007               	movf	i2led@num,w,c
 10270  001AD0  240A               	addwf	i2led@count,w,c
 10271  001AD2  6E04               	movwf	(??i2_led+2)& (0+255),c
 10272  001AD4  0E00               	movlw	0
 10273  001AD6  200B               	addwfc	i2led@count+1,w,c
 10274  001AD8  6E05               	movwf	(??i2_led+3)& (0+255),c
 10275  001ADA  5002               	movf	??i2_led,w,c
 10276  001ADC  1804               	xorwf	??i2_led+2,w,c
 10277  001ADE  E118               	bnz	i2l3512
 10278  001AE0  5003               	movf	??i2_led+1,w,c
 10279  001AE2  1805               	xorwf	??i2_led+3,w,c
 10280  001AE4  A4D8               	btfss	status,2,c
 10281  001AE6  D014               	goto	i2l199
 10282                           
 10283                           ;main.c: 386: RA1 = 0;
 10284  001AE8  9280               	bcf	3968,1,c	;volatile
 10285                           
 10286                           ;main.c: 387: if(i == 0) {
 10287  001AEA  5008               	movf	i2led@i,w,c
 10288  001AEC  1009               	iorwf	i2led@i+1,w,c
 10289  001AEE  A4D8               	btfss	status,2,c
 10290  001AF0  D007               	goto	i2l200
 10291                           
 10292                           ;main.c: 388: spiWrite('m' + count);
 10293  001AF2  500A               	movf	i2led@count,w,c
 10294  001AF4  0F6D               	addlw	109
 10295  001AF6  EC5F  F01D         	call	i2_spiWrite
 10296                           
 10297                           ;main.c: 389: re = spiRead();
 10298  001AFA  EC63  F01D         	call	i2_spiRead	;wreg free
 10299  001AFE  D006               	goto	L78
 10300  001B00                     i2l200:
 10301                           
 10302                           ;main.c: 391: spiWrite('s'+ count);
 10303  001B00  500A               	movf	i2led@count,w,c
 10304  001B02  0F73               	addlw	115
 10305  001B04  EC5F  F01D         	call	i2_spiWrite
 10306                           
 10307                           ;main.c: 392: re = spiRead();
 10308  001B08  EC63  F01D         	call	i2_spiRead	;wreg free
 10309  001B0C                     L78:
 10310  001B0C  6E52               	movwf	_re,c
 10311                           
 10312                           ;main.c: 393: }
 10313                           ;main.c: 394: RA1 = 1;
 10314  001B0E  8280               	bsf	3968,1,c	;volatile
 10315  001B10                     i2l199:
 10316  001B10                     i2l3512:
 10317                           
 10318                           ;main.c: 395: }
 10319                           ;main.c: 396: if(surface_three[i] == num+count) {
 10320  001B10  0E46               	movlw	low _surface_three
 10321  001B12  2408               	addwf	i2led@i,w,c
 10322  001B14  6ED9               	movwf	fsr2l,c
 10323  001B16  0E00               	movlw	high _surface_three
 10324  001B18  2009               	addwfc	i2led@i+1,w,c
 10325  001B1A  6EDA               	movwf	fsr2h,c
 10326  001B1C  50DF               	movf	indf2,w,c
 10327  001B1E  6E02               	movwf	??i2_led& (0+255),c
 10328  001B20  6A03               	clrf	(??i2_led+1)& (0+255),c
 10329  001B22  5007               	movf	i2led@num,w,c
 10330  001B24  240A               	addwf	i2led@count,w,c
 10331  001B26  6E04               	movwf	(??i2_led+2)& (0+255),c
 10332  001B28  0E00               	movlw	0
 10333  001B2A  200B               	addwfc	i2led@count+1,w,c
 10334  001B2C  6E05               	movwf	(??i2_led+3)& (0+255),c
 10335  001B2E  5002               	movf	??i2_led,w,c
 10336  001B30  1804               	xorwf	??i2_led+2,w,c
 10337  001B32  E118               	bnz	i2l3528
 10338  001B34  5003               	movf	??i2_led+1,w,c
 10339  001B36  1805               	xorwf	??i2_led+3,w,c
 10340  001B38  A4D8               	btfss	status,2,c
 10341  001B3A  D014               	goto	i2l202
 10342                           
 10343                           ;main.c: 397: RA2 = 0;
 10344  001B3C  9480               	bcf	3968,2,c	;volatile
 10345                           
 10346                           ;main.c: 398: if(i == 0) {
 10347  001B3E  5008               	movf	i2led@i,w,c
 10348  001B40  1009               	iorwf	i2led@i+1,w,c
 10349  001B42  A4D8               	btfss	status,2,c
 10350  001B44  D007               	goto	i2l203
 10351                           
 10352                           ;main.c: 399: spiWrite('m' + count);
 10353  001B46  500A               	movf	i2led@count,w,c
 10354  001B48  0F6D               	addlw	109
 10355  001B4A  EC5F  F01D         	call	i2_spiWrite
 10356                           
 10357                           ;main.c: 400: re = spiRead();
 10358  001B4E  EC63  F01D         	call	i2_spiRead	;wreg free
 10359  001B52  D006               	goto	L79
 10360  001B54                     i2l203:
 10361                           
 10362                           ;main.c: 402: spiWrite('s'+ count);
 10363  001B54  500A               	movf	i2led@count,w,c
 10364  001B56  0F73               	addlw	115
 10365  001B58  EC5F  F01D         	call	i2_spiWrite
 10366                           
 10367                           ;main.c: 403: re = spiRead();
 10368  001B5C  EC63  F01D         	call	i2_spiRead	;wreg free
 10369  001B60                     L79:
 10370  001B60  6E52               	movwf	_re,c
 10371                           
 10372                           ;main.c: 404: }
 10373                           ;main.c: 405: RA2 = 1;
 10374  001B62  8480               	bsf	3968,2,c	;volatile
 10375  001B64                     i2l202:
 10376  001B64                     i2l3528:
 10377                           
 10378                           ;main.c: 406: }
 10379                           ;main.c: 407: if(surface_six[i] == num+count) {
 10380  001B64  0E3A               	movlw	low _surface_six
 10381  001B66  2408               	addwf	i2led@i,w,c
 10382  001B68  6ED9               	movwf	fsr2l,c
 10383  001B6A  0E00               	movlw	high _surface_six
 10384  001B6C  2009               	addwfc	i2led@i+1,w,c
 10385  001B6E  6EDA               	movwf	fsr2h,c
 10386  001B70  50DF               	movf	indf2,w,c
 10387  001B72  6E02               	movwf	??i2_led& (0+255),c
 10388  001B74  6A03               	clrf	(??i2_led+1)& (0+255),c
 10389  001B76  5007               	movf	i2led@num,w,c
 10390  001B78  240A               	addwf	i2led@count,w,c
 10391  001B7A  6E04               	movwf	(??i2_led+2)& (0+255),c
 10392  001B7C  0E00               	movlw	0
 10393  001B7E  200B               	addwfc	i2led@count+1,w,c
 10394  001B80  6E05               	movwf	(??i2_led+3)& (0+255),c
 10395  001B82  5002               	movf	??i2_led,w,c
 10396  001B84  1804               	xorwf	??i2_led+2,w,c
 10397  001B86  E118               	bnz	i2l3544
 10398  001B88  5003               	movf	??i2_led+1,w,c
 10399  001B8A  1805               	xorwf	??i2_led+3,w,c
 10400  001B8C  A4D8               	btfss	status,2,c
 10401  001B8E  D014               	goto	i2l205
 10402                           
 10403                           ;main.c: 408: RA5 = 0;
 10404  001B90  9A80               	bcf	3968,5,c	;volatile
 10405                           
 10406                           ;main.c: 409: if(i == 0) {
 10407  001B92  5008               	movf	i2led@i,w,c
 10408  001B94  1009               	iorwf	i2led@i+1,w,c
 10409  001B96  A4D8               	btfss	status,2,c
 10410  001B98  D007               	goto	i2l206
 10411                           
 10412                           ;main.c: 410: spiWrite('m' + count);
 10413  001B9A  500A               	movf	i2led@count,w,c
 10414  001B9C  0F6D               	addlw	109
 10415  001B9E  EC5F  F01D         	call	i2_spiWrite
 10416                           
 10417                           ;main.c: 411: re = spiRead();
 10418  001BA2  EC63  F01D         	call	i2_spiRead	;wreg free
 10419  001BA6  D006               	goto	L80
 10420  001BA8                     i2l206:
 10421                           
 10422                           ;main.c: 413: spiWrite('s'+ count);
 10423  001BA8  500A               	movf	i2led@count,w,c
 10424  001BAA  0F73               	addlw	115
 10425  001BAC  EC5F  F01D         	call	i2_spiWrite
 10426                           
 10427                           ;main.c: 414: re = spiRead();
 10428  001BB0  EC63  F01D         	call	i2_spiRead	;wreg free
 10429  001BB4                     L80:
 10430  001BB4  6E52               	movwf	_re,c
 10431                           
 10432                           ;main.c: 415: }
 10433                           ;main.c: 416: RA5 = 1;
 10434  001BB6  8A80               	bsf	3968,5,c	;volatile
 10435  001BB8                     i2l205:
 10436  001BB8                     i2l3544:
 10437  001BB8  4A0A               	infsnz	i2led@count,f,c
 10438  001BBA  2A0B               	incf	i2led@count+1,f,c
 10439  001BBC  BE0B               	btfsc	i2led@count+1,7,c
 10440  001BBE  D754               	goto	i2l194
 10441  001BC0  500B               	movf	i2led@count+1,w,c
 10442  001BC2  E101               	bnz	i2l3548
 10443  001BC4  D74B               	goto	L81
 10444  001BC6                     i2u370_40:
 10445  001BC6                     i2l3548:
 10446                           
 10447                           ;main.c: 417: }
 10448                           ;main.c: 418: }
 10449                           ;main.c: 419: _delay((unsigned long)((5)*(1000000/4000.0)));
 10450  001BC6  0EFA               	movlw	250
 10451  001BC8                     i2u669_47:
 10452  001BC8  D000               	nop2	
 10453  001BCA  2EE8               	decfsz	wreg,f,c
 10454  001BCC  D7FD               	bra	i2u669_47
 10455  001BCE  0E02               	movlw	2
 10456  001BD0  2608               	addwf	i2led@i,f,c
 10457  001BD2  0E00               	movlw	0
 10458  001BD4  2209               	addwfc	i2led@i+1,f,c
 10459  001BD6  BE09               	btfsc	i2led@i+1,7,c
 10460  001BD8  D739               	goto	i2l192
 10461  001BDA  5009               	movf	i2led@i+1,w,c
 10462  001BDC  E101               	bnz	i2u371_40
 10463  001BDE  D730               	goto	L82
 10464  001BE0                     i2u371_40:
 10465                           
 10466                           ;main.c: 420: }
 10467                           ;main.c: 421: }
 10468  001BE0  0012               	return	
 10469  001BE2                     i2l191:
 10470                           
 10471                           ;main.c: 422: else if(rotate == 'F') {
 10472  001BE2  0E46               	movlw	70
 10473  001BE4  1806               	xorwf	i2led@rotate,w,c
 10474  001BE6  A4D8               	btfss	status,2,c
 10475  001BE8  D0D7               	goto	i2l209
 10476                           
 10477                           ;main.c: 423: for(i=2;i<=3;i++) {
 10478  001BEA  0E00               	movlw	0
 10479  001BEC  6E09               	movwf	i2led@i+1,c
 10480  001BEE  0E02               	movlw	2
 10481  001BF0  6E08               	movwf	i2led@i,c
 10482  001BF2  BE09               	btfsc	i2led@i+1,7,c
 10483  001BF4  D008               	goto	i2l210
 10484  001BF6  5009               	movf	i2led@i+1,w,c
 10485  001BF8  E105               	bnz	i2u373_40
 10486  001BFA  0E04               	movlw	4
 10487  001BFC  5C08               	subwf	i2led@i,w,c
 10488  001BFE  B0D8               	btfsc	status,0,c
 10489  001C00  0012               	return	
 10490  001C02  D001               	goto	i2l210
 10491  001C04                     i2u373_40:
 10492  001C04  0012               	return	
 10493  001C06                     i2l210:
 10494                           
 10495                           ;main.c: 424: for(count=0;count<6;count++) {
 10496  001C06  0E00               	movlw	0
 10497  001C08  6E0B               	movwf	i2led@count+1,c
 10498  001C0A  0E00               	movlw	0
 10499  001C0C  6E0A               	movwf	i2led@count,c
 10500  001C0E  BE0B               	btfsc	i2led@count+1,7,c
 10501  001C10  D008               	goto	i2l212
 10502  001C12  500B               	movf	i2led@count+1,w,c
 10503  001C14  E105               	bnz	i2u374_40
 10504  001C16  0E06               	movlw	6
 10505  001C18  5C0A               	subwf	i2led@count,w,c
 10506  001C1A  B0D8               	btfsc	status,0,c
 10507  001C1C  D0B1               	goto	i2u383_40
 10508  001C1E  D001               	goto	i2l212
 10509  001C20                     i2u374_40:
 10510  001C20  D0AF               	goto	i2u383_40
 10511  001C22                     i2l212:
 10512                           
 10513                           ;main.c: 425: if(surface_one[i] == num+count) {
 10514  001C22  0E4E               	movlw	low _surface_one
 10515  001C24  2408               	addwf	i2led@i,w,c
 10516  001C26  6ED9               	movwf	fsr2l,c
 10517  001C28  0E00               	movlw	high _surface_one
 10518  001C2A  2009               	addwfc	i2led@i+1,w,c
 10519  001C2C  6EDA               	movwf	fsr2h,c
 10520  001C2E  50DF               	movf	indf2,w,c
 10521  001C30  6E02               	movwf	??i2_led& (0+255),c
 10522  001C32  6A03               	clrf	(??i2_led+1)& (0+255),c
 10523  001C34  5007               	movf	i2led@num,w,c
 10524  001C36  240A               	addwf	i2led@count,w,c
 10525  001C38  6E04               	movwf	(??i2_led+2)& (0+255),c
 10526  001C3A  0E00               	movlw	0
 10527  001C3C  200B               	addwfc	i2led@count+1,w,c
 10528  001C3E  6E05               	movwf	(??i2_led+3)& (0+255),c
 10529  001C40  5002               	movf	??i2_led,w,c
 10530  001C42  1804               	xorwf	??i2_led+2,w,c
 10531  001C44  E118               	bnz	i2l3584
 10532  001C46  5003               	movf	??i2_led+1,w,c
 10533  001C48  1805               	xorwf	??i2_led+3,w,c
 10534  001C4A  A4D8               	btfss	status,2,c
 10535  001C4C  D014               	goto	i2l214
 10536                           
 10537                           ;main.c: 426: RA0 = 0;
 10538  001C4E  9080               	bcf	3968,0,c	;volatile
 10539                           
 10540                           ;main.c: 427: if(i == 0) {
 10541  001C50  5008               	movf	i2led@i,w,c
 10542  001C52  1009               	iorwf	i2led@i+1,w,c
 10543  001C54  A4D8               	btfss	status,2,c
 10544  001C56  D007               	goto	i2l215
 10545                           
 10546                           ;main.c: 428: spiWrite('g' + count);
 10547  001C58  500A               	movf	i2led@count,w,c
 10548  001C5A  0F67               	addlw	103
 10549  001C5C  EC5F  F01D         	call	i2_spiWrite
 10550                           
 10551                           ;main.c: 429: re = spiRead();
 10552  001C60  EC63  F01D         	call	i2_spiRead	;wreg free
 10553  001C64  D006               	goto	L83
 10554  001C66                     i2l215:
 10555                           
 10556                           ;main.c: 431: spiWrite('s'+ count);
 10557  001C66  500A               	movf	i2led@count,w,c
 10558  001C68  0F73               	addlw	115
 10559  001C6A  EC5F  F01D         	call	i2_spiWrite
 10560                           
 10561                           ;main.c: 432: re = spiRead();
 10562  001C6E  EC63  F01D         	call	i2_spiRead	;wreg free
 10563  001C72                     L83:
 10564  001C72  6E52               	movwf	_re,c
 10565                           
 10566                           ;main.c: 433: }
 10567                           ;main.c: 434: RA0 = 1;
 10568  001C74  8080               	bsf	3968,0,c	;volatile
 10569  001C76                     i2l214:
 10570  001C76                     i2l3584:
 10571                           
 10572                           ;main.c: 435: }
 10573                           ;main.c: 436: if(surface_two[i] == num+count) {
 10574  001C76  0E4A               	movlw	low _surface_two
 10575  001C78  2408               	addwf	i2led@i,w,c
 10576  001C7A  6ED9               	movwf	fsr2l,c
 10577  001C7C  0E00               	movlw	high _surface_two
 10578  001C7E  2009               	addwfc	i2led@i+1,w,c
 10579  001C80  6EDA               	movwf	fsr2h,c
 10580  001C82  50DF               	movf	indf2,w,c
 10581  001C84  6E02               	movwf	??i2_led& (0+255),c
 10582  001C86  6A03               	clrf	(??i2_led+1)& (0+255),c
 10583  001C88  5007               	movf	i2led@num,w,c
 10584  001C8A  240A               	addwf	i2led@count,w,c
 10585  001C8C  6E04               	movwf	(??i2_led+2)& (0+255),c
 10586  001C8E  0E00               	movlw	0
 10587  001C90  200B               	addwfc	i2led@count+1,w,c
 10588  001C92  6E05               	movwf	(??i2_led+3)& (0+255),c
 10589  001C94  5002               	movf	??i2_led,w,c
 10590  001C96  1804               	xorwf	??i2_led+2,w,c
 10591  001C98  E118               	bnz	i2l3600
 10592  001C9A  5003               	movf	??i2_led+1,w,c
 10593  001C9C  1805               	xorwf	??i2_led+3,w,c
 10594  001C9E  A4D8               	btfss	status,2,c
 10595  001CA0  D014               	goto	i2l217
 10596                           
 10597                           ;main.c: 437: RA1 = 0;
 10598  001CA2  9280               	bcf	3968,1,c	;volatile
 10599                           
 10600                           ;main.c: 438: if(i == 0) {
 10601  001CA4  5008               	movf	i2led@i,w,c
 10602  001CA6  1009               	iorwf	i2led@i+1,w,c
 10603  001CA8  A4D8               	btfss	status,2,c
 10604  001CAA  D007               	goto	i2l218
 10605                           
 10606                           ;main.c: 439: spiWrite('g' + count);
 10607  001CAC  500A               	movf	i2led@count,w,c
 10608  001CAE  0F67               	addlw	103
 10609  001CB0  EC5F  F01D         	call	i2_spiWrite
 10610                           
 10611                           ;main.c: 440: re = spiRead();
 10612  001CB4  EC63  F01D         	call	i2_spiRead	;wreg free
 10613  001CB8  D006               	goto	L84
 10614  001CBA                     i2l218:
 10615                           
 10616                           ;main.c: 442: spiWrite('s'+ count);
 10617  001CBA  500A               	movf	i2led@count,w,c
 10618  001CBC  0F73               	addlw	115
 10619  001CBE  EC5F  F01D         	call	i2_spiWrite
 10620                           
 10621                           ;main.c: 443: re = spiRead();
 10622  001CC2  EC63  F01D         	call	i2_spiRead	;wreg free
 10623  001CC6                     L84:
 10624  001CC6  6E52               	movwf	_re,c
 10625                           
 10626                           ;main.c: 444: }
 10627                           ;main.c: 445: RA1 = 1;
 10628  001CC8  8280               	bsf	3968,1,c	;volatile
 10629  001CCA                     i2l217:
 10630  001CCA                     i2l3600:
 10631                           
 10632                           ;main.c: 446: }
 10633                           ;main.c: 447: if(surface_four[i] == num+count) {
 10634  001CCA  0E42               	movlw	low _surface_four
 10635  001CCC  2408               	addwf	i2led@i,w,c
 10636  001CCE  6ED9               	movwf	fsr2l,c
 10637  001CD0  0E00               	movlw	high _surface_four
 10638  001CD2  2009               	addwfc	i2led@i+1,w,c
 10639  001CD4  6EDA               	movwf	fsr2h,c
 10640  001CD6  50DF               	movf	indf2,w,c
 10641  001CD8  6E02               	movwf	??i2_led& (0+255),c
 10642  001CDA  6A03               	clrf	(??i2_led+1)& (0+255),c
 10643  001CDC  5007               	movf	i2led@num,w,c
 10644  001CDE  240A               	addwf	i2led@count,w,c
 10645  001CE0  6E04               	movwf	(??i2_led+2)& (0+255),c
 10646  001CE2  0E00               	movlw	0
 10647  001CE4  200B               	addwfc	i2led@count+1,w,c
 10648  001CE6  6E05               	movwf	(??i2_led+3)& (0+255),c
 10649  001CE8  5002               	movf	??i2_led,w,c
 10650  001CEA  1804               	xorwf	??i2_led+2,w,c
 10651  001CEC  E118               	bnz	i2l3616
 10652  001CEE  5003               	movf	??i2_led+1,w,c
 10653  001CF0  1805               	xorwf	??i2_led+3,w,c
 10654  001CF2  A4D8               	btfss	status,2,c
 10655  001CF4  D014               	goto	i2l220
 10656                           
 10657                           ;main.c: 448: RA3 = 0;
 10658  001CF6  9680               	bcf	3968,3,c	;volatile
 10659                           
 10660                           ;main.c: 449: if(i == 0) {
 10661  001CF8  5008               	movf	i2led@i,w,c
 10662  001CFA  1009               	iorwf	i2led@i+1,w,c
 10663  001CFC  A4D8               	btfss	status,2,c
 10664  001CFE  D007               	goto	i2l221
 10665                           
 10666                           ;main.c: 450: spiWrite('g' + count);
 10667  001D00  500A               	movf	i2led@count,w,c
 10668  001D02  0F67               	addlw	103
 10669  001D04  EC5F  F01D         	call	i2_spiWrite
 10670                           
 10671                           ;main.c: 451: re = spiRead();
 10672  001D08  EC63  F01D         	call	i2_spiRead	;wreg free
 10673  001D0C  D006               	goto	L85
 10674  001D0E                     i2l221:
 10675                           
 10676                           ;main.c: 453: spiWrite('s'+ count);
 10677  001D0E  500A               	movf	i2led@count,w,c
 10678  001D10  0F73               	addlw	115
 10679  001D12  EC5F  F01D         	call	i2_spiWrite
 10680                           
 10681                           ;main.c: 454: re = spiRead();
 10682  001D16  EC63  F01D         	call	i2_spiRead	;wreg free
 10683  001D1A                     L85:
 10684  001D1A  6E52               	movwf	_re,c
 10685                           
 10686                           ;main.c: 455: }
 10687                           ;main.c: 456: RA3 = 1;
 10688  001D1C  8680               	bsf	3968,3,c	;volatile
 10689  001D1E                     i2l220:
 10690  001D1E                     i2l3616:
 10691                           
 10692                           ;main.c: 457: }
 10693                           ;main.c: 458: if(surface_six[i] == num+count) {
 10694  001D1E  0E3A               	movlw	low _surface_six
 10695  001D20  2408               	addwf	i2led@i,w,c
 10696  001D22  6ED9               	movwf	fsr2l,c
 10697  001D24  0E00               	movlw	high _surface_six
 10698  001D26  2009               	addwfc	i2led@i+1,w,c
 10699  001D28  6EDA               	movwf	fsr2h,c
 10700  001D2A  50DF               	movf	indf2,w,c
 10701  001D2C  6E02               	movwf	??i2_led& (0+255),c
 10702  001D2E  6A03               	clrf	(??i2_led+1)& (0+255),c
 10703  001D30  5007               	movf	i2led@num,w,c
 10704  001D32  240A               	addwf	i2led@count,w,c
 10705  001D34  6E04               	movwf	(??i2_led+2)& (0+255),c
 10706  001D36  0E00               	movlw	0
 10707  001D38  200B               	addwfc	i2led@count+1,w,c
 10708  001D3A  6E05               	movwf	(??i2_led+3)& (0+255),c
 10709  001D3C  5002               	movf	??i2_led,w,c
 10710  001D3E  1804               	xorwf	??i2_led+2,w,c
 10711  001D40  E118               	bnz	i2l3632
 10712  001D42  5003               	movf	??i2_led+1,w,c
 10713  001D44  1805               	xorwf	??i2_led+3,w,c
 10714  001D46  A4D8               	btfss	status,2,c
 10715  001D48  D014               	goto	i2l223
 10716                           
 10717                           ;main.c: 459: RA5 = 0;
 10718  001D4A  9A80               	bcf	3968,5,c	;volatile
 10719                           
 10720                           ;main.c: 460: if(i == 0) {
 10721  001D4C  5008               	movf	i2led@i,w,c
 10722  001D4E  1009               	iorwf	i2led@i+1,w,c
 10723  001D50  A4D8               	btfss	status,2,c
 10724  001D52  D007               	goto	i2l224
 10725                           
 10726                           ;main.c: 461: spiWrite('g' + count);
 10727  001D54  500A               	movf	i2led@count,w,c
 10728  001D56  0F67               	addlw	103
 10729  001D58  EC5F  F01D         	call	i2_spiWrite
 10730                           
 10731                           ;main.c: 462: re = spiRead();
 10732  001D5C  EC63  F01D         	call	i2_spiRead	;wreg free
 10733  001D60  D006               	goto	L86
 10734  001D62                     i2l224:
 10735                           
 10736                           ;main.c: 464: spiWrite('s'+ count);
 10737  001D62  500A               	movf	i2led@count,w,c
 10738  001D64  0F73               	addlw	115
 10739  001D66  EC5F  F01D         	call	i2_spiWrite
 10740                           
 10741                           ;main.c: 465: re = spiRead();
 10742  001D6A  EC63  F01D         	call	i2_spiRead	;wreg free
 10743  001D6E                     L86:
 10744  001D6E  6E52               	movwf	_re,c
 10745                           
 10746                           ;main.c: 466: }
 10747                           ;main.c: 467: RA5 = 1;
 10748  001D70  8A80               	bsf	3968,5,c	;volatile
 10749  001D72                     i2l223:
 10750  001D72                     i2l3632:
 10751  001D72  4A0A               	infsnz	i2led@count,f,c
 10752  001D74  2A0B               	incf	i2led@count+1,f,c
 10753  001D76  BE0B               	btfsc	i2led@count+1,7,c
 10754  001D78  D754               	goto	i2l212
 10755  001D7A  500B               	movf	i2led@count+1,w,c
 10756  001D7C  E101               	bnz	i2l3636
 10757  001D7E  D74B               	goto	L87
 10758  001D80                     i2u383_40:
 10759  001D80                     i2l3636:
 10760                           
 10761                           ;main.c: 468: }
 10762                           ;main.c: 469: }
 10763                           ;main.c: 470: _delay((unsigned long)((5)*(1000000/4000.0)));
 10764  001D80  0EFA               	movlw	250
 10765  001D82                     i2u670_47:
 10766  001D82  D000               	nop2	
 10767  001D84  2EE8               	decfsz	wreg,f,c
 10768  001D86  D7FD               	bra	i2u670_47
 10769  001D88  4A08               	infsnz	i2led@i,f,c
 10770  001D8A  2A09               	incf	i2led@i+1,f,c
 10771  001D8C  BE09               	btfsc	i2led@i+1,7,c
 10772  001D8E  D73B               	goto	i2l210
 10773  001D90  5009               	movf	i2led@i+1,w,c
 10774  001D92  E101               	bnz	i2u384_40
 10775  001D94  D732               	goto	L88
 10776  001D96                     i2u384_40:
 10777                           
 10778                           ;main.c: 471: }
 10779                           ;main.c: 472: }
 10780  001D96  0012               	return	
 10781  001D98                     i2l209:
 10782                           
 10783                           ;main.c: 473: else if(rotate == 'B') {
 10784  001D98  0E42               	movlw	66
 10785  001D9A  1806               	xorwf	i2led@rotate,w,c
 10786  001D9C  A4D8               	btfss	status,2,c
 10787  001D9E  D0D7               	goto	i2l227
 10788                           
 10789                           ;main.c: 474: for(i=0;i<=1;i++) {
 10790  001DA0  0E00               	movlw	0
 10791  001DA2  6E09               	movwf	i2led@i+1,c
 10792  001DA4  0E00               	movlw	0
 10793  001DA6  6E08               	movwf	i2led@i,c
 10794  001DA8  BE09               	btfsc	i2led@i+1,7,c
 10795  001DAA  D008               	goto	i2l228
 10796  001DAC  5009               	movf	i2led@i+1,w,c
 10797  001DAE  E105               	bnz	i2u386_40
 10798  001DB0  0E02               	movlw	2
 10799  001DB2  5C08               	subwf	i2led@i,w,c
 10800  001DB4  B0D8               	btfsc	status,0,c
 10801  001DB6  0012               	return	
 10802  001DB8  D001               	goto	i2l228
 10803  001DBA                     i2u386_40:
 10804  001DBA  0012               	return	
 10805  001DBC                     i2l228:
 10806                           
 10807                           ;main.c: 475: for(count=0;count<6;count++) {
 10808  001DBC  0E00               	movlw	0
 10809  001DBE  6E0B               	movwf	i2led@count+1,c
 10810  001DC0  0E00               	movlw	0
 10811  001DC2  6E0A               	movwf	i2led@count,c
 10812  001DC4  BE0B               	btfsc	i2led@count+1,7,c
 10813  001DC6  D008               	goto	i2l230
 10814  001DC8  500B               	movf	i2led@count+1,w,c
 10815  001DCA  E105               	bnz	i2u387_40
 10816  001DCC  0E06               	movlw	6
 10817  001DCE  5C0A               	subwf	i2led@count,w,c
 10818  001DD0  B0D8               	btfsc	status,0,c
 10819  001DD2  D0B1               	goto	i2u396_40
 10820  001DD4  D001               	goto	i2l230
 10821  001DD6                     i2u387_40:
 10822  001DD6  D0AF               	goto	i2u396_40
 10823  001DD8                     i2l230:
 10824                           
 10825                           ;main.c: 476: if(surface_one[i] == num+count) {
 10826  001DD8  0E4E               	movlw	low _surface_one
 10827  001DDA  2408               	addwf	i2led@i,w,c
 10828  001DDC  6ED9               	movwf	fsr2l,c
 10829  001DDE  0E00               	movlw	high _surface_one
 10830  001DE0  2009               	addwfc	i2led@i+1,w,c
 10831  001DE2  6EDA               	movwf	fsr2h,c
 10832  001DE4  50DF               	movf	indf2,w,c
 10833  001DE6  6E02               	movwf	??i2_led& (0+255),c
 10834  001DE8  6A03               	clrf	(??i2_led+1)& (0+255),c
 10835  001DEA  5007               	movf	i2led@num,w,c
 10836  001DEC  240A               	addwf	i2led@count,w,c
 10837  001DEE  6E04               	movwf	(??i2_led+2)& (0+255),c
 10838  001DF0  0E00               	movlw	0
 10839  001DF2  200B               	addwfc	i2led@count+1,w,c
 10840  001DF4  6E05               	movwf	(??i2_led+3)& (0+255),c
 10841  001DF6  5002               	movf	??i2_led,w,c
 10842  001DF8  1804               	xorwf	??i2_led+2,w,c
 10843  001DFA  E118               	bnz	i2l3670
 10844  001DFC  5003               	movf	??i2_led+1,w,c
 10845  001DFE  1805               	xorwf	??i2_led+3,w,c
 10846  001E00  A4D8               	btfss	status,2,c
 10847  001E02  D014               	goto	i2l232
 10848                           
 10849                           ;main.c: 477: RA0 = 0;
 10850  001E04  9080               	bcf	3968,0,c	;volatile
 10851                           
 10852                           ;main.c: 478: if(i == 0) {
 10853  001E06  5008               	movf	i2led@i,w,c
 10854  001E08  1009               	iorwf	i2led@i+1,w,c
 10855  001E0A  A4D8               	btfss	status,2,c
 10856  001E0C  D007               	goto	i2l233
 10857                           
 10858                           ;main.c: 479: spiWrite('a' + count);
 10859  001E0E  500A               	movf	i2led@count,w,c
 10860  001E10  0F61               	addlw	97
 10861  001E12  EC5F  F01D         	call	i2_spiWrite
 10862                           
 10863                           ;main.c: 480: re = spiRead();
 10864  001E16  EC63  F01D         	call	i2_spiRead	;wreg free
 10865  001E1A  D006               	goto	L89
 10866  001E1C                     i2l233:
 10867                           
 10868                           ;main.c: 482: spiWrite('m'+ count);
 10869  001E1C  500A               	movf	i2led@count,w,c
 10870  001E1E  0F6D               	addlw	109
 10871  001E20  EC5F  F01D         	call	i2_spiWrite
 10872                           
 10873                           ;main.c: 483: re = spiRead();
 10874  001E24  EC63  F01D         	call	i2_spiRead	;wreg free
 10875  001E28                     L89:
 10876  001E28  6E52               	movwf	_re,c
 10877                           
 10878                           ;main.c: 484: }
 10879                           ;main.c: 485: RA0 = 1;
 10880  001E2A  8080               	bsf	3968,0,c	;volatile
 10881  001E2C                     i2l232:
 10882  001E2C                     i2l3670:
 10883                           
 10884                           ;main.c: 486: }
 10885                           ;main.c: 487: if(surface_two[i] == num+count) {
 10886  001E2C  0E4A               	movlw	low _surface_two
 10887  001E2E  2408               	addwf	i2led@i,w,c
 10888  001E30  6ED9               	movwf	fsr2l,c
 10889  001E32  0E00               	movlw	high _surface_two
 10890  001E34  2009               	addwfc	i2led@i+1,w,c
 10891  001E36  6EDA               	movwf	fsr2h,c
 10892  001E38  50DF               	movf	indf2,w,c
 10893  001E3A  6E02               	movwf	??i2_led& (0+255),c
 10894  001E3C  6A03               	clrf	(??i2_led+1)& (0+255),c
 10895  001E3E  5007               	movf	i2led@num,w,c
 10896  001E40  240A               	addwf	i2led@count,w,c
 10897  001E42  6E04               	movwf	(??i2_led+2)& (0+255),c
 10898  001E44  0E00               	movlw	0
 10899  001E46  200B               	addwfc	i2led@count+1,w,c
 10900  001E48  6E05               	movwf	(??i2_led+3)& (0+255),c
 10901  001E4A  5002               	movf	??i2_led,w,c
 10902  001E4C  1804               	xorwf	??i2_led+2,w,c
 10903  001E4E  E118               	bnz	i2l3686
 10904  001E50  5003               	movf	??i2_led+1,w,c
 10905  001E52  1805               	xorwf	??i2_led+3,w,c
 10906  001E54  A4D8               	btfss	status,2,c
 10907  001E56  D014               	goto	i2l235
 10908                           
 10909                           ;main.c: 488: RA1 = 0;
 10910  001E58  9280               	bcf	3968,1,c	;volatile
 10911                           
 10912                           ;main.c: 489: if(i == 0) {
 10913  001E5A  5008               	movf	i2led@i,w,c
 10914  001E5C  1009               	iorwf	i2led@i+1,w,c
 10915  001E5E  A4D8               	btfss	status,2,c
 10916  001E60  D007               	goto	i2l236
 10917                           
 10918                           ;main.c: 490: spiWrite('a' + count);
 10919  001E62  500A               	movf	i2led@count,w,c
 10920  001E64  0F61               	addlw	97
 10921  001E66  EC5F  F01D         	call	i2_spiWrite
 10922                           
 10923                           ;main.c: 491: re = spiRead();
 10924  001E6A  EC63  F01D         	call	i2_spiRead	;wreg free
 10925  001E6E  D006               	goto	L90
 10926  001E70                     i2l236:
 10927                           
 10928                           ;main.c: 493: spiWrite('m'+ count);
 10929  001E70  500A               	movf	i2led@count,w,c
 10930  001E72  0F6D               	addlw	109
 10931  001E74  EC5F  F01D         	call	i2_spiWrite
 10932                           
 10933                           ;main.c: 494: re = spiRead();
 10934  001E78  EC63  F01D         	call	i2_spiRead	;wreg free
 10935  001E7C                     L90:
 10936  001E7C  6E52               	movwf	_re,c
 10937                           
 10938                           ;main.c: 495: }
 10939                           ;main.c: 496: RA1 = 1;
 10940  001E7E  8280               	bsf	3968,1,c	;volatile
 10941  001E80                     i2l235:
 10942  001E80                     i2l3686:
 10943                           
 10944                           ;main.c: 497: }
 10945                           ;main.c: 498: if(surface_four[i] == num+count) {
 10946  001E80  0E42               	movlw	low _surface_four
 10947  001E82  2408               	addwf	i2led@i,w,c
 10948  001E84  6ED9               	movwf	fsr2l,c
 10949  001E86  0E00               	movlw	high _surface_four
 10950  001E88  2009               	addwfc	i2led@i+1,w,c
 10951  001E8A  6EDA               	movwf	fsr2h,c
 10952  001E8C  50DF               	movf	indf2,w,c
 10953  001E8E  6E02               	movwf	??i2_led& (0+255),c
 10954  001E90  6A03               	clrf	(??i2_led+1)& (0+255),c
 10955  001E92  5007               	movf	i2led@num,w,c
 10956  001E94  240A               	addwf	i2led@count,w,c
 10957  001E96  6E04               	movwf	(??i2_led+2)& (0+255),c
 10958  001E98  0E00               	movlw	0
 10959  001E9A  200B               	addwfc	i2led@count+1,w,c
 10960  001E9C  6E05               	movwf	(??i2_led+3)& (0+255),c
 10961  001E9E  5002               	movf	??i2_led,w,c
 10962  001EA0  1804               	xorwf	??i2_led+2,w,c
 10963  001EA2  E118               	bnz	i2l3702
 10964  001EA4  5003               	movf	??i2_led+1,w,c
 10965  001EA6  1805               	xorwf	??i2_led+3,w,c
 10966  001EA8  A4D8               	btfss	status,2,c
 10967  001EAA  D014               	goto	i2l238
 10968                           
 10969                           ;main.c: 499: RA3 = 0;
 10970  001EAC  9680               	bcf	3968,3,c	;volatile
 10971                           
 10972                           ;main.c: 500: if(i == 0) {
 10973  001EAE  5008               	movf	i2led@i,w,c
 10974  001EB0  1009               	iorwf	i2led@i+1,w,c
 10975  001EB2  A4D8               	btfss	status,2,c
 10976  001EB4  D007               	goto	i2l239
 10977                           
 10978                           ;main.c: 501: spiWrite('a' + count);
 10979  001EB6  500A               	movf	i2led@count,w,c
 10980  001EB8  0F61               	addlw	97
 10981  001EBA  EC5F  F01D         	call	i2_spiWrite
 10982                           
 10983                           ;main.c: 502: re = spiRead();
 10984  001EBE  EC63  F01D         	call	i2_spiRead	;wreg free
 10985  001EC2  D006               	goto	L91
 10986  001EC4                     i2l239:
 10987                           
 10988                           ;main.c: 504: spiWrite('m'+ count);
 10989  001EC4  500A               	movf	i2led@count,w,c
 10990  001EC6  0F6D               	addlw	109
 10991  001EC8  EC5F  F01D         	call	i2_spiWrite
 10992                           
 10993                           ;main.c: 505: re = spiRead();
 10994  001ECC  EC63  F01D         	call	i2_spiRead	;wreg free
 10995  001ED0                     L91:
 10996  001ED0  6E52               	movwf	_re,c
 10997                           
 10998                           ;main.c: 506: }
 10999                           ;main.c: 507: RA3 = 1;
 11000  001ED2  8680               	bsf	3968,3,c	;volatile
 11001  001ED4                     i2l238:
 11002  001ED4                     i2l3702:
 11003                           
 11004                           ;main.c: 508: }
 11005                           ;main.c: 509: if(surface_six[i] == num+count) {
 11006  001ED4  0E3A               	movlw	low _surface_six
 11007  001ED6  2408               	addwf	i2led@i,w,c
 11008  001ED8  6ED9               	movwf	fsr2l,c
 11009  001EDA  0E00               	movlw	high _surface_six
 11010  001EDC  2009               	addwfc	i2led@i+1,w,c
 11011  001EDE  6EDA               	movwf	fsr2h,c
 11012  001EE0  50DF               	movf	indf2,w,c
 11013  001EE2  6E02               	movwf	??i2_led& (0+255),c
 11014  001EE4  6A03               	clrf	(??i2_led+1)& (0+255),c
 11015  001EE6  5007               	movf	i2led@num,w,c
 11016  001EE8  240A               	addwf	i2led@count,w,c
 11017  001EEA  6E04               	movwf	(??i2_led+2)& (0+255),c
 11018  001EEC  0E00               	movlw	0
 11019  001EEE  200B               	addwfc	i2led@count+1,w,c
 11020  001EF0  6E05               	movwf	(??i2_led+3)& (0+255),c
 11021  001EF2  5002               	movf	??i2_led,w,c
 11022  001EF4  1804               	xorwf	??i2_led+2,w,c
 11023  001EF6  E118               	bnz	i2l3718
 11024  001EF8  5003               	movf	??i2_led+1,w,c
 11025  001EFA  1805               	xorwf	??i2_led+3,w,c
 11026  001EFC  A4D8               	btfss	status,2,c
 11027  001EFE  D014               	goto	i2l241
 11028                           
 11029                           ;main.c: 510: RA5 = 0;
 11030  001F00  9A80               	bcf	3968,5,c	;volatile
 11031                           
 11032                           ;main.c: 511: if(i == 0) {
 11033  001F02  5008               	movf	i2led@i,w,c
 11034  001F04  1009               	iorwf	i2led@i+1,w,c
 11035  001F06  A4D8               	btfss	status,2,c
 11036  001F08  D007               	goto	i2l242
 11037                           
 11038                           ;main.c: 512: spiWrite('a' + count);
 11039  001F0A  500A               	movf	i2led@count,w,c
 11040  001F0C  0F61               	addlw	97
 11041  001F0E  EC5F  F01D         	call	i2_spiWrite
 11042                           
 11043                           ;main.c: 513: re = spiRead();
 11044  001F12  EC63  F01D         	call	i2_spiRead	;wreg free
 11045  001F16  D006               	goto	L92
 11046  001F18                     i2l242:
 11047                           
 11048                           ;main.c: 515: spiWrite('m'+ count);
 11049  001F18  500A               	movf	i2led@count,w,c
 11050  001F1A  0F6D               	addlw	109
 11051  001F1C  EC5F  F01D         	call	i2_spiWrite
 11052                           
 11053                           ;main.c: 516: re = spiRead();
 11054  001F20  EC63  F01D         	call	i2_spiRead	;wreg free
 11055  001F24                     L92:
 11056  001F24  6E52               	movwf	_re,c
 11057                           
 11058                           ;main.c: 517: }
 11059                           ;main.c: 518: RA5 = 1;
 11060  001F26  8A80               	bsf	3968,5,c	;volatile
 11061  001F28                     i2l241:
 11062  001F28                     i2l3718:
 11063  001F28  4A0A               	infsnz	i2led@count,f,c
 11064  001F2A  2A0B               	incf	i2led@count+1,f,c
 11065  001F2C  BE0B               	btfsc	i2led@count+1,7,c
 11066  001F2E  D754               	goto	i2l230
 11067  001F30  500B               	movf	i2led@count+1,w,c
 11068  001F32  E101               	bnz	i2l3722
 11069  001F34  D74B               	goto	L93
 11070  001F36                     i2u396_40:
 11071  001F36                     i2l3722:
 11072                           
 11073                           ;main.c: 519: }
 11074                           ;main.c: 520: }
 11075                           ;main.c: 521: _delay((unsigned long)((5)*(1000000/4000.0)));
 11076  001F36  0EFA               	movlw	250
 11077  001F38                     i2u671_47:
 11078  001F38  D000               	nop2	
 11079  001F3A  2EE8               	decfsz	wreg,f,c
 11080  001F3C  D7FD               	bra	i2u671_47
 11081  001F3E  4A08               	infsnz	i2led@i,f,c
 11082  001F40  2A09               	incf	i2led@i+1,f,c
 11083  001F42  BE09               	btfsc	i2led@i+1,7,c
 11084  001F44  D73B               	goto	i2l228
 11085  001F46  5009               	movf	i2led@i+1,w,c
 11086  001F48  E101               	bnz	i2u397_40
 11087  001F4A  D732               	goto	L94
 11088  001F4C                     i2u397_40:
 11089                           
 11090                           ;main.c: 522: }
 11091                           ;main.c: 523: }
 11092  001F4C  0012               	return	
 11093  001F4E                     i2l227:
 11094                           
 11095                           ;main.c: 524: else if(rotate == 'A') {
 11096  001F4E  0E41               	movlw	65
 11097  001F50  1806               	xorwf	i2led@rotate,w,c
 11098  001F52  A4D8               	btfss	status,2,c
 11099  001F54  0012               	return	
 11100                           
 11101                           ;main.c: 525: for(i=0;i<=3;i++) {
 11102  001F56  0E00               	movlw	0
 11103  001F58  6E09               	movwf	i2led@i+1,c
 11104  001F5A  0E00               	movlw	0
 11105  001F5C  6E08               	movwf	i2led@i,c
 11106  001F5E  BE09               	btfsc	i2led@i+1,7,c
 11107  001F60  D008               	goto	i2l246
 11108  001F62  5009               	movf	i2led@i+1,w,c
 11109  001F64  E105               	bnz	i2u399_40
 11110  001F66  0E04               	movlw	4
 11111  001F68  5C08               	subwf	i2led@i,w,c
 11112  001F6A  B0D8               	btfsc	status,0,c
 11113  001F6C  0012               	return	
 11114  001F6E  D001               	goto	i2l246
 11115  001F70                     i2u399_40:
 11116  001F70  0012               	return	
 11117  001F72                     i2l246:
 11118                           
 11119                           ;main.c: 526: for(count=0;count<6;count++) {
 11120  001F72  0E00               	movlw	0
 11121  001F74  6E0B               	movwf	i2led@count+1,c
 11122  001F76  0E00               	movlw	0
 11123  001F78  6E0A               	movwf	i2led@count,c
 11124  001F7A  BE0B               	btfsc	i2led@count+1,7,c
 11125  001F7C  D008               	goto	i2l248
 11126  001F7E  500B               	movf	i2led@count+1,w,c
 11127  001F80  E105               	bnz	i2u400_40
 11128  001F82  0E06               	movlw	6
 11129  001F84  5C0A               	subwf	i2led@count,w,c
 11130  001F86  B0D8               	btfsc	status,0,c
 11131  001F88  D1AD               	goto	i2u431_40
 11132  001F8A  D001               	goto	i2l248
 11133  001F8C                     i2u400_40:
 11134  001F8C  D1AB               	goto	i2u431_40
 11135  001F8E                     i2l248:
 11136                           
 11137                           ;main.c: 527: if(surface_one[i] == num+count) {
 11138  001F8E  0E4E               	movlw	low _surface_one
 11139  001F90  2408               	addwf	i2led@i,w,c
 11140  001F92  6ED9               	movwf	fsr2l,c
 11141  001F94  0E00               	movlw	high _surface_one
 11142  001F96  2009               	addwfc	i2led@i+1,w,c
 11143  001F98  6EDA               	movwf	fsr2h,c
 11144  001F9A  50DF               	movf	indf2,w,c
 11145  001F9C  6E02               	movwf	??i2_led& (0+255),c
 11146  001F9E  6A03               	clrf	(??i2_led+1)& (0+255),c
 11147  001FA0  5007               	movf	i2led@num,w,c
 11148  001FA2  240A               	addwf	i2led@count,w,c
 11149  001FA4  6E04               	movwf	(??i2_led+2)& (0+255),c
 11150  001FA6  0E00               	movlw	0
 11151  001FA8  200B               	addwfc	i2led@count+1,w,c
 11152  001FAA  6E05               	movwf	(??i2_led+3)& (0+255),c
 11153  001FAC  5002               	movf	??i2_led,w,c
 11154  001FAE  1804               	xorwf	??i2_led+2,w,c
 11155  001FB0  E134               	bnz	i2l3770
 11156  001FB2  5003               	movf	??i2_led+1,w,c
 11157  001FB4  1805               	xorwf	??i2_led+3,w,c
 11158  001FB6  A4D8               	btfss	status,2,c
 11159  001FB8  D030               	goto	i2l250
 11160                           
 11161                           ;main.c: 528: RA0 = 0;
 11162  001FBA  9080               	bcf	3968,0,c	;volatile
 11163                           
 11164                           ;main.c: 529: if(i == 0) {
 11165  001FBC  5008               	movf	i2led@i,w,c
 11166  001FBE  1009               	iorwf	i2led@i+1,w,c
 11167  001FC0  A4D8               	btfss	status,2,c
 11168  001FC2  D007               	goto	i2l251
 11169                           
 11170                           ;main.c: 530: spiWrite('a' + count);
 11171  001FC4  500A               	movf	i2led@count,w,c
 11172  001FC6  0F61               	addlw	97
 11173  001FC8  EC5F  F01D         	call	i2_spiWrite
 11174                           
 11175                           ;main.c: 531: re = spiRead();
 11176  001FCC  EC63  F01D         	call	i2_spiRead	;wreg free
 11177  001FD0  D022               	goto	L97
 11178  001FD2                     i2l251:
 11179  001FD2  0408               	decf	i2led@i,w,c
 11180  001FD4  1009               	iorwf	i2led@i+1,w,c
 11181  001FD6  A4D8               	btfss	status,2,c
 11182  001FD8  D007               	goto	i2l253
 11183                           
 11184                           ;main.c: 533: spiWrite('m'+ count);
 11185  001FDA  500A               	movf	i2led@count,w,c
 11186  001FDC  0F6D               	addlw	109
 11187  001FDE  EC5F  F01D         	call	i2_spiWrite
 11188                           
 11189                           ;main.c: 534: re = spiRead();
 11190  001FE2  EC63  F01D         	call	i2_spiRead	;wreg free
 11191  001FE6  D017               	goto	L97
 11192  001FE8                     i2l253:
 11193  001FE8  0E02               	movlw	2
 11194  001FEA  1808               	xorwf	i2led@i,w,c
 11195  001FEC  1009               	iorwf	i2led@i+1,w,c
 11196  001FEE  A4D8               	btfss	status,2,c
 11197  001FF0  D007               	goto	i2l255
 11198                           
 11199                           ;main.c: 536: spiWrite('g'+ count);
 11200  001FF2  500A               	movf	i2led@count,w,c
 11201  001FF4  0F67               	addlw	103
 11202  001FF6  EC5F  F01D         	call	i2_spiWrite
 11203                           
 11204                           ;main.c: 537: re = spiRead();
 11205  001FFA  EC63  F01D         	call	i2_spiRead	;wreg free
 11206  001FFE  D00B               	goto	L97
 11207  002000                     i2l255:
 11208  002000  0E03               	movlw	3
 11209  002002  1808               	xorwf	i2led@i,w,c
 11210  002004  1009               	iorwf	i2led@i+1,w,c
 11211  002006  A4D8               	btfss	status,2,c
 11212  002008  D007               	goto	i2l257
 11213                           
 11214                           ;main.c: 539: spiWrite('s'+ count);
 11215  00200A  500A               	movf	i2led@count,w,c
 11216  00200C  0F73               	addlw	115
 11217  00200E  EC5F  F01D         	call	i2_spiWrite
 11218                           
 11219                           ;main.c: 540: re = spiRead();
 11220  002012  EC63  F01D         	call	i2_spiRead	;wreg free
 11221  002016                     L97:
 11222  002016  6E52               	movwf	_re,c
 11223  002018                     i2l257:
 11224                           
 11225                           ;main.c: 541: }
 11226                           ;main.c: 542: RA0 = 1;
 11227  002018  8080               	bsf	3968,0,c	;volatile
 11228  00201A                     i2l250:
 11229  00201A                     i2l3770:
 11230                           
 11231                           ;main.c: 543: }
 11232                           ;main.c: 544: if(surface_two[i] == num+count) {
 11233  00201A  0E4A               	movlw	low _surface_two
 11234  00201C  2408               	addwf	i2led@i,w,c
 11235  00201E  6ED9               	movwf	fsr2l,c
 11236  002020  0E00               	movlw	high _surface_two
 11237  002022  2009               	addwfc	i2led@i+1,w,c
 11238  002024  6EDA               	movwf	fsr2h,c
 11239  002026  50DF               	movf	indf2,w,c
 11240  002028  6E02               	movwf	??i2_led& (0+255),c
 11241  00202A  6A03               	clrf	(??i2_led+1)& (0+255),c
 11242  00202C  5007               	movf	i2led@num,w,c
 11243  00202E  240A               	addwf	i2led@count,w,c
 11244  002030  6E04               	movwf	(??i2_led+2)& (0+255),c
 11245  002032  0E00               	movlw	0
 11246  002034  200B               	addwfc	i2led@count+1,w,c
 11247  002036  6E05               	movwf	(??i2_led+3)& (0+255),c
 11248  002038  5002               	movf	??i2_led,w,c
 11249  00203A  1804               	xorwf	??i2_led+2,w,c
 11250  00203C  E134               	bnz	i2l3800
 11251  00203E  5003               	movf	??i2_led+1,w,c
 11252  002040  1805               	xorwf	??i2_led+3,w,c
 11253  002042  A4D8               	btfss	status,2,c
 11254  002044  D030               	goto	i2l258
 11255                           
 11256                           ;main.c: 545: RA1 = 0;
 11257  002046  9280               	bcf	3968,1,c	;volatile
 11258                           
 11259                           ;main.c: 546: if(i == 0) {
 11260  002048  5008               	movf	i2led@i,w,c
 11261  00204A  1009               	iorwf	i2led@i+1,w,c
 11262  00204C  A4D8               	btfss	status,2,c
 11263  00204E  D007               	goto	i2l259
 11264                           
 11265                           ;main.c: 547: spiWrite('a' + count);
 11266  002050  500A               	movf	i2led@count,w,c
 11267  002052  0F61               	addlw	97
 11268  002054  EC5F  F01D         	call	i2_spiWrite
 11269                           
 11270                           ;main.c: 548: re = spiRead();
 11271  002058  EC63  F01D         	call	i2_spiRead	;wreg free
 11272  00205C  D022               	goto	L100
 11273  00205E                     i2l259:
 11274  00205E  0408               	decf	i2led@i,w,c
 11275  002060  1009               	iorwf	i2led@i+1,w,c
 11276  002062  A4D8               	btfss	status,2,c
 11277  002064  D007               	goto	i2l261
 11278                           
 11279                           ;main.c: 550: spiWrite('m'+ count);
 11280  002066  500A               	movf	i2led@count,w,c
 11281  002068  0F6D               	addlw	109
 11282  00206A  EC5F  F01D         	call	i2_spiWrite
 11283                           
 11284                           ;main.c: 551: re = spiRead();
 11285  00206E  EC63  F01D         	call	i2_spiRead	;wreg free
 11286  002072  D017               	goto	L100
 11287  002074                     i2l261:
 11288  002074  0E02               	movlw	2
 11289  002076  1808               	xorwf	i2led@i,w,c
 11290  002078  1009               	iorwf	i2led@i+1,w,c
 11291  00207A  A4D8               	btfss	status,2,c
 11292  00207C  D007               	goto	i2l263
 11293                           
 11294                           ;main.c: 553: spiWrite('g'+ count);
 11295  00207E  500A               	movf	i2led@count,w,c
 11296  002080  0F67               	addlw	103
 11297  002082  EC5F  F01D         	call	i2_spiWrite
 11298                           
 11299                           ;main.c: 554: re = spiRead();
 11300  002086  EC63  F01D         	call	i2_spiRead	;wreg free
 11301  00208A  D00B               	goto	L100
 11302  00208C                     i2l263:
 11303  00208C  0E03               	movlw	3
 11304  00208E  1808               	xorwf	i2led@i,w,c
 11305  002090  1009               	iorwf	i2led@i+1,w,c
 11306  002092  A4D8               	btfss	status,2,c
 11307  002094  D007               	goto	i2l265
 11308                           
 11309                           ;main.c: 556: spiWrite('s'+ count);
 11310  002096  500A               	movf	i2led@count,w,c
 11311  002098  0F73               	addlw	115
 11312  00209A  EC5F  F01D         	call	i2_spiWrite
 11313                           
 11314                           ;main.c: 557: re = spiRead();
 11315  00209E  EC63  F01D         	call	i2_spiRead	;wreg free
 11316  0020A2                     L100:
 11317  0020A2  6E52               	movwf	_re,c
 11318  0020A4                     i2l265:
 11319                           
 11320                           ;main.c: 558: }
 11321                           ;main.c: 559: RA1 = 1;
 11322  0020A4  8280               	bsf	3968,1,c	;volatile
 11323  0020A6                     i2l258:
 11324  0020A6                     i2l3800:
 11325                           
 11326                           ;main.c: 560: }
 11327                           ;main.c: 561: if(surface_three[i] == num+count) {
 11328  0020A6  0E46               	movlw	low _surface_three
 11329  0020A8  2408               	addwf	i2led@i,w,c
 11330  0020AA  6ED9               	movwf	fsr2l,c
 11331  0020AC  0E00               	movlw	high _surface_three
 11332  0020AE  2009               	addwfc	i2led@i+1,w,c
 11333  0020B0  6EDA               	movwf	fsr2h,c
 11334  0020B2  50DF               	movf	indf2,w,c
 11335  0020B4  6E02               	movwf	??i2_led& (0+255),c
 11336  0020B6  6A03               	clrf	(??i2_led+1)& (0+255),c
 11337  0020B8  5007               	movf	i2led@num,w,c
 11338  0020BA  240A               	addwf	i2led@count,w,c
 11339  0020BC  6E04               	movwf	(??i2_led+2)& (0+255),c
 11340  0020BE  0E00               	movlw	0
 11341  0020C0  200B               	addwfc	i2led@count+1,w,c
 11342  0020C2  6E05               	movwf	(??i2_led+3)& (0+255),c
 11343  0020C4  5002               	movf	??i2_led,w,c
 11344  0020C6  1804               	xorwf	??i2_led+2,w,c
 11345  0020C8  E134               	bnz	i2l3830
 11346  0020CA  5003               	movf	??i2_led+1,w,c
 11347  0020CC  1805               	xorwf	??i2_led+3,w,c
 11348  0020CE  A4D8               	btfss	status,2,c
 11349  0020D0  D030               	goto	i2l266
 11350                           
 11351                           ;main.c: 562: RA2 = 0;
 11352  0020D2  9480               	bcf	3968,2,c	;volatile
 11353                           
 11354                           ;main.c: 563: if(i == 0) {
 11355  0020D4  5008               	movf	i2led@i,w,c
 11356  0020D6  1009               	iorwf	i2led@i+1,w,c
 11357  0020D8  A4D8               	btfss	status,2,c
 11358  0020DA  D007               	goto	i2l267
 11359                           
 11360                           ;main.c: 564: spiWrite('a' + count);
 11361  0020DC  500A               	movf	i2led@count,w,c
 11362  0020DE  0F61               	addlw	97
 11363  0020E0  EC5F  F01D         	call	i2_spiWrite
 11364                           
 11365                           ;main.c: 565: re = spiRead();
 11366  0020E4  EC63  F01D         	call	i2_spiRead	;wreg free
 11367  0020E8  D022               	goto	L103
 11368  0020EA                     i2l267:
 11369  0020EA  0408               	decf	i2led@i,w,c
 11370  0020EC  1009               	iorwf	i2led@i+1,w,c
 11371  0020EE  A4D8               	btfss	status,2,c
 11372  0020F0  D007               	goto	i2l269
 11373                           
 11374                           ;main.c: 567: spiWrite('m'+ count);
 11375  0020F2  500A               	movf	i2led@count,w,c
 11376  0020F4  0F6D               	addlw	109
 11377  0020F6  EC5F  F01D         	call	i2_spiWrite
 11378                           
 11379                           ;main.c: 568: re = spiRead();
 11380  0020FA  EC63  F01D         	call	i2_spiRead	;wreg free
 11381  0020FE  D017               	goto	L103
 11382  002100                     i2l269:
 11383  002100  0E02               	movlw	2
 11384  002102  1808               	xorwf	i2led@i,w,c
 11385  002104  1009               	iorwf	i2led@i+1,w,c
 11386  002106  A4D8               	btfss	status,2,c
 11387  002108  D007               	goto	i2l271
 11388                           
 11389                           ;main.c: 570: spiWrite('g'+ count);
 11390  00210A  500A               	movf	i2led@count,w,c
 11391  00210C  0F67               	addlw	103
 11392  00210E  EC5F  F01D         	call	i2_spiWrite
 11393                           
 11394                           ;main.c: 571: re = spiRead();
 11395  002112  EC63  F01D         	call	i2_spiRead	;wreg free
 11396  002116  D00B               	goto	L103
 11397  002118                     i2l271:
 11398  002118  0E03               	movlw	3
 11399  00211A  1808               	xorwf	i2led@i,w,c
 11400  00211C  1009               	iorwf	i2led@i+1,w,c
 11401  00211E  A4D8               	btfss	status,2,c
 11402  002120  D007               	goto	i2l273
 11403                           
 11404                           ;main.c: 573: spiWrite('s'+ count);
 11405  002122  500A               	movf	i2led@count,w,c
 11406  002124  0F73               	addlw	115
 11407  002126  EC5F  F01D         	call	i2_spiWrite
 11408                           
 11409                           ;main.c: 574: re = spiRead();
 11410  00212A  EC63  F01D         	call	i2_spiRead	;wreg free
 11411  00212E                     L103:
 11412  00212E  6E52               	movwf	_re,c
 11413  002130                     i2l273:
 11414                           
 11415                           ;main.c: 575: }
 11416                           ;main.c: 576: RA2 = 1;
 11417  002130  8480               	bsf	3968,2,c	;volatile
 11418  002132                     i2l266:
 11419  002132                     i2l3830:
 11420                           
 11421                           ;main.c: 577: }
 11422                           ;main.c: 578: if(surface_four[i] == num+count) {
 11423  002132  0E42               	movlw	low _surface_four
 11424  002134  2408               	addwf	i2led@i,w,c
 11425  002136  6ED9               	movwf	fsr2l,c
 11426  002138  0E00               	movlw	high _surface_four
 11427  00213A  2009               	addwfc	i2led@i+1,w,c
 11428  00213C  6EDA               	movwf	fsr2h,c
 11429  00213E  50DF               	movf	indf2,w,c
 11430  002140  6E02               	movwf	??i2_led& (0+255),c
 11431  002142  6A03               	clrf	(??i2_led+1)& (0+255),c
 11432  002144  5007               	movf	i2led@num,w,c
 11433  002146  240A               	addwf	i2led@count,w,c
 11434  002148  6E04               	movwf	(??i2_led+2)& (0+255),c
 11435  00214A  0E00               	movlw	0
 11436  00214C  200B               	addwfc	i2led@count+1,w,c
 11437  00214E  6E05               	movwf	(??i2_led+3)& (0+255),c
 11438  002150  5002               	movf	??i2_led,w,c
 11439  002152  1804               	xorwf	??i2_led+2,w,c
 11440  002154  E134               	bnz	i2l3860
 11441  002156  5003               	movf	??i2_led+1,w,c
 11442  002158  1805               	xorwf	??i2_led+3,w,c
 11443  00215A  A4D8               	btfss	status,2,c
 11444  00215C  D030               	goto	i2l274
 11445                           
 11446                           ;main.c: 579: RA3 = 0;
 11447  00215E  9680               	bcf	3968,3,c	;volatile
 11448                           
 11449                           ;main.c: 580: if(i == 0) {
 11450  002160  5008               	movf	i2led@i,w,c
 11451  002162  1009               	iorwf	i2led@i+1,w,c
 11452  002164  A4D8               	btfss	status,2,c
 11453  002166  D007               	goto	i2l275
 11454                           
 11455                           ;main.c: 581: spiWrite('a' + count);
 11456  002168  500A               	movf	i2led@count,w,c
 11457  00216A  0F61               	addlw	97
 11458  00216C  EC5F  F01D         	call	i2_spiWrite
 11459                           
 11460                           ;main.c: 582: re = spiRead();
 11461  002170  EC63  F01D         	call	i2_spiRead	;wreg free
 11462  002174  D022               	goto	L106
 11463  002176                     i2l275:
 11464  002176  0408               	decf	i2led@i,w,c
 11465  002178  1009               	iorwf	i2led@i+1,w,c
 11466  00217A  A4D8               	btfss	status,2,c
 11467  00217C  D007               	goto	i2l277
 11468                           
 11469                           ;main.c: 584: spiWrite('m'+ count);
 11470  00217E  500A               	movf	i2led@count,w,c
 11471  002180  0F6D               	addlw	109
 11472  002182  EC5F  F01D         	call	i2_spiWrite
 11473                           
 11474                           ;main.c: 585: re = spiRead();
 11475  002186  EC63  F01D         	call	i2_spiRead	;wreg free
 11476  00218A  D017               	goto	L106
 11477  00218C                     i2l277:
 11478  00218C  0E02               	movlw	2
 11479  00218E  1808               	xorwf	i2led@i,w,c
 11480  002190  1009               	iorwf	i2led@i+1,w,c
 11481  002192  A4D8               	btfss	status,2,c
 11482  002194  D007               	goto	i2l279
 11483                           
 11484                           ;main.c: 587: spiWrite('g'+ count);
 11485  002196  500A               	movf	i2led@count,w,c
 11486  002198  0F67               	addlw	103
 11487  00219A  EC5F  F01D         	call	i2_spiWrite
 11488                           
 11489                           ;main.c: 588: re = spiRead();
 11490  00219E  EC63  F01D         	call	i2_spiRead	;wreg free
 11491  0021A2  D00B               	goto	L106
 11492  0021A4                     i2l279:
 11493  0021A4  0E03               	movlw	3
 11494  0021A6  1808               	xorwf	i2led@i,w,c
 11495  0021A8  1009               	iorwf	i2led@i+1,w,c
 11496  0021AA  A4D8               	btfss	status,2,c
 11497  0021AC  D007               	goto	i2l281
 11498                           
 11499                           ;main.c: 590: spiWrite('s'+ count);
 11500  0021AE  500A               	movf	i2led@count,w,c
 11501  0021B0  0F73               	addlw	115
 11502  0021B2  EC5F  F01D         	call	i2_spiWrite
 11503                           
 11504                           ;main.c: 591: re = spiRead();
 11505  0021B6  EC63  F01D         	call	i2_spiRead	;wreg free
 11506  0021BA                     L106:
 11507  0021BA  6E52               	movwf	_re,c
 11508  0021BC                     i2l281:
 11509                           
 11510                           ;main.c: 592: }
 11511                           ;main.c: 593: RA3 = 1;
 11512  0021BC  8680               	bsf	3968,3,c	;volatile
 11513  0021BE                     i2l274:
 11514  0021BE                     i2l3860:
 11515                           
 11516                           ;main.c: 594: }
 11517                           ;main.c: 595: if(surface_five[i] == num+count) {
 11518  0021BE  0E3E               	movlw	low _surface_five
 11519  0021C0  2408               	addwf	i2led@i,w,c
 11520  0021C2  6ED9               	movwf	fsr2l,c
 11521  0021C4  0E00               	movlw	high _surface_five
 11522  0021C6  2009               	addwfc	i2led@i+1,w,c
 11523  0021C8  6EDA               	movwf	fsr2h,c
 11524  0021CA  50DF               	movf	indf2,w,c
 11525  0021CC  6E02               	movwf	??i2_led& (0+255),c
 11526  0021CE  6A03               	clrf	(??i2_led+1)& (0+255),c
 11527  0021D0  5007               	movf	i2led@num,w,c
 11528  0021D2  240A               	addwf	i2led@count,w,c
 11529  0021D4  6E04               	movwf	(??i2_led+2)& (0+255),c
 11530  0021D6  0E00               	movlw	0
 11531  0021D8  200B               	addwfc	i2led@count+1,w,c
 11532  0021DA  6E05               	movwf	(??i2_led+3)& (0+255),c
 11533  0021DC  5002               	movf	??i2_led,w,c
 11534  0021DE  1804               	xorwf	??i2_led+2,w,c
 11535  0021E0  E134               	bnz	i2l3890
 11536  0021E2  5003               	movf	??i2_led+1,w,c
 11537  0021E4  1805               	xorwf	??i2_led+3,w,c
 11538  0021E6  A4D8               	btfss	status,2,c
 11539  0021E8  D030               	goto	i2l282
 11540                           
 11541                           ;main.c: 596: RA4 = 0;
 11542  0021EA  9880               	bcf	3968,4,c	;volatile
 11543                           
 11544                           ;main.c: 597: if(i == 0) {
 11545  0021EC  5008               	movf	i2led@i,w,c
 11546  0021EE  1009               	iorwf	i2led@i+1,w,c
 11547  0021F0  A4D8               	btfss	status,2,c
 11548  0021F2  D007               	goto	i2l283
 11549                           
 11550                           ;main.c: 598: spiWrite('a' + count);
 11551  0021F4  500A               	movf	i2led@count,w,c
 11552  0021F6  0F61               	addlw	97
 11553  0021F8  EC5F  F01D         	call	i2_spiWrite
 11554                           
 11555                           ;main.c: 599: re = spiRead();
 11556  0021FC  EC63  F01D         	call	i2_spiRead	;wreg free
 11557  002200  D022               	goto	L109
 11558  002202                     i2l283:
 11559  002202  0408               	decf	i2led@i,w,c
 11560  002204  1009               	iorwf	i2led@i+1,w,c
 11561  002206  A4D8               	btfss	status,2,c
 11562  002208  D007               	goto	i2l285
 11563                           
 11564                           ;main.c: 601: spiWrite('m'+ count);
 11565  00220A  500A               	movf	i2led@count,w,c
 11566  00220C  0F6D               	addlw	109
 11567  00220E  EC5F  F01D         	call	i2_spiWrite
 11568                           
 11569                           ;main.c: 602: re = spiRead();
 11570  002212  EC63  F01D         	call	i2_spiRead	;wreg free
 11571  002216  D017               	goto	L109
 11572  002218                     i2l285:
 11573  002218  0E02               	movlw	2
 11574  00221A  1808               	xorwf	i2led@i,w,c
 11575  00221C  1009               	iorwf	i2led@i+1,w,c
 11576  00221E  A4D8               	btfss	status,2,c
 11577  002220  D007               	goto	i2l287
 11578                           
 11579                           ;main.c: 604: spiWrite('g'+ count);
 11580  002222  500A               	movf	i2led@count,w,c
 11581  002224  0F67               	addlw	103
 11582  002226  EC5F  F01D         	call	i2_spiWrite
 11583                           
 11584                           ;main.c: 605: re = spiRead();
 11585  00222A  EC63  F01D         	call	i2_spiRead	;wreg free
 11586  00222E  D00B               	goto	L109
 11587  002230                     i2l287:
 11588  002230  0E03               	movlw	3
 11589  002232  1808               	xorwf	i2led@i,w,c
 11590  002234  1009               	iorwf	i2led@i+1,w,c
 11591  002236  A4D8               	btfss	status,2,c
 11592  002238  D007               	goto	i2l289
 11593                           
 11594                           ;main.c: 607: spiWrite('s'+ count);
 11595  00223A  500A               	movf	i2led@count,w,c
 11596  00223C  0F73               	addlw	115
 11597  00223E  EC5F  F01D         	call	i2_spiWrite
 11598                           
 11599                           ;main.c: 608: re = spiRead();
 11600  002242  EC63  F01D         	call	i2_spiRead	;wreg free
 11601  002246                     L109:
 11602  002246  6E52               	movwf	_re,c
 11603  002248                     i2l289:
 11604                           
 11605                           ;main.c: 609: }
 11606                           ;main.c: 610: RA4 = 1;
 11607  002248  8880               	bsf	3968,4,c	;volatile
 11608  00224A                     i2l282:
 11609  00224A                     i2l3890:
 11610                           
 11611                           ;main.c: 611: }
 11612                           ;main.c: 612: if(surface_six[i] == num+count) {
 11613  00224A  0E3A               	movlw	low _surface_six
 11614  00224C  2408               	addwf	i2led@i,w,c
 11615  00224E  6ED9               	movwf	fsr2l,c
 11616  002250  0E00               	movlw	high _surface_six
 11617  002252  2009               	addwfc	i2led@i+1,w,c
 11618  002254  6EDA               	movwf	fsr2h,c
 11619  002256  50DF               	movf	indf2,w,c
 11620  002258  6E02               	movwf	??i2_led& (0+255),c
 11621  00225A  6A03               	clrf	(??i2_led+1)& (0+255),c
 11622  00225C  5007               	movf	i2led@num,w,c
 11623  00225E  240A               	addwf	i2led@count,w,c
 11624  002260  6E04               	movwf	(??i2_led+2)& (0+255),c
 11625  002262  0E00               	movlw	0
 11626  002264  200B               	addwfc	i2led@count+1,w,c
 11627  002266  6E05               	movwf	(??i2_led+3)& (0+255),c
 11628  002268  5002               	movf	??i2_led,w,c
 11629  00226A  1804               	xorwf	??i2_led+2,w,c
 11630  00226C  E134               	bnz	i2l3920
 11631  00226E  5003               	movf	??i2_led+1,w,c
 11632  002270  1805               	xorwf	??i2_led+3,w,c
 11633  002272  A4D8               	btfss	status,2,c
 11634  002274  D030               	goto	i2l290
 11635                           
 11636                           ;main.c: 613: RA5 = 0;
 11637  002276  9A80               	bcf	3968,5,c	;volatile
 11638                           
 11639                           ;main.c: 614: if(i == 0) {
 11640  002278  5008               	movf	i2led@i,w,c
 11641  00227A  1009               	iorwf	i2led@i+1,w,c
 11642  00227C  A4D8               	btfss	status,2,c
 11643  00227E  D007               	goto	i2l291
 11644                           
 11645                           ;main.c: 615: spiWrite('a' + count);
 11646  002280  500A               	movf	i2led@count,w,c
 11647  002282  0F61               	addlw	97
 11648  002284  EC5F  F01D         	call	i2_spiWrite
 11649                           
 11650                           ;main.c: 616: re = spiRead();
 11651  002288  EC63  F01D         	call	i2_spiRead	;wreg free
 11652  00228C  D022               	goto	L112
 11653  00228E                     i2l291:
 11654  00228E  0408               	decf	i2led@i,w,c
 11655  002290  1009               	iorwf	i2led@i+1,w,c
 11656  002292  A4D8               	btfss	status,2,c
 11657  002294  D007               	goto	i2l293
 11658                           
 11659                           ;main.c: 618: spiWrite('m'+ count);
 11660  002296  500A               	movf	i2led@count,w,c
 11661  002298  0F6D               	addlw	109
 11662  00229A  EC5F  F01D         	call	i2_spiWrite
 11663                           
 11664                           ;main.c: 619: re = spiRead();
 11665  00229E  EC63  F01D         	call	i2_spiRead	;wreg free
 11666  0022A2  D017               	goto	L112
 11667  0022A4                     i2l293:
 11668  0022A4  0E02               	movlw	2
 11669  0022A6  1808               	xorwf	i2led@i,w,c
 11670  0022A8  1009               	iorwf	i2led@i+1,w,c
 11671  0022AA  A4D8               	btfss	status,2,c
 11672  0022AC  D007               	goto	i2l295
 11673                           
 11674                           ;main.c: 621: spiWrite('g'+ count);
 11675  0022AE  500A               	movf	i2led@count,w,c
 11676  0022B0  0F67               	addlw	103
 11677  0022B2  EC5F  F01D         	call	i2_spiWrite
 11678                           
 11679                           ;main.c: 622: re = spiRead();
 11680  0022B6  EC63  F01D         	call	i2_spiRead	;wreg free
 11681  0022BA  D00B               	goto	L112
 11682  0022BC                     i2l295:
 11683  0022BC  0E03               	movlw	3
 11684  0022BE  1808               	xorwf	i2led@i,w,c
 11685  0022C0  1009               	iorwf	i2led@i+1,w,c
 11686  0022C2  A4D8               	btfss	status,2,c
 11687  0022C4  D007               	goto	i2l297
 11688                           
 11689                           ;main.c: 624: spiWrite('s'+ count);
 11690  0022C6  500A               	movf	i2led@count,w,c
 11691  0022C8  0F73               	addlw	115
 11692  0022CA  EC5F  F01D         	call	i2_spiWrite
 11693                           
 11694                           ;main.c: 625: re = spiRead();
 11695  0022CE  EC63  F01D         	call	i2_spiRead	;wreg free
 11696  0022D2                     L112:
 11697  0022D2  6E52               	movwf	_re,c
 11698  0022D4                     i2l297:
 11699                           
 11700                           ;main.c: 626: }
 11701                           ;main.c: 627: RA5 = 1;
 11702  0022D4  8A80               	bsf	3968,5,c	;volatile
 11703  0022D6                     i2l290:
 11704  0022D6                     i2l3920:
 11705  0022D6  4A0A               	infsnz	i2led@count,f,c
 11706  0022D8  2A0B               	incf	i2led@count+1,f,c
 11707  0022DA  BE0B               	btfsc	i2led@count+1,7,c
 11708  0022DC  D658               	goto	i2l248
 11709  0022DE  500B               	movf	i2led@count+1,w,c
 11710  0022E0  E101               	bnz	i2l3924
 11711  0022E2  D64F               	goto	L113
 11712  0022E4                     i2u431_40:
 11713  0022E4                     i2l3924:
 11714                           
 11715                           ;main.c: 628: }
 11716                           ;main.c: 629: }
 11717                           ;main.c: 630: _delay((unsigned long)((5)*(1000000/4000.0)));
 11718  0022E4  0EFA               	movlw	250
 11719  0022E6                     i2u672_47:
 11720  0022E6  D000               	nop2	
 11721  0022E8  2EE8               	decfsz	wreg,f,c
 11722  0022EA  D7FD               	bra	i2u672_47
 11723  0022EC  4A08               	infsnz	i2led@i,f,c
 11724  0022EE  2A09               	incf	i2led@i+1,f,c
 11725  0022F0  BE09               	btfsc	i2led@i+1,7,c
 11726  0022F2  D63F               	goto	i2l246
 11727  0022F4  5009               	movf	i2led@i+1,w,c
 11728  0022F6  E101               	bnz	i2l298
 11729  0022F8  D636               	goto	L114
 11730  0022FA                     i2l298:
 11731  0022FA  0012               	return		;funcret
 11732  0022FC                     __end_ofi2_led:
 11733                           	opt stack 0
 11734                           pclatu	equ	0xFFB
 11735                           pclath	equ	0xFFA
 11736                           tblptru	equ	0xFF8
 11737                           tblptrh	equ	0xFF7
 11738                           tblptrl	equ	0xFF6
 11739                           tablat	equ	0xFF5
 11740                           prodh	equ	0xFF4
 11741                           prodl	equ	0xFF3
 11742                           intcon	equ	0xFF2
 11743                           postinc0	equ	0xFEE
 11744                           fsr0h	equ	0xFEA
 11745                           fsr0l	equ	0xFE9
 11746                           wreg	equ	0xFE8
 11747                           indf1	equ	0xFE7
 11748                           postdec1	equ	0xFE5
 11749                           fsr1h	equ	0xFE2
 11750                           fsr1l	equ	0xFE1
 11751                           indf2	equ	0xFDF
 11752                           fsr2h	equ	0xFDA
 11753                           fsr2l	equ	0xFD9
 11754                           status	equ	0xFD8
 11755                           
 11756 ;; *************** function i2_spiWrite *****************
 11757 ;; Defined at:
 11758 ;;		line 34 in file "spi.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;  dat             1    wreg     unsigned char 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;  dat             1    0[COMRAM] unsigned char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  1    wreg      void 
 11765 ;; Registers used:
 11766 ;;		wreg
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11772 ;;      Params:         0       0       0       0       0       0       0
 11773 ;;      Locals:         1       0       0       0       0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0
 11775 ;;      Totals:         1       0       0       0       0       0       0
 11776 ;;Total ram usage:        1 bytes
 11777 ;; Hardware stack levels used:    1
 11778 ;; This function calls:
 11779 ;;		Nothing
 11780 ;; This function is called by:
 11781 ;;		i2_led
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text35
 11786  003ABE                     __ptext35:
 11787                           	opt stack 0
 11788  003ABE                     i2_spiWrite:
 11789                           	opt stack 23
 11790                           
 11791                           ;incstack = 0
 11792                           ;i2spiWrite@dat stored from wreg
 11793  003ABE  6E01               	movwf	i2spiWrite@dat,c
 11794                           
 11795                           ;spi.c: 36: SSPBUF = dat;
 11796  003AC0  C001  FFC9         	movff	i2spiWrite@dat,4041	;volatile
 11797  003AC4  0012               	return		;funcret
 11798  003AC6                     __end_ofi2_spiWrite:
 11799                           	opt stack 0
 11800                           pclatu	equ	0xFFB
 11801                           pclath	equ	0xFFA
 11802                           tblptru	equ	0xFF8
 11803                           tblptrh	equ	0xFF7
 11804                           tblptrl	equ	0xFF6
 11805                           tablat	equ	0xFF5
 11806                           prodh	equ	0xFF4
 11807                           prodl	equ	0xFF3
 11808                           intcon	equ	0xFF2
 11809                           postinc0	equ	0xFEE
 11810                           fsr0h	equ	0xFEA
 11811                           fsr0l	equ	0xFE9
 11812                           wreg	equ	0xFE8
 11813                           indf1	equ	0xFE7
 11814                           postdec1	equ	0xFE5
 11815                           fsr1h	equ	0xFE2
 11816                           fsr1l	equ	0xFE1
 11817                           indf2	equ	0xFDF
 11818                           fsr2h	equ	0xFDA
 11819                           fsr2l	equ	0xFD9
 11820                           status	equ	0xFD8
 11821                           
 11822 ;; *************** function i2_spiRead *****************
 11823 ;; Defined at:
 11824 ;;		line 47 in file "spi.c"
 11825 ;; Parameters:    Size  Location     Type
 11826 ;;		None
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;		None
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  1    wreg      unsigned char 
 11831 ;; Registers used:
 11832 ;;		wreg, status,2, cstack
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11838 ;;      Params:         0       0       0       0       0       0       0
 11839 ;;      Locals:         0       0       0       0       0       0       0
 11840 ;;      Temps:          0       0       0       0       0       0       0
 11841 ;;      Totals:         0       0       0       0       0       0       0
 11842 ;;Total ram usage:        0 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    1
 11845 ;; This function calls:
 11846 ;;		i2_spiReceiveWait
 11847 ;; This function is called by:
 11848 ;;		i2_led
 11849 ;; This function uses a non-reentrant model
 11850 ;;
 11851                           
 11852                           	psect	text36
 11853  003AC6                     __ptext36:
 11854                           	opt stack 0
 11855  003AC6                     i2_spiRead:
 11856                           	opt stack 22
 11857                           
 11858                           ;spi.c: 49: spiReceiveWait();
 11859                           
 11860                           ;incstack = 0
 11861  003AC6  EC6A  F01D         	call	i2_spiReceiveWait	;wreg free
 11862                           
 11863                           ;spi.c: 50: return(SSPBUF);
 11864  003ACA  50C9               	movf	4041,w,c	;volatile
 11865  003ACC  0012               	return	
 11866  003ACE                     __end_ofi2_spiRead:
 11867                           	opt stack 0
 11868                           pclatu	equ	0xFFB
 11869                           pclath	equ	0xFFA
 11870                           tblptru	equ	0xFF8
 11871                           tblptrh	equ	0xFF7
 11872                           tblptrl	equ	0xFF6
 11873                           tablat	equ	0xFF5
 11874                           prodh	equ	0xFF4
 11875                           prodl	equ	0xFF3
 11876                           intcon	equ	0xFF2
 11877                           postinc0	equ	0xFEE
 11878                           fsr0h	equ	0xFEA
 11879                           fsr0l	equ	0xFE9
 11880                           wreg	equ	0xFE8
 11881                           indf1	equ	0xFE7
 11882                           postdec1	equ	0xFE5
 11883                           fsr1h	equ	0xFE2
 11884                           fsr1l	equ	0xFE1
 11885                           indf2	equ	0xFDF
 11886                           fsr2h	equ	0xFDA
 11887                           fsr2l	equ	0xFD9
 11888                           status	equ	0xFD8
 11889                           
 11890 ;; *************** function i2_spiReceiveWait *****************
 11891 ;; Defined at:
 11892 ;;		line 29 in file "spi.c"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;		None
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;		None
 11897 ;; Return value:  Size  Location     Type
 11898 ;;                  1    wreg      void 
 11899 ;; Registers used:
 11900 ;;		None
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11906 ;;      Params:         0       0       0       0       0       0       0
 11907 ;;      Locals:         0       0       0       0       0       0       0
 11908 ;;      Temps:          0       0       0       0       0       0       0
 11909 ;;      Totals:         0       0       0       0       0       0       0
 11910 ;;Total ram usage:        0 bytes
 11911 ;; Hardware stack levels used:    1
 11912 ;; This function calls:
 11913 ;;		Nothing
 11914 ;; This function is called by:
 11915 ;;		i2_spiRead
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           	psect	text37
 11920  003AD4                     __ptext37:
 11921                           	opt stack 0
 11922  003AD4                     i2_spiReceiveWait:
 11923                           	opt stack 22
 11924                           
 11925                           ;spi.c: 31: while ( !SSPSTATbits.BF );
 11926                           
 11927                           ;incstack = 0
 11928  003AD4  B0C7               	btfsc	4039,0,c	;volatile
 11929  003AD6  0012               	return	
 11930  003AD8  D7FD               	goto	i2_spiReceiveWait
 11931  003ADA                     __end_ofi2_spiReceiveWait:
 11932                           	opt stack 0
 11933                           pclatu	equ	0xFFB
 11934                           pclath	equ	0xFFA
 11935                           tblptru	equ	0xFF8
 11936                           tblptrh	equ	0xFF7
 11937                           tblptrl	equ	0xFF6
 11938                           tablat	equ	0xFF5
 11939                           prodh	equ	0xFF4
 11940                           prodl	equ	0xFF3
 11941                           intcon	equ	0xFF2
 11942                           postinc0	equ	0xFEE
 11943                           fsr0h	equ	0xFEA
 11944                           fsr0l	equ	0xFE9
 11945                           wreg	equ	0xFE8
 11946                           indf1	equ	0xFE7
 11947                           postdec1	equ	0xFE5
 11948                           fsr1h	equ	0xFE2
 11949                           fsr1l	equ	0xFE1
 11950                           indf2	equ	0xFDF
 11951                           fsr2h	equ	0xFDA
 11952                           fsr2l	equ	0xFD9
 11953                           status	equ	0xFD8
 11954                           
 11955 ;; *************** function _srand *****************
 11956 ;; Defined at:
 11957 ;;		line 6 in file "/Applications/microchip/xc8/v1.44/sources/common/rand.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;  x               2    0[COMRAM] unsigned int 
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		status,2
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11971 ;;      Params:         2       0       0       0       0       0       0
 11972 ;;      Locals:         0       0       0       0       0       0       0
 11973 ;;      Temps:          0       0       0       0       0       0       0
 11974 ;;      Totals:         2       0       0       0       0       0       0
 11975 ;;Total ram usage:        2 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; This function calls:
 11978 ;;		Nothing
 11979 ;; This function is called by:
 11980 ;;		_scramble
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984                           	psect	text38
 11985  003AA0                     __ptext38:
 11986                           	opt stack 0
 11987  003AA0                     _srand:
 11988                           	opt stack 25
 11989                           
 11990                           ;incstack = 0
 11991  003AA0  C001  F032         	movff	srand@x,_randx
 11992  003AA4  C002  F033         	movff	srand@x+1,_randx+1
 11993  003AA8  6A34               	clrf	_randx+2,c
 11994  003AAA  6A35               	clrf	_randx+3,c
 11995  003AAC  0012               	return		;funcret
 11996  003AAE                     __end_of_srand:
 11997                           	opt stack 0
 11998                           pclatu	equ	0xFFB
 11999                           pclath	equ	0xFFA
 12000                           tblptru	equ	0xFF8
 12001                           tblptrh	equ	0xFF7
 12002                           tblptrl	equ	0xFF6
 12003                           tablat	equ	0xFF5
 12004                           prodh	equ	0xFF4
 12005                           prodl	equ	0xFF3
 12006                           intcon	equ	0xFF2
 12007                           postinc0	equ	0xFEE
 12008                           fsr0h	equ	0xFEA
 12009                           fsr0l	equ	0xFE9
 12010                           wreg	equ	0xFE8
 12011                           indf1	equ	0xFE7
 12012                           postdec1	equ	0xFE5
 12013                           fsr1h	equ	0xFE2
 12014                           fsr1l	equ	0xFE1
 12015                           indf2	equ	0xFDF
 12016                           fsr2h	equ	0xFDA
 12017                           fsr2l	equ	0xFD9
 12018                           status	equ	0xFD8
 12019                           
 12020 ;; *************** function _rand *****************
 12021 ;; Defined at:
 12022 ;;		line 12 in file "/Applications/microchip/xc8/v1.44/sources/common/rand.c"
 12023 ;; Parameters:    Size  Location     Type
 12024 ;;		None
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;		None
 12027 ;; Return value:  Size  Location     Type
 12028 ;;                  2   12[COMRAM] int 
 12029 ;; Registers used:
 12030 ;;		wreg, status,2, status,0, cstack
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12036 ;;      Params:         2       0       0       0       0       0       0
 12037 ;;      Locals:         0       0       0       0       0       0       0
 12038 ;;      Temps:          0       0       0       0       0       0       0
 12039 ;;      Totals:         2       0       0       0       0       0       0
 12040 ;;Total ram usage:        2 bytes
 12041 ;; Hardware stack levels used:    1
 12042 ;; Hardware stack levels required when called:    1
 12043 ;; This function calls:
 12044 ;;		___lmul
 12045 ;; This function is called by:
 12046 ;;		_scramble
 12047 ;; This function uses a non-reentrant model
 12048 ;;
 12049                           
 12050                           	psect	text39
 12051  0039DE                     __ptext39:
 12052                           	opt stack 0
 12053  0039DE                     _rand:
 12054                           	opt stack 24
 12055                           
 12056                           ;incstack = 0
 12057  0039DE  C032  F001         	movff	_randx,___lmul@multiplier
 12058  0039E2  C033  F002         	movff	_randx+1,___lmul@multiplier+1
 12059  0039E6  C034  F003         	movff	_randx+2,___lmul@multiplier+2
 12060  0039EA  C035  F004         	movff	_randx+3,___lmul@multiplier+3
 12061  0039EE  0E6D               	movlw	109
 12062  0039F0  6E05               	movwf	___lmul@multiplicand,c
 12063  0039F2  0E4E               	movlw	78
 12064  0039F4  6E06               	movwf	___lmul@multiplicand+1,c
 12065  0039F6  0EC6               	movlw	198
 12066  0039F8  6E07               	movwf	___lmul@multiplicand+2,c
 12067  0039FA  0E41               	movlw	65
 12068  0039FC  6E08               	movwf	___lmul@multiplicand+3,c
 12069  0039FE  ECC4  F01C         	call	___lmul	;wreg free
 12070  003A02  C001  F032         	movff	?___lmul,_randx
 12071  003A06  C002  F033         	movff	?___lmul+1,_randx+1
 12072  003A0A  C003  F034         	movff	?___lmul+2,_randx+2
 12073  003A0E  C004  F035         	movff	?___lmul+3,_randx+3
 12074  003A12  0E39               	movlw	57
 12075  003A14  2632               	addwf	_randx,f,c
 12076  003A16  0E30               	movlw	48
 12077  003A18  2233               	addwfc	_randx+1,f,c
 12078  003A1A  0E00               	movlw	0
 12079  003A1C  2234               	addwfc	_randx+2,f,c
 12080  003A1E  0E00               	movlw	0
 12081  003A20  2235               	addwfc	_randx+3,f,c
 12082  003A22  0EFF               	movlw	255
 12083  003A24  1434               	andwf	_randx+2,w,c
 12084  003A26  6E0D               	movwf	?_rand,c
 12085  003A28  0E7F               	movlw	127
 12086  003A2A  1435               	andwf	_randx+3,w,c
 12087  003A2C  6E0E               	movwf	?_rand+1,c
 12088  003A2E  0012               	return	
 12089  003A30                     __end_of_rand:
 12090                           	opt stack 0
 12091                           pclatu	equ	0xFFB
 12092                           pclath	equ	0xFFA
 12093                           tblptru	equ	0xFF8
 12094                           tblptrh	equ	0xFF7
 12095                           tblptrl	equ	0xFF6
 12096                           tablat	equ	0xFF5
 12097                           prodh	equ	0xFF4
 12098                           prodl	equ	0xFF3
 12099                           intcon	equ	0xFF2
 12100                           postinc0	equ	0xFEE
 12101                           fsr0h	equ	0xFEA
 12102                           fsr0l	equ	0xFE9
 12103                           wreg	equ	0xFE8
 12104                           indf1	equ	0xFE7
 12105                           postdec1	equ	0xFE5
 12106                           fsr1h	equ	0xFE2
 12107                           fsr1l	equ	0xFE1
 12108                           indf2	equ	0xFDF
 12109                           fsr2h	equ	0xFDA
 12110                           fsr2l	equ	0xFD9
 12111                           status	equ	0xFD8
 12112                           
 12113 ;; *************** function ___lmul *****************
 12114 ;; Defined at:
 12115 ;;		line 15 in file "/Applications/microchip/xc8/v1.44/sources/common/Umul32.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;  multiplier      4    0[COMRAM] unsigned long 
 12118 ;;  multiplicand    4    4[COMRAM] unsigned long 
 12119 ;; Auto vars:     Size  Location     Type
 12120 ;;  product         4    8[COMRAM] unsigned long 
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  4    0[COMRAM] unsigned long 
 12123 ;; Registers used:
 12124 ;;		wreg, status,2, status,0
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12130 ;;      Params:         8       0       0       0       0       0       0
 12131 ;;      Locals:         4       0       0       0       0       0       0
 12132 ;;      Temps:          0       0       0       0       0       0       0
 12133 ;;      Totals:        12       0       0       0       0       0       0
 12134 ;;Total ram usage:       12 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; This function calls:
 12137 ;;		Nothing
 12138 ;; This function is called by:
 12139 ;;		_rand
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text40
 12144  003988                     __ptext40:
 12145                           	opt stack 0
 12146  003988                     ___lmul:
 12147                           	opt stack 24
 12148                           
 12149                           ;incstack = 0
 12150  003988  0E00               	movlw	0
 12151  00398A  6E09               	movwf	___lmul@product,c
 12152  00398C  0E00               	movlw	0
 12153  00398E  6E0A               	movwf	___lmul@product+1,c
 12154  003990  0E00               	movlw	0
 12155  003992  6E0B               	movwf	___lmul@product+2,c
 12156  003994  0E00               	movlw	0
 12157  003996  6E0C               	movwf	___lmul@product+3,c
 12158  003998  A001               	btfss	___lmul@multiplier,0,c
 12159  00399A  D008               	goto	i2l431
 12160  00399C  5005               	movf	___lmul@multiplicand,w,c
 12161  00399E  2609               	addwf	___lmul@product,f,c
 12162  0039A0  5006               	movf	___lmul@multiplicand+1,w,c
 12163  0039A2  220A               	addwfc	___lmul@product+1,f,c
 12164  0039A4  5007               	movf	___lmul@multiplicand+2,w,c
 12165  0039A6  220B               	addwfc	___lmul@product+2,f,c
 12166  0039A8  5008               	movf	___lmul@multiplicand+3,w,c
 12167  0039AA  220C               	addwfc	___lmul@product+3,f,c
 12168  0039AC                     i2l431:
 12169  0039AC  90D8               	bcf	status,0,c
 12170  0039AE  3605               	rlcf	___lmul@multiplicand,f,c
 12171  0039B0  3606               	rlcf	___lmul@multiplicand+1,f,c
 12172  0039B2  3607               	rlcf	___lmul@multiplicand+2,f,c
 12173  0039B4  3608               	rlcf	___lmul@multiplicand+3,f,c
 12174  0039B6  90D8               	bcf	status,0,c
 12175  0039B8  3204               	rrcf	___lmul@multiplier+3,f,c
 12176  0039BA  3203               	rrcf	___lmul@multiplier+2,f,c
 12177  0039BC  3202               	rrcf	___lmul@multiplier+1,f,c
 12178  0039BE  3201               	rrcf	___lmul@multiplier,f,c
 12179  0039C0  5001               	movf	___lmul@multiplier,w,c
 12180  0039C2  1002               	iorwf	___lmul@multiplier+1,w,c
 12181  0039C4  1003               	iorwf	___lmul@multiplier+2,w,c
 12182  0039C6  1004               	iorwf	___lmul@multiplier+3,w,c
 12183  0039C8  A4D8               	btfss	status,2,c
 12184  0039CA  D7E6               	goto	i2l430
 12185  0039CC  C009  F001         	movff	___lmul@product,?___lmul
 12186  0039D0  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 12187  0039D4  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 12188  0039D8  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 12189  0039DC  0012               	return		;funcret
 12190  0039DE                     __end_of___lmul:
 12191                           	opt stack 0
 12192                           pclatu	equ	0xFFB
 12193                           pclath	equ	0xFFA
 12194                           tblptru	equ	0xFF8
 12195                           tblptrh	equ	0xFF7
 12196                           tblptrl	equ	0xFF6
 12197                           tablat	equ	0xFF5
 12198                           prodh	equ	0xFF4
 12199                           prodl	equ	0xFF3
 12200                           intcon	equ	0xFF2
 12201                           postinc0	equ	0xFEE
 12202                           fsr0h	equ	0xFEA
 12203                           fsr0l	equ	0xFE9
 12204                           wreg	equ	0xFE8
 12205                           indf1	equ	0xFE7
 12206                           postdec1	equ	0xFE5
 12207                           fsr1h	equ	0xFE2
 12208                           fsr1l	equ	0xFE1
 12209                           indf2	equ	0xFDF
 12210                           fsr2h	equ	0xFDA
 12211                           fsr2l	equ	0xFD9
 12212                           status	equ	0xFD8
 12213                           
 12214 ;; *************** function ___awmod *****************
 12215 ;; Defined at:
 12216 ;;		line 8 in file "/Applications/microchip/xc8/v1.44/sources/common/awmod.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;  dividend        2   14[COMRAM] int 
 12219 ;;  divisor         2   16[COMRAM] int 
 12220 ;; Auto vars:     Size  Location     Type
 12221 ;;  sign            1   19[COMRAM] unsigned char 
 12222 ;;  counter         1   18[COMRAM] unsigned char 
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  2   14[COMRAM] int 
 12225 ;; Registers used:
 12226 ;;		wreg, status,2, status,0
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12232 ;;      Params:         4       0       0       0       0       0       0
 12233 ;;      Locals:         2       0       0       0       0       0       0
 12234 ;;      Temps:          0       0       0       0       0       0       0
 12235 ;;      Totals:         6       0       0       0       0       0       0
 12236 ;;Total ram usage:        6 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; This function calls:
 12239 ;;		Nothing
 12240 ;; This function is called by:
 12241 ;;		_scramble
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           	psect	text41
 12246  003918                     __ptext41:
 12247                           	opt stack 0
 12248  003918                     ___awmod:
 12249                           	opt stack 25
 12250                           
 12251                           ;incstack = 0
 12252  003918  0E00               	movlw	0
 12253  00391A  6E14               	movwf	___awmod@sign,c
 12254  00391C  AE10               	btfss	___awmod@dividend+1,7,c
 12255  00391E  D006               	goto	i2l599
 12256  003920  6C0F               	negf	___awmod@dividend,c
 12257  003922  1E10               	comf	___awmod@dividend+1,f,c
 12258  003924  B0D8               	btfsc	status,0,c
 12259  003926  2A10               	incf	___awmod@dividend+1,f,c
 12260  003928  0E01               	movlw	1
 12261  00392A  6E14               	movwf	___awmod@sign,c
 12262  00392C                     i2l599:
 12263  00392C  AE12               	btfss	___awmod@divisor+1,7,c
 12264  00392E  D004               	goto	i2l600
 12265  003930  6C11               	negf	___awmod@divisor,c
 12266  003932  1E12               	comf	___awmod@divisor+1,f,c
 12267  003934  B0D8               	btfsc	status,0,c
 12268  003936  2A12               	incf	___awmod@divisor+1,f,c
 12269  003938                     i2l600:
 12270  003938  5011               	movf	___awmod@divisor,w,c
 12271  00393A  1012               	iorwf	___awmod@divisor+1,w,c
 12272  00393C  B4D8               	btfsc	status,2,c
 12273  00393E  D018               	goto	i2l607
 12274  003940  0E01               	movlw	1
 12275  003942  6E13               	movwf	___awmod@counter,c
 12276  003944  D004               	goto	i2l602
 12277  003946  90D8               	bcf	status,0,c
 12278  003948  3611               	rlcf	___awmod@divisor,f,c
 12279  00394A  3612               	rlcf	___awmod@divisor+1,f,c
 12280  00394C  2A13               	incf	___awmod@counter,f,c
 12281  00394E                     i2l602:
 12282  00394E  AE12               	btfss	___awmod@divisor+1,7,c
 12283  003950  D7FA               	goto	i2l603
 12284  003952                     i2u445_40:
 12285  003952  5011               	movf	___awmod@divisor,w,c
 12286  003954  5C0F               	subwf	___awmod@dividend,w,c
 12287  003956  5012               	movf	___awmod@divisor+1,w,c
 12288  003958  5810               	subwfb	___awmod@dividend+1,w,c
 12289  00395A  A0D8               	btfss	status,0,c
 12290  00395C  D004               	goto	i2l606
 12291  00395E  5011               	movf	___awmod@divisor,w,c
 12292  003960  5E0F               	subwf	___awmod@dividend,f,c
 12293  003962  5012               	movf	___awmod@divisor+1,w,c
 12294  003964  5A10               	subwfb	___awmod@dividend+1,f,c
 12295  003966                     i2l606:
 12296  003966  90D8               	bcf	status,0,c
 12297  003968  3212               	rrcf	___awmod@divisor+1,f,c
 12298  00396A  3211               	rrcf	___awmod@divisor,f,c
 12299  00396C  2E13               	decfsz	___awmod@counter,f,c
 12300  00396E  D7F1               	goto	i2u445_40
 12301  003970                     i2l607:
 12302  003970  5014               	movf	___awmod@sign,w,c
 12303  003972  B4D8               	btfsc	status,2,c
 12304  003974  D004               	goto	i2l608
 12305  003976  6C0F               	negf	___awmod@dividend,c
 12306  003978  1E10               	comf	___awmod@dividend+1,f,c
 12307  00397A  B0D8               	btfsc	status,0,c
 12308  00397C  2A10               	incf	___awmod@dividend+1,f,c
 12309  00397E                     i2l608:
 12310  00397E  C00F  F00F         	movff	___awmod@dividend,?___awmod
 12311  003982  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
 12312  003986  0012               	return	
 12313  003988                     __end_of___awmod:
 12314                           	opt stack 0
 12315                           pclatu	equ	0xFFB
 12316                           pclath	equ	0xFFA
 12317                           tblptru	equ	0xFF8
 12318                           tblptrh	equ	0xFF7
 12319                           tblptrl	equ	0xFF6
 12320                           tablat	equ	0xFF5
 12321                           prodh	equ	0xFF4
 12322                           prodl	equ	0xFF3
 12323                           intcon	equ	0xFF2
 12324                           postinc0	equ	0xFEE
 12325                           fsr0h	equ	0xFEA
 12326                           fsr0l	equ	0xFE9
 12327                           wreg	equ	0xFE8
 12328                           indf1	equ	0xFE7
 12329                           postdec1	equ	0xFE5
 12330                           fsr1h	equ	0xFE2
 12331                           fsr1l	equ	0xFE1
 12332                           indf2	equ	0xFDF
 12333                           fsr2h	equ	0xFDA
 12334                           fsr2l	equ	0xFD9
 12335                           status	equ	0xFD8
 12336                           pclatu	equ	0xFFB
 12337                           pclath	equ	0xFFA
 12338                           tblptru	equ	0xFF8
 12339                           tblptrh	equ	0xFF7
 12340                           tblptrl	equ	0xFF6
 12341                           tablat	equ	0xFF5
 12342                           prodh	equ	0xFF4
 12343                           prodl	equ	0xFF3
 12344                           intcon	equ	0xFF2
 12345                           postinc0	equ	0xFEE
 12346                           fsr0h	equ	0xFEA
 12347                           fsr0l	equ	0xFE9
 12348                           wreg	equ	0xFE8
 12349                           indf1	equ	0xFE7
 12350                           postdec1	equ	0xFE5
 12351                           fsr1h	equ	0xFE2
 12352                           fsr1l	equ	0xFE1
 12353                           indf2	equ	0xFDF
 12354                           fsr2h	equ	0xFDA
 12355                           fsr2l	equ	0xFD9
 12356                           status	equ	0xFD8
 12357                           
 12358                           	psect	rparam
 12359  0000                     pclatu	equ	0xFFB
 12360                           pclath	equ	0xFFA
 12361                           tblptru	equ	0xFF8
 12362                           tblptrh	equ	0xFF7
 12363                           tblptrl	equ	0xFF6
 12364                           tablat	equ	0xFF5
 12365                           prodh	equ	0xFF4
 12366                           prodl	equ	0xFF3
 12367                           intcon	equ	0xFF2
 12368                           postinc0	equ	0xFEE
 12369                           fsr0h	equ	0xFEA
 12370                           fsr0l	equ	0xFE9
 12371                           wreg	equ	0xFE8
 12372                           indf1	equ	0xFE7
 12373                           postdec1	equ	0xFE5
 12374                           fsr1h	equ	0xFE2
 12375                           fsr1l	equ	0xFE1
 12376                           indf2	equ	0xFDF
 12377                           fsr2h	equ	0xFDA
 12378                           fsr2l	equ	0xFD9
 12379                           status	equ	0xFD8
 12380                           
 12381                           	psect	temp
 12382  000053                     btemp:
 12383                           	opt stack 0
 12384  000053                     	ds	1
 12385  0000                     int$flags	set	btemp
 12386  0000                     wtemp6	set	btemp+1
 12387                           pclatu	equ	0xFFB
 12388                           pclath	equ	0xFFA
 12389                           tblptru	equ	0xFF8
 12390                           tblptrh	equ	0xFF7
 12391                           tblptrl	equ	0xFF6
 12392                           tablat	equ	0xFF5
 12393                           prodh	equ	0xFF4
 12394                           prodl	equ	0xFF3
 12395                           intcon	equ	0xFF2
 12396                           postinc0	equ	0xFEE
 12397                           fsr0h	equ	0xFEA
 12398                           fsr0l	equ	0xFE9
 12399                           wreg	equ	0xFE8
 12400                           indf1	equ	0xFE7
 12401                           postdec1	equ	0xFE5
 12402                           fsr1h	equ	0xFE2
 12403                           fsr1l	equ	0xFE1
 12404                           indf2	equ	0xFDF
 12405                           fsr2h	equ	0xFDA
 12406                           fsr2l	equ	0xFD9
 12407                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    24
    Data        32
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     49      82
    BANK0           128     12      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_check
    _main->_led
    _restore->_led
    _fixed->_led
    _Ui->_led
    _U->_led
    _Ri->_led
    _R->_led
    _Li->_led
    _L->_led
    _Fi->_led
    _F->_led
    _Di->_led
    _D->_led
    _Bi->_led
    _B->_led
    _led->_spiWrite

Critical Paths under _scramble in COMRAM

    _scramble->___awmod
    i2_Ui->i2_led
    i2_U->i2_led
    i2_Ri->i2_led
    i2_R->i2_led
    i2_Li->i2_led
    i2_L->i2_led
    i2_Fi->i2_led
    i2_F->i2_led
    i2_Di->i2_led
    i2_D->i2_led
    i2_Bi->i2_led
    i2_B->i2_led
    i2_led->i2_spiWrite
    _rand->___lmul
    ___awmod->_rand

Critical Paths under _main in BANK0

    _main->_B
    _main->_Bi
    _main->_D
    _main->_Di
    _main->_F
    _main->_Fi
    _main->_L
    _main->_Li
    _main->_R
    _main->_Ri
    _main->_U
    _main->_Ui
    _main->_fixed
    _main->_restore
    _restore->_led
    _fixed->_led
    _Ui->_led
    _U->_led
    _Ri->_led
    _R->_led
    _Li->_led
    _L->_led
    _Fi->_led
    _F->_led
    _Di->_led
    _D->_led
    _Bi->_led
    _B->_led

Critical Paths under _scramble in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _scramble in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _scramble in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _scramble in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _scramble in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _scramble in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   86283
                                              8 BANK0      4     4      0
                                  _B
                                 _Bi
                                  _D
                                 _Di
                                  _F
                                 _Fi
                                  _L
                                 _Li
                                  _R
                                 _Ri
                                  _U
                                 _Ui
                              _check
                              _fixed
                                _led
                            _restore
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                             44 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _restore                                              2     2      0    5752
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _fixed                                                2     2      0    5620
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _check                                                5     3      2     440
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Ui                                                   2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _U                                                    2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _Ri                                                   2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _R                                                    2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _Li                                                   2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _L                                                    2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _Fi                                                   2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _F                                                    2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _Di                                                   2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _D                                                    2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _Bi                                                   2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (1) _B                                                    2     2      0    5708
                                              6 BANK0      2     2      0
                                _led
 ---------------------------------------------------------------------------------
 (2) _led                                                 10    10      0    5442
                                             45 COMRAM     4     4      0
                                              0 BANK0      6     6      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _scramble                                            24    24      0   69481
                                             20 COMRAM    24    24      0
                            ___awmod
                               _rand
                              _srand
                                i2_B
                               i2_Bi
                                i2_D
                               i2_Di
                                i2_F
                               i2_Fi
                                i2_L
                               i2_Li
                                i2_R
                               i2_Ri
                                i2_U
                               i2_Ui
 ---------------------------------------------------------------------------------
 (6) i2_Ui                                                 2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_U                                                  2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_Ri                                                 2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_R                                                  2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_Li                                                 2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_L                                                  2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_Fi                                                 2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_F                                                  2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_Di                                                 2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_D                                                  2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_Bi                                                 2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (6) i2_B                                                  2     2      0    5708
                                             11 COMRAM     2     2      0
                              i2_led
 ---------------------------------------------------------------------------------
 (7) i2_led                                               10    10      0    5442
                                              1 COMRAM    10    10      0
                          i2_spiRead
                         i2_spiWrite
 ---------------------------------------------------------------------------------
 (8) i2_spiWrite                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_spiRead                                            0     0      0       0
                   i2_spiReceiveWait
 ---------------------------------------------------------------------------------
 (9) i2_spiReceiveWait                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _srand                                                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2     370
                                             12 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                             14 COMRAM     6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _B
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _Bi
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _D
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _Di
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _F
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _Fi
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _L
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _Li
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _R
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _Ri
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _U
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _Ui
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _check
   _fixed
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _led
     _spiRead
       _spiReceiveWait
     _spiWrite
   _restore
     _led
       _spiRead
         _spiReceiveWait
       _spiWrite
   _spiInit

 _scramble (ROOT)
   ___awmod
     _rand (ARG)
       ___lmul
   _rand
     ___lmul
   _srand
   i2_B
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_Bi
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_D
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_Di
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_F
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_Fi
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_L
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_Li
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_R
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_Ri
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_U
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite
   i2_Ui
     i2_led
       i2_spiRead
         i2_spiReceiveWait
       i2_spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      C       C       5        9.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     31      52       1       65.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      15        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue Jan  9 23:57:17 2018

                           _B 324C                             _D 30E4                             _F 2F7C  
                           _L 29D0                             _R 2860                             _U 2E14  
                          B@i 0086                            D@i 0086                            ?_B 0001  
                          ?_D 0001                            ?_F 0001                            F@i 0086  
                          ?_L 0001                            ?_R 0001                            ?_U 0001  
                          L@i 0086                   _SSPSTATbits 000FC7                            R@i 0086  
                          U@i 0086                            l82 2D7A                            l92 304A  
                          l77 2E2E                            l87 30FE                            l97 29EA  
                          _Bi 3198                            _Di 3030                            _Fi 2EC8  
                          _Li 2918                            _Ri 27A8                            _Ui 2D60  
                          _re 0052                           ??_B 0032                           ??_D 0032  
                         ??_F 0032                           ??_L 0032                           ??_R 0032  
                         ??_U 0032                           ?_Bi 0001                           ?_Di 0001  
                         ?_Fi 0001                           ?_Li 0001                           ?_Ri 0001  
                         ?_Ui 0001                           Bi@i 0086                           Di@i 0086  
                         l102 2932                           l200 0C7C                           l112 27C2  
                         l210 0D90                           l202 0CE6                           l122 2EE2  
                         l203 0CD4                           l107 287A                           l220 0EB2  
                         l212 0DAC                           l140 0684                           l132 31B2  
                         l221 0EA0                           l205 0D3E                           l117 2F96  
                         Fi@i 0086                           l230 0F74                           l214 0E02  
                         l206 0D2C                           l142 06DA                           l223 0F0A  
                         l215 0DF0                           l151 07E2                           l143 06C8  
                         l127 3266                           l232 0FCA                           l224 0EF8  
                         l160 08A2                           l152 07D0                           l400 3A98  
                         l241 10D2                           l233 0FB8                           l209 0F34  
                         l217 0E5A                           l161 0890                           l137 080C  
                         l145 0732                           l250 11CE                           l242 10C0  
                         l218 0E48                           l170 0998                           l146 0720  
                         l138 0668                           l322 26E4                           l251 1180  
                         l227 10FC                           l235 1022                           l155 09D4  
                         l163 08FA                           l236 1010                           l228 0F58  
                         l164 08E8                           l156 0830                           l148 078A  
                         l332 24AC                           l324 27A6                           l261 122C  
                         l253 1198                           l173 0BA0                           l181 0AC2  
                         l149 0778                           l246 1120                           l238 107A  
                         l182 0AB0                           l174 09F8                           l166 0952  
                         l158 084C                           l334 24DC                           l350 2602  
                         l271 12DA                           l263 1246                           l255 11B2  
                         l239 1068                           l191 0D6C                           l167 0940  
                         l327 38AA                           l351 261E                           l248 113C  
                         l192 0BC4                           l184 0B1A                           l176 0A14  
                         l360 2646                           l281 1388                           l273 12F4  
                         l265 1260                           l257 11CC                           l185 0B08  
                         l169 09AA                           l345 25A4                           l290 14B2  
                         l282 141E                           l274 138A                           l266 12F6  
                         l258 1262                           l194 0BE0                           l178 0A6A  
                         l354 26BE                           l370 2678                           l362 2650  
                         l291 1464                           l283 13D0                           l275 133C  
                         l267 12A8                           l259 1214                           l187 0B72  
                         l179 0A58                           l355 2628                           l196 0C36  
                         l188 0B60                           l380 26B2                           l372 2682  
                         l364 265A                           l356 2632                           l293 147C  
                         l285 13E8                           l277 1354                           l269 12C0  
                         l197 0C24                           l374 268C                           l366 2664  
                         l358 263C                           l295 1496                           l287 1402  
                         l279 136E                           l199 0C8E                           l376 2696  
                         l368 266E                           l297 14B0                           l289 141C  
                         l298 14DA                           l378 26A0                           l399 3A90  
                         Li@i 0086                           _RA0 007C00                           _RA1 007C01  
                         _RA2 007C02                           _RA3 007C03                           _RA4 007C04  
                         _RA5 007C05                           i2_B 37DE                           i2_D 367A  
                         i2_F 3516                           i2_L 2CAA                           Ri@i 0086  
                         i2_R 2B3E                           i2_U 33B2                           Ui@i 0086  
                         _led 061A                  ___awmod@sign 0014                           wreg 000FE8  
        _native_surface_three 060D                          ??_Bi 0032                          ??_Di 0032  
                        ??_Fi 0032                          ??_Li 0032                          ??_Ri 0032  
                        ??_Ui 0032                  __CFG_LVP$OFF 000000                          ?i2_B 0001  
                        ?i2_D 0001                          ?i2_F 0001                          ?i2_L 0001  
                        ?i2_R 0001                          ?i2_U 0001                  __CFG_WDT$OFF 000000  
                        l5002 138A                          l5100 30EE                          l5110 3190  
                        l5032 141E                          l4410 078A                          l5114 303A  
                        l5212 3256                          l5124 30DC                          l5062 14B2  
                        l4430 07F2                          l5222 32F8                          l5142 2922  
                        ?_led 0001                          l4512 09AA                          l5208 2F74  
                        l5128 29DA                          l5152 29C8                          l5072 2E1E  
                        l5240 26D4                          l5066 14C2                          l4602 0B82  
                        l4426 07E2                          l5226 31A2                          l5138 2A80  
                        l5170 27B2                          l5082 2EC0                          l5322 25B2  
                        l4516 09BA                          l5236 3244                          l5156 286A  
                        l5180 2858                          l4550 0A6A                          l5166 2910  
                        l5086 2D6A                          l5254 389A                          l4480 08FA  
                        l4464 08A2                          l5184 2F86                          l5096 2E0C  
                        l5264 3910                          l4394 0732                          l4378 06DA  
                        l5194 3028                          l4812 0FCA                          l4742 0E5A  
                        l4726 0E02                          l4670 0CE6                          l4654 0C8E  
                        l4638 0C36                          l4582 0B1A                          l4566 0AC2  
                        l5198 2ED2                          l4912 11CE                          l4496 0952  
                        l4690 0D4E                          l4860 10D2                          l4844 107A  
                        l4828 1022                          l4942 1262                          l4774 0F0A  
                        l4758 0EB2                          l4686 0D3E                          l4598 0B72  
                        l4864 10E2                          l4778 0F1A                          l4972 12F6  
                        i2B@i 000C                          i2D@i 000C                          i2F@i 000C  
                        i2L@i 000C                          u5030 07F2                          u5200 0A12  
                        u5040 080A                          i2R@i 000C                          u5300 0B9E  
                        u5060 082E                          u6100 3190                          u6030 14C2  
                        u5070 084A                          u5320 0BC2                          u5160 09BA  
                        u6120 30DC                          u6200 2858                          u5330 0BDE  
                        u5170 09D2                          u5420 0D4E                          u6220 3028  
                        u6140 2A80                          u6060 2EC0                          i2U@i 000C  
                        u5430 0D6A                          u5190 09F6                          u6240 2F74  
                        u6160 29C8                          u6080 2E0C                          u6400 25B2  
                        u6320 3910                          u5450 0D8E                          u5290 0B82  
                        u6330 24AA                          u5460 0DAA                          u6260 32F8  
                        u6180 2910                          u6340 24D2                          u5710 111E  
                        u5550 0F1A                          u5720 113A                          u5560 0F32  
                        u6280 3244                          u4930 0666                          u5580 0F56  
                        u4940 0682                          u5590 0F72                          u6607 09BC  
                        u5680 10E2                          u6617 0B84                          i2l82 3318  
                        u5690 10FA                          u6627 0D50                          i2l92 35E0  
                        i2l77 33CA                          u6637 0F1C                          i2l87 3692  
                        u6647 10E4                          i2l97 2CC2                          u6657 14C4  
                        u6597 07F4                          i2_Bi 372C                          i2_Di 35C8  
                        i2_Fi 3464                          _TMR0 000FD6                          i2_Li 2BF4  
                        i2_Ri 2A88                          i2_Ui 3300                          _main 25BC  
                        _rand 39DE                          led@i 0082                          _temp 0036  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0053  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
                 _surface_one 004E                   _surface_six 003A                   _surface_two 004A  
                  i2led@count 000A                  ___param_bank 000000                    i2_spiWrite 3ABE  
                       ??i2_B 000C                         ??i2_D 000C                         ??i2_F 000C  
                       ??i2_L 000C                         ??i2_R 000C                         ??i2_U 000C  
                       ??_led 002E                         ?i2_Bi 0001                         ?i2_Di 0001  
                       ?i2_Fi 0001                         ?i2_Li 0001                         ?i2_Ri 0001  
                       ?i2_Ui 0001                scramble@random 0029                         ?_main 0001  
                       ?_rand 000D               __end_of___awmod 3988                         i2Bi@i 000C  
                       i2Di@i 000C                         i2l102 2C0C                         i2l200 1B00  
                       i2l112 2AA0                         i2l210 1C06                         i2l202 1B64  
                       i2l122 347C                         i2l203 1B54                         i2l107 2B56  
                       i2l220 1D1E                         i2l212 1C22                         i2l140 1542  
                       i2l132 3744                         i2l221 1D0E                         i2l205 1BB8  
                       i2l117 352E                         i2Fi@i 000C                         i2l230 1DD8  
                       i2l214 1C76                         i2l206 1BA8                         i2l142 1596  
                       i2l310 239C                         i2l223 1D72                         i2l215 1C66  
                       i2l151 1692                         i2l143 1586                         i2l127 37F6  
                       i2l311 23A2                         i2l303 2364                         i2l232 1E2C  
                       i2l224 1D62                         i2l160 174C                         i2l152 1682  
                       i2l312 23A8                         i2l304 2440                         i2l241 1F28  
                       i2l233 1E1C                         i2l209 1D98                         i2l217 1CCA  
                       i2l161 173C                         i2l137 16B8                         i2l145 15EA  
                       i2l305 23D2                         i2l313 23AE                         i2l250 201A  
                       i2l242 1F18                         i2l218 1CBA                         i2l170 1838  
                       i2l146 15DA                         i2l138 1526                         i2l314 23B4  
                       i2l306 238A                         i2l251 1FD2                         i2l227 1F4E  
                       i2l235 1E80                         i2l155 186E                         i2l163 17A0  
                       i2l307 242C                         i2l315 23BA                         i2l236 1E70  
                       i2l228 1DBC                         i2l164 1790                         i2l156 16DC  
                       i2l148 163E                         i2l316 23C0                         i2l308 2390  
                       i2l261 2074                         i2l253 1FE8                         i2l173 1A28  
                       i2l181 1956                         i2l149 162E                         i2l317 23C6  
                       i2l309 2396                         i2l430 3998                         i2l246 1F72  
                       i2l238 1ED4                         i2l182 1946                         i2l174 1892  
                       i2l166 17F4                         i2l158 16F8                         i2l318 23CC  
                       i2l431 39AC                         i2l271 2118                         i2l263 208C  
                       i2l255 2000                         i2l239 1EC4                         i2l191 1BE2  
                       i2l167 17E4                         i2l600 3938                         i2l248 1F8E  
                       i2l192 1A4C                         i2l184 19AA                         i2l176 18AE  
                       i2l281 21BC                         i2l273 2130                         i2l265 20A4  
                       i2l257 2018                         i2l185 199A                         i2l169 1848  
                       i2l602 394E                         i2l290 22D6                         i2l282 224A  
                       i2l274 21BE                         i2l266 2132                         i2l258 20A6  
                       i2l194 1A68                         i2l178 1902                         i2l603 3946  
                       i2l291 228E                         i2l283 2202                         i2l275 2176  
                       i2l267 20EA                         i2l259 205E                         i2l187 19FE  
                       i2l179 18F2                         i2l196 1ABC                         i2l188 19EE  
                       i2l293 22A4                         i2l285 2218                         i2l277 218C  
                       i2l269 2100                         i2l197 1AAC                         i2l606 3966  
                       i2l607 3970                         i2l295 22BC                         i2l287 2230  
                       i2l279 21A4                         i2l199 1B10                         i2l608 397E  
                       i2l297 22D4                         i2l289 2248                         i2l298 22FA  
                       i2l599 392C                         i2Li@i 000C                         i2Ri@i 000C  
                       i2Ui@i 000C                         i2_led 14DC           ___lmul@multiplicand 0005  
                       _check 2490                         _fixed 3890                         _randx 0032  
                       _srand 3AA0                 i2spiWrite@dat 0001                         pclath 000FFA  
             __end_of_spiInit 3AA0               __end_of_spiRead 3ABE                         tablat 000FF5  
             __end_of_restore 27A8                  _surface_five 003E                         status 000FD8  
                _surface_four 0042                         wtemp6 0054                  __end_ofi2_Bi 37DE  
                __end_ofi2_Di 367A                  __end_ofi2_Fi 3516                  __end_ofi2_Li 2CAA  
                __end_ofi2_Ri 2B3E                  __end_ofi2_Ui 33B2                __CFG_MCLRE$OFF 000000  
             __initialization 3A30                  __end_of_main 26CA                  __end_of_rand 3A30  
                 i2led@rotate 0006                        ??i2_Bi 000C                        ??i2_Di 000C  
                      ??i2_Fi 000C                        ??i2_Li 000C                        ??i2_Ri 000C  
                      ??i2_Ui 000C            __size_ofi2_spiRead 0008                        ??_main 0032  
                      ??_rand 000F                 __activetblptr 000002                        ?i2_led 0001  
                      ?_check 002D                        ?_fixed 0001                        ?_srand 0001  
                      i2l4102 2CB2                        i2l4200 3734                        i2l4112 2D58  
                      i2l3322 174C                        i2l4210 37D6                        i2l4130 2B46  
                      i2l3252 15EA                        i2l3236 1596                        i2l4116 2BFC  
                      i2l4140 2BEC                        i2l4060 3308                        i2l4126 2CA2  
                      i2l4046 33BA                        i2l4070 33AA                        i2l3600 1CCA  
                      i2l3512 1B10                        i2l3440 19AA                        i2l3424 1956  
                      i2l3408 1902                        i2l4144 2A90                        i2l4056 345C  
                      i2l3370 1848                        i2l3354 17F4                        i2l3338 17A0  
                      i2l4074 3682                        i2l4154 2B36                        i2l3460 1A0C  
                      i2l3284 1692                        i2l3268 163E                        i2l4084 3724  
                      i2l4172 346C     __size_ofi2_spiReceiveWait 0006                        i2l3702 1ED4  
                      i2l3374 1856                        i2l4158 351E                        i2l4182 350E  
                      i2l3800 20A6                        i2l3632 1D72                        i2l3616 1D1E  
                      i2l3544 1BB8                        i2l3528 1B64                        i2l3456 19FE  
                      i2l3288 16A0                        i2l4088 35D0                        i2l4168 35C0  
                      i2l3722 1F36                        i2l4186 37E6                        i2l4098 3672  
                      i2l3636 1D80                        i2l3548 1BC6                        i2l4196 3888  
                      i2l3830 2132                        i2l3718 1F28                        i2l3670 1E2C  
                      i2l3920 22D6                        i2l3584 1C76                        i2l3496 1ABC  
                      i2l3770 201A                        i2l3860 21BE                        i2l3924 22E4  
                      i2l3686 1E80                        i2l3890 224A                        _TRISC3 007CA3  
                      _TRISC5 007CA5                        _SSPBUF 000FC9                        i2led@i 0008  
                      ___lmul 3988                   ?i2_spiWrite 0001                     ??___awmod 0013  
                      check@i 0030               ___awmod@divisor 0011                        led@num 0081  
             ___awmod@counter 0013                        fixed@i 0086              __end_of_scramble 2490  
                __pdataCOMRAM 0032                  __mediumconst 0000              __end_of_spiWrite 3AB6  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                   ??_spiInit 0030                     ??_spiRead 002D                        srand@x 0001  
                   ??_restore 0032                 _surface_three 0046                    __accesstop 0080  
     __end_of__initialization 3A52               __CFG_PBADEN$OFF 000000             __end_ofi2_spiRead 3ACE  
          _native_surface_one 0615            _native_surface_six 0601            _native_surface_two 0611  
               ___rparam_used 000001                 __end_ofi2_led 22FC                __pcstackCOMRAM 0001  
               __end_of_check 25BC                 __end_of_fixed 3918                 __end_of_srand 3AAE  
                  __end_of_Bi 324C                    __end_of_Di 30E4                    __end_of_Fi 2F7C  
                  __end_of_Li 29D0                    __end_of_Ri 2860                    __end_of_Ui 2E14  
                     ??i2_led 0002                       ??_check 002F                       ??_fixed 0032  
                     ??_srand 0003           __size_ofi2_spiWrite 0008                       ?___lmul 0001  
     __size_of_spiReceiveWait 0006                ___lmul@product 0009                    __size_of_B 00B4  
                  __size_of_D 00B4                    __size_of_F 00B4                    __size_of_L 00B8  
                  __size_of_R 00B8                    __size_of_U 00B4                       _SSPCON1 000FC6  
                     _SSPSTAT 000FC7              i2_spiReceiveWait 3AD4                       __Hparam 0000  
                   ?_scramble 0001                       __Lparam 0000                     ?_spiWrite 0001  
             __size_of___lmul 0056                       ___awmod 3918                  __psmallconst 0600  
                     __pcinit 3A30                       __ramtop 0600                       __ptext0 25BC  
                     __ptext1 3A80                       __ptext2 26CA                       __ptext3 3890  
                     __ptext4 2490                       __ptext5 2D60                       __ptext6 2E14  
                     __ptext7 27A8                       __ptext8 2860                       __ptext9 2918  
                __size_ofi2_B 00B2                  __size_ofi2_D 00B2                  __size_ofi2_F 00B2  
                __size_ofi2_L 00B6                  __size_ofi2_R 00B6                  __size_ofi2_U 00B2  
                __size_of_led 0EC2              ___awmod@dividend 000F                       _spiInit 3A80  
                     _spiRead 3AB6                       _restore 26CA                __pintcode_body 22FC  
        end_of_initialization 3A52                 __Lmediumconst 0000                       int_func 22FC  
                  ??_scramble 0015                  ??i2_spiWrite 0001                    ??_spiWrite 002D  
                     postdec1 000FE5                       postinc0 000FEE                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _PORTDbits 000F83                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94                     _TRISDbits 000F95  
                 spiWrite@dat 002D            __end_ofi2_spiWrite 3AC6           _native_surface_five 0605  
         _native_surface_four 0609                    main@solved 008A                     i2_spiRead 3AC6  
              _spiReceiveWait 3ACE                __end_of___lmul 39DE                 __pidataCOMRAM 3A60  
         start_initialization 3A30                   __end_ofi2_B 3890                   __end_ofi2_D 372C  
                 __end_ofi2_F 35C8                   __end_ofi2_L 2D60                   __end_ofi2_R 2BF4  
                 __end_ofi2_U 3464                   __end_of_led 14DC              __CFG_OSC$INTIO67 000000  
                  ?i2_spiRead 0001        __end_of_spiReceiveWait 3AD4                      ??___lmul 0009  
    __end_ofi2_spiReceiveWait 3ADA                   __pbssCOMRAM 0052                 __pcstackBANK0 0080  
                   __end_of_B 3300                     __end_of_D 3198                     __end_of_F 3030  
                   __end_of_L 2A88                     __end_of_R 2918                     __end_of_U 2EC8  
             ?_spiReceiveWait 0001                     __pintcode 0008             __size_of_scramble 2488  
                    ?___awmod 000F             __size_of_spiWrite 0008                   __smallconst 0600  
              __size_ofi2_led 0E20                      ?_spiInit 002D                      ?_spiRead 0001  
                    ?_restore 0001                __size_of_check 012C                __size_of_fixed 0088  
              __size_of_srand 000E                   __size_of_Bi 00B4                   __size_of_Di 00B4  
                 __size_of_Fi 00B4                   __size_of_Li 00B8                   __size_of_Ri 00B8  
                 __size_of_Ui 00B4          spiInit@sTransmitEdge 002F            spiInit@sDataSample 002D  
                    i2u400_40 1F8C                      i2u321_40 1524                      i2u322_40 1540  
                    i2u331_40 16A0                      i2u332_40 16B6                      i2u334_40 16DA  
                    i2u431_40 22E4                      i2u335_40 16F6                      i2u360_40 1A4A  
                    i2u344_40 1856                      i2u361_40 1A66                      i2u345_40 186C  
                    i2u370_40 1BC6                      i2u371_40 1BE0                      i2u347_40 1890  
                    i2u451_40 33AA                      i2u348_40 18AC                      i2u445_40 3952  
                    i2u373_40 1C04                      i2u357_40 1A0C                      i2u453_40 3724  
                    i2u461_40 2BEC                      i2u374_40 1C20                      i2u358_40 1A26  
                    i2u383_40 1D80                      i2u471_40 37D6                      i2u455_40 3672  
                    i2u463_40 2B36                      i2u384_40 1D96                      i2u465_40 35C0  
                    i2u457_40 2D58                      i2u449_40 345C                      i2u473_40 2440  
                    i2u386_40 1DBA                   ??i2_spiRead 0001                      i2u387_40 1DD6  
                    i2u467_40 350E                      i2u459_40 2CA2                      i2u396_40 1F36  
                    i2u397_40 1F4C                      i2u469_40 3888                      i2u670_47 1D82  
                    i2u399_40 1F70                      i2u671_47 1F38                      i2u672_47 22E6  
                    i2u666_47 16A2                      i2u667_47 1858                      i2u668_47 1A0E  
                    i2u669_47 1BC8                      _RCONbits 000FD0                     led@rotate 0080  
                   main@pause 0088                      i2led@num 0007             ___lmul@multiplier 0001  
                   copy_data0 3A44                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___awmod 0070                      __ptext10 29D0                      __ptext11 2EC8  
                    __ptext20 3ACE                      __ptext12 2F7C                      __ptext13 3030  
                    __ptext30 35C8                      __ptext22 3300                      __ptext14 30E4  
                    __ptext31 367A                      __ptext23 33B2                      __ptext15 3198  
                    __ptext40 3988                      __ptext32 372C                      __ptext24 2A88  
                    __ptext16 324C                      __ptext41 3918                      __ptext33 37DE  
                    __ptext25 2B3E                      __ptext17 061A                      __ptext34 14DC  
                    __ptext26 2BF4                      __ptext18 3AAE                      __ptext35 3ABE  
                    __ptext27 2CAA                      __ptext19 3AB6                      __ptext36 3AC6  
                    __ptext28 3464                      __ptext37 3AD4                      __ptext29 3516  
                    __ptext38 3AA0                      __ptext39 39DE              __size_of_spiInit 0020  
            __size_of_spiRead 0008              __size_of_restore 00DE                     scramble@i 002B  
               __size_ofi2_Bi 00B2                 __size_ofi2_Di 00B2                 __size_ofi2_Fi 00B2  
               __size_ofi2_Li 00B6                 __size_ofi2_Ri 00B6                 __size_ofi2_Ui 00B2  
               __size_of_main 010E                 __size_of_rand 0052  __end_of_native_surface_three 0611  
                    _scramble 0008                      led@count 0084                      _spiWrite 3AAE  
                    int$flags 0053                  spiInit@sType 0030             spiInit@sClockIdle 002E  
           ?i2_spiReceiveWait 0001            ??i2_spiReceiveWait 0001                    _INTCONbits 000FF2  
                    intlevel2 0000              ??_spiReceiveWait 002D   __end_of_native_surface_five 0609  
 __end_of_native_surface_four 060D                      restore@i 0086    __end_of_native_surface_one 0619  
  __end_of_native_surface_six 0605    __end_of_native_surface_two 0615  
